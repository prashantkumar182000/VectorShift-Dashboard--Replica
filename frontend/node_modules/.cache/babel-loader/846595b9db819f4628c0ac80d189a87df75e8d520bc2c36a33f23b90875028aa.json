{"ast":null,"code":"var _jsxFileName = \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001 (copy)/frontend/src/ui.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store';\nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/inputNode';\nimport { LLMNode } from './nodes/llmNode';\nimport { OutputNode } from './nodes/outputNode';\nimport { TextNode } from './nodes/textNode';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode\n};\nconst selector = state => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect\n});\nexport const PipelineUI = ({\n  darkMode\n}) => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const {\n    nodes,\n    edges,\n    getNodeID,\n    addNode,\n    onNodesChange,\n    onEdgesChange,\n    onConnect\n  } = useStore(selector, shallow);\n  const getInitNodeData = (nodeID, type) => {\n    let nodeData = {\n      id: nodeID,\n      nodeType: `${type}`\n    };\n    return nodeData;\n  };\n  const onLoad = useCallback(instance => {\n    setReactFlowInstance(instance);\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const appData = event.dataTransfer.getData('application/reactflow');\n    if (appData) {\n      const {\n        nodeType\n      } = JSON.parse(appData);\n\n      // Ensure the flow instance is ready\n      if (!reactFlowInstance) return;\n      const position = reactFlowInstance.project({\n        x: event.clientX - reactFlowBounds.left,\n        y: event.clientY - reactFlowBounds.top\n      });\n      const nodeID = getNodeID(nodeType);\n      const newNode = {\n        id: nodeID,\n        type: nodeType,\n        position,\n        data: getInitNodeData(nodeID, nodeType)\n      };\n      addNode(newNode);\n    }\n  }, [reactFlowInstance, getNodeID, addNode]);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const uiBackgroundColor = darkMode ? '#1b1822' : '#f0f0f0';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pipeline-ui\",\n    ref: reactFlowWrapper,\n    style: {\n      width: '100%',\n      height: '80vh',\n      background: uiBackgroundColor,\n      border: darkMode ? '1px solid #9b30ff' : '1px solid #ddd',\n      borderRadius: 8,\n      boxShadow: '0 2px 8px rgba(0, 0, 0, 0.2)'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      nodeTypes: nodeTypes,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onDrop: onDrop,\n      onDragOver: onDragOver,\n      onLoad: onLoad,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(PipelineUI, \"w6tI+WiipqOauZgXZ7lJotMv80o=\", false, function () {\n  return [useStore];\n});\n_c = PipelineUI;\nvar _c;\n$RefreshReg$(_c, \"PipelineUI\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","Controls","Background","MiniMap","useStore","shallow","InputNode","LLMNode","OutputNode","TextNode","jsxDEV","_jsxDEV","nodeTypes","customInput","llm","customOutput","text","selector","state","nodes","edges","getNodeID","addNode","onNodesChange","onEdgesChange","onConnect","PipelineUI","darkMode","_s","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","getInitNodeData","nodeID","type","nodeData","id","nodeType","onLoad","instance","onDrop","event","preventDefault","reactFlowBounds","current","getBoundingClientRect","appData","dataTransfer","getData","JSON","parse","position","project","x","clientX","left","y","clientY","top","newNode","data","onDragOver","dropEffect","uiBackgroundColor","className","ref","style","width","height","background","border","borderRadius","boxShadow","children","fitView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001 (copy)/frontend/src/ui.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store'; \nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/inputNode';\nimport { LLMNode } from './nodes/llmNode';\nimport { OutputNode } from './nodes/outputNode';\nimport { TextNode } from './nodes/textNode';\n\nimport 'reactflow/dist/style.css';\n\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode,\n};\n\nconst selector = (state) => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect,\n});\n\nexport const PipelineUI = ({ darkMode }) => {\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const {\n    nodes,\n    edges,\n    getNodeID,\n    addNode,\n    onNodesChange,\n    onEdgesChange,\n    onConnect,\n  } = useStore(selector, shallow);\n\n  const getInitNodeData = (nodeID, type) => {\n    let nodeData = { id: nodeID, nodeType: `${type}` };\n    return nodeData;\n  };\n\n  const onLoad = useCallback(\n    (instance) => {\n      setReactFlowInstance(instance);\n    },\n    []\n  );\n\n  const onDrop = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n      const appData = event.dataTransfer.getData('application/reactflow');\n\n      if (appData) {\n        const { nodeType } = JSON.parse(appData);\n        \n        // Ensure the flow instance is ready\n        if (!reactFlowInstance) return;\n\n        const position = reactFlowInstance.project({\n          x: event.clientX - reactFlowBounds.left,\n          y: event.clientY - reactFlowBounds.top,\n        });\n\n        const nodeID = getNodeID(nodeType);\n        const newNode = {\n          id: nodeID,\n          type: nodeType,\n          position,\n          data: getInitNodeData(nodeID, nodeType),\n        };\n\n        addNode(newNode);\n      }\n    },\n    [reactFlowInstance, getNodeID, addNode]\n  );\n\n  const onDragOver = useCallback((event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  const uiBackgroundColor = darkMode ? '#1b1822' : '#f0f0f0'; \n\n  return (\n    <div\n      className=\"pipeline-ui\"\n      ref={reactFlowWrapper}\n      style={{\n        width: '100%',\n        height: '80vh',\n        background: uiBackgroundColor,\n        border: darkMode ? '1px solid #9b30ff' : '1px solid #ddd',\n        borderRadius: 8,\n        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.2)',\n      }}\n    >\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        nodeTypes={nodeTypes}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n        onLoad={onLoad}\n        fitView\n      >\n        <MiniMap />\n        <Controls />\n        <Background />\n      </ReactFlow>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}