{"ast":null,"code":"// store.js\nimport { create } from 'zustand';\nimport { addEdge, applyNodeChanges, applyEdgeChanges, MarkerType } from 'reactflow';\nexport const useStore = create((set, get) => ({\n  nodes: [],\n  edges: [],\n  nodeIDs: {},\n  // Ensure nodeIDs is initialized\n  getNodeID: type => {\n    const newIDs = {\n      ...get().nodeIDs\n    };\n    if (newIDs[type] === undefined) {\n      newIDs[type] = 0;\n    }\n    newIDs[type] += 1;\n    set({\n      nodeIDs: newIDs\n    });\n    return `${type}-${newIDs[type]}`;\n  },\n  addNode: node => {\n    set({\n      nodes: [...get().nodes, node]\n    });\n  },\n  onNodesChange: changes => {\n    set({\n      nodes: applyNodeChanges(changes, get().nodes)\n    });\n  },\n  onEdgesChange: changes => {\n    set({\n      edges: applyEdgeChanges(changes, get().edges)\n    });\n  },\n  onConnect: connection => {\n    set({\n      edges: addEdge({\n        ...connection,\n        type: 'smoothstep',\n        animated: true,\n        markerEnd: {\n          type: MarkerType.Arrow,\n          height: '20px',\n          width: '20px'\n        }\n      }, get().edges)\n    });\n  },\n  updateNodeField: (nodeId, fieldName, fieldValue) => {\n    set({\n      nodes: get().nodes.map(node => node.id === nodeId ? {\n        ...node,\n        data: {\n          ...node.data,\n          [fieldName]: fieldValue\n        }\n      } : node)\n    });\n  }\n}));","map":{"version":3,"names":["create","addEdge","applyNodeChanges","applyEdgeChanges","MarkerType","useStore","set","get","nodes","edges","nodeIDs","getNodeID","type","newIDs","undefined","addNode","node","onNodesChange","changes","onEdgesChange","onConnect","connection","animated","markerEnd","Arrow","height","width","updateNodeField","nodeId","fieldName","fieldValue","map","id","data"],"sources":["/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001 (copy)/frontend/src/store.js"],"sourcesContent":["// store.js\nimport { create } from 'zustand';\nimport { addEdge, applyNodeChanges, applyEdgeChanges, MarkerType } from 'reactflow';\n\nexport const useStore = create((set, get) => ({\n    nodes: [],\n    edges: [],\n    nodeIDs: {}, // Ensure nodeIDs is initialized\n    getNodeID: (type) => {\n        const newIDs = {...get().nodeIDs};\n        if (newIDs[type] === undefined) {\n            newIDs[type] = 0;\n        }\n        newIDs[type] += 1;\n        set({nodeIDs: newIDs});\n        return `${type}-${newIDs[type]}`;\n    },\n    addNode: (node) => {\n        set({ nodes: [...get().nodes, node] });\n    },\n    onNodesChange: (changes) => {\n      set({ nodes: applyNodeChanges(changes, get().nodes) });\n    },\n    onEdgesChange: (changes) => {\n      set({ edges: applyEdgeChanges(changes, get().edges) });\n    },\n    onConnect: (connection) => {\n      set({ edges: addEdge({...connection, type: 'smoothstep', animated: true, markerEnd: {type: MarkerType.Arrow, height: '20px', width: '20px'}}, get().edges) });\n    },\n    updateNodeField: (nodeId, fieldName, fieldValue) => {\n      set({ nodes: get().nodes.map(node => node.id === nodeId ? { ...node, data: { ...node.data, [fieldName]: fieldValue } } : node) });\n    },\n}));\n"],"mappings":"AAAA;AACA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,OAAO,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,WAAW;AAEnF,OAAO,MAAMC,QAAQ,GAAGL,MAAM,CAAC,CAACM,GAAG,EAAEC,GAAG,MAAM;EAC1CC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,CAAC,CAAC;EAAE;EACbC,SAAS,EAAGC,IAAI,IAAK;IACjB,MAAMC,MAAM,GAAG;MAAC,GAAGN,GAAG,CAAC,CAAC,CAACG;IAAO,CAAC;IACjC,IAAIG,MAAM,CAACD,IAAI,CAAC,KAAKE,SAAS,EAAE;MAC5BD,MAAM,CAACD,IAAI,CAAC,GAAG,CAAC;IACpB;IACAC,MAAM,CAACD,IAAI,CAAC,IAAI,CAAC;IACjBN,GAAG,CAAC;MAACI,OAAO,EAAEG;IAAM,CAAC,CAAC;IACtB,OAAQ,GAAED,IAAK,IAAGC,MAAM,CAACD,IAAI,CAAE,EAAC;EACpC,CAAC;EACDG,OAAO,EAAGC,IAAI,IAAK;IACfV,GAAG,CAAC;MAAEE,KAAK,EAAE,CAAC,GAAGD,GAAG,CAAC,CAAC,CAACC,KAAK,EAAEQ,IAAI;IAAE,CAAC,CAAC;EAC1C,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BZ,GAAG,CAAC;MAAEE,KAAK,EAAEN,gBAAgB,CAACgB,OAAO,EAAEX,GAAG,CAAC,CAAC,CAACC,KAAK;IAAE,CAAC,CAAC;EACxD,CAAC;EACDW,aAAa,EAAGD,OAAO,IAAK;IAC1BZ,GAAG,CAAC;MAAEG,KAAK,EAAEN,gBAAgB,CAACe,OAAO,EAAEX,GAAG,CAAC,CAAC,CAACE,KAAK;IAAE,CAAC,CAAC;EACxD,CAAC;EACDW,SAAS,EAAGC,UAAU,IAAK;IACzBf,GAAG,CAAC;MAAEG,KAAK,EAAER,OAAO,CAAC;QAAC,GAAGoB,UAAU;QAAET,IAAI,EAAE,YAAY;QAAEU,QAAQ,EAAE,IAAI;QAAEC,SAAS,EAAE;UAACX,IAAI,EAAER,UAAU,CAACoB,KAAK;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAM;MAAC,CAAC,EAAEnB,GAAG,CAAC,CAAC,CAACE,KAAK;IAAE,CAAC,CAAC;EAC/J,CAAC;EACDkB,eAAe,EAAEA,CAACC,MAAM,EAAEC,SAAS,EAAEC,UAAU,KAAK;IAClDxB,GAAG,CAAC;MAAEE,KAAK,EAAED,GAAG,CAAC,CAAC,CAACC,KAAK,CAACuB,GAAG,CAACf,IAAI,IAAIA,IAAI,CAACgB,EAAE,KAAKJ,MAAM,GAAG;QAAE,GAAGZ,IAAI;QAAEiB,IAAI,EAAE;UAAE,GAAGjB,IAAI,CAACiB,IAAI;UAAE,CAACJ,SAAS,GAAGC;QAAW;MAAE,CAAC,GAAGd,IAAI;IAAE,CAAC,CAAC;EACnI;AACJ,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}