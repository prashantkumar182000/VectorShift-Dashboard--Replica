{"ast":null,"code":"var _jsxFileName = \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001 (copy)/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { PipelineToolbar } from './toolbar';\nimport { PipelineUI } from './ui';\nimport { SubmitButton } from './submit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const toggleDarkMode = () => {\n    document.body.classList.toggle('dark-mode');\n    setDarkMode(!darkMode);\n  };\n\n  // Sample node and edge data\n  const sampleNodes = [{\n    id: '1',\n    type: 'input',\n    data: {\n      label: 'Input Node'\n    },\n    position: {\n      x: 0,\n      y: 0\n    }\n  }, {\n    id: '2',\n    type: 'output',\n    data: {\n      label: 'Output Node'\n    },\n    position: {\n      x: 100,\n      y: 100\n    }\n  }];\n  const sampleEdges = [{\n    id: 'e1-2',\n    source: '1',\n    target: '2',\n    animated: true\n  }];\n\n  // Function to generate random positions\n  const randomizePositions = nodes => {\n    return nodes.map(node => ({\n      ...node,\n      position: {\n        x: Math.floor(Math.random() * 300),\n        y: Math.floor(Math.random() * 300)\n      }\n    }));\n  };\n\n  // Generate randomized data\n  const randomizedNodes = randomizePositions(sampleNodes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(PipelineToolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PipelineUI, {\n      darkMode: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      nodes: randomizedNodes,\n      edges: sampleEdges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 20,\n        right: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: darkMode,\n          onChange: toggleDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"slider round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D2+2tCNohYwQ9K/tGnxPgGRQSlM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PipelineToolbar","PipelineUI","SubmitButton","jsxDEV","_jsxDEV","App","_s","darkMode","setDarkMode","toggleDarkMode","document","body","classList","toggle","sampleNodes","id","type","data","label","position","x","y","sampleEdges","source","target","animated","randomizePositions","nodes","map","node","Math","floor","random","randomizedNodes","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","edges","top","right","className","checked","onChange","_c","$RefreshReg$"],"sources":["/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001 (copy)/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { PipelineToolbar } from './toolbar';\nimport { PipelineUI } from './ui';\nimport { SubmitButton } from './submit';\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const toggleDarkMode = () => {\n    document.body.classList.toggle('dark-mode');\n    setDarkMode(!darkMode);\n  };\n\n  // Sample node and edge data\n  const sampleNodes = [\n    { id: '1', type: 'input', data: { label: 'Input Node' }, position: { x: 0, y: 0 } },\n    { id: '2', type: 'output', data: { label: 'Output Node' }, position: { x: 100, y: 100 } }\n  ];\n\n  const sampleEdges = [\n    { id: 'e1-2', source: '1', target: '2', animated: true }\n  ];\n\n  // Function to generate random positions\n  const randomizePositions = (nodes) => {\n    return nodes.map(node => ({\n      ...node,\n      position: {\n        x: Math.floor(Math.random() * 300),\n        y: Math.floor(Math.random() * 300)\n      }\n    }));\n  };\n\n  // Generate randomized data\n  const randomizedNodes = randomizePositions(sampleNodes);\n\n  return (\n    <div style={{ padding: '20px', position: 'relative' }}>\n      <PipelineToolbar />\n      <PipelineUI darkMode={darkMode} />\n      <SubmitButton nodes={randomizedNodes} edges={sampleEdges} />\n      <div style={{ position: 'absolute', top: 20, right: 20 }}>\n        <label className=\"switch\">\n          <input type=\"checkbox\" checked={darkMode} onChange={toggleDarkMode} />\n          <span className=\"slider round\"></span>\n        </label>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}