{"ast":null,"code":"var _jsxFileName = \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001 (copy)/frontend/src/submit.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst submitPipeline = async (nodes, edges) => {\n  try {\n    // Ensure nodes and edges are formatted as expected\n    const formattedNodes = nodes.map(node => ({\n      id: node.id,\n      type: node.type,\n      position: node.position,\n      data: node.data\n    }));\n    const formattedEdges = edges.map(edge => ({\n      source: edge.source,\n      target: edge.target\n    }));\n\n    // Send the data to the backend\n    const response = await fetch('http://localhost:8000/pipelines/parse', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        nodes: formattedNodes,\n        edges: formattedEdges\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    // Parse the response data\n    const data = await response.json();\n\n    // Display an alert with the response values\n    alert(`Pipeline Information:\n      - Number of nodes: ${data.num_nodes}\n      - Number of edges: ${data.num_edges}\n      - Is the pipeline a DAG: ${data.is_dag ? 'Yes' : 'No'}\n    `);\n  } catch (error) {\n    console.error('There was a problem with the fetch operation:', error);\n    alert('Failed to submit the pipeline. Please check your backend connection.');\n  }\n};\nconst SubmitButton = ({\n  nodes,\n  edges\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => submitPipeline(nodes, edges),\n    style: {\n      padding: '10px 20px',\n      borderRadius: '8px',\n      backgroundColor: '#6072da',\n      color: '#fff',\n      border: '2px solid #040627',\n      cursor: 'pointer',\n      fontSize: '16px',\n      fontWeight: 'bold',\n      marginTop: '20px',\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n    },\n    children: \"Submit Pipeline\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = SubmitButton;\nexport { SubmitButton, submitPipeline };\nvar _c;\n$RefreshReg$(_c, \"SubmitButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","submitPipeline","nodes","edges","formattedNodes","map","node","id","type","position","data","formattedEdges","edge","source","target","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","alert","num_nodes","num_edges","is_dag","error","console","SubmitButton","onClick","style","padding","borderRadius","backgroundColor","color","border","cursor","fontSize","fontWeight","marginTop","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001 (copy)/frontend/src/submit.js"],"sourcesContent":["import React from 'react';\n\nconst submitPipeline = async (nodes, edges) => {\n  try {\n    // Ensure nodes and edges are formatted as expected\n    const formattedNodes = nodes.map(node => ({\n      id: node.id,\n      type: node.type,\n      position: node.position,\n      data: node.data\n    }));\n\n    const formattedEdges = edges.map(edge => ({\n      source: edge.source,\n      target: edge.target\n    }));\n\n    // Send the data to the backend\n    const response = await fetch('http://localhost:8000/pipelines/parse', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ nodes: formattedNodes, edges: formattedEdges }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    // Parse the response data\n    const data = await response.json();\n\n    // Display an alert with the response values\n    alert(`Pipeline Information:\n      - Number of nodes: ${data.num_nodes}\n      - Number of edges: ${data.num_edges}\n      - Is the pipeline a DAG: ${data.is_dag ? 'Yes' : 'No'}\n    `);\n  } catch (error) {\n    console.error('There was a problem with the fetch operation:', error);\n    alert('Failed to submit the pipeline. Please check your backend connection.');\n  }\n};\n\nconst SubmitButton = ({ nodes, edges }) => {\n  return (\n    <button\n      onClick={() => submitPipeline(nodes, edges)}\n      style={{\n        padding: '10px 20px',\n        borderRadius: '8px',\n        backgroundColor: '#6072da',\n        color: '#fff',\n        border: '2px solid #040627',\n        cursor: 'pointer',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        marginTop: '20px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n      }}\n    >\n      Submit Pipeline\n    </button>\n  );\n};\n\nexport { SubmitButton, submitPipeline };\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAG,MAAAA,CAAOC,KAAK,EAAEC,KAAK,KAAK;EAC7C,IAAI;IACF;IACA,MAAMC,cAAc,GAAGF,KAAK,CAACG,GAAG,CAACC,IAAI,KAAK;MACxCC,EAAE,EAAED,IAAI,CAACC,EAAE;MACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;MACvBC,IAAI,EAAEJ,IAAI,CAACI;IACb,CAAC,CAAC,CAAC;IAEH,MAAMC,cAAc,GAAGR,KAAK,CAACE,GAAG,CAACO,IAAI,KAAK;MACxCC,MAAM,EAAED,IAAI,CAACC,MAAM;MACnBC,MAAM,EAAEF,IAAI,CAACE;IACf,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEnB,KAAK,EAAEE,cAAc;QAAED,KAAK,EAAEQ;MAAe,CAAC;IACvE,CAAC,CAAC;IAEF,IAAI,CAACI,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;;IAEA;IACA,MAAMb,IAAI,GAAG,MAAMK,QAAQ,CAACS,IAAI,CAAC,CAAC;;IAElC;IACAC,KAAK,CAAE;AACX,2BAA2Bf,IAAI,CAACgB,SAAU;AAC1C,2BAA2BhB,IAAI,CAACiB,SAAU;AAC1C,iCAAiCjB,IAAI,CAACkB,MAAM,GAAG,KAAK,GAAG,IAAK;AAC5D,KAAK,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACrEJ,KAAK,CAAC,sEAAsE,CAAC;EAC/E;AACF,CAAC;AAED,MAAMM,YAAY,GAAGA,CAAC;EAAE7B,KAAK;EAAEC;AAAM,CAAC,KAAK;EACzC,oBACEH,OAAA;IACEgC,OAAO,EAAEA,CAAA,KAAM/B,cAAc,CAACC,KAAK,EAAEC,KAAK,CAAE;IAC5C8B,KAAK,EAAE;MACLC,OAAO,EAAE,WAAW;MACpBC,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,mBAAmB;MAC3BC,MAAM,EAAE,SAAS;MACjBC,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,MAAM;MAClBC,SAAS,EAAE,MAAM;MACjBC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,EACH;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GApBIlB,YAAY;AAsBlB,SAASA,YAAY,EAAE9B,cAAc;AAAG,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}