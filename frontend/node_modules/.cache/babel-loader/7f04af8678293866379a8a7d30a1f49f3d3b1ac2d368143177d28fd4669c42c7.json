{"ast":null,"code":"var _jsxFileName = \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001 (copy)/frontend/src/ui.js\",\n  _s = $RefreshSig$();\n// src/PipelineUI.js\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store';\nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/InputNode';\nimport { LLMNode } from './nodes/llmNode';\nimport { OutputNode } from './nodes/outputNode';\nimport { TextNode } from './nodes/textNode';\nimport { SubmitButton } from './submit'; // Import SubmitButton for pipeline submission\n\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode\n};\nconst selector = state => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect,\n  updateNodeField: state.updateNodeField // Add updateNodeField to selector\n});\n\nexport const PipelineUI = ({\n  darkMode\n}) => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const {\n    nodes,\n    edges,\n    getNodeID,\n    addNode,\n    onNodesChange,\n    onEdgesChange,\n    onConnect,\n    updateNodeField // Pass updateNodeField\n  } = useStore(selector, shallow);\n  const getInitNodeData = (nodeID, type) => {\n    let nodeData = {\n      id: nodeID,\n      nodeType: `${type}`\n    };\n    return nodeData;\n  };\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const appData = event.dataTransfer.getData('application/reactflow');\n    if (appData) {\n      const {\n        nodeType\n      } = JSON.parse(appData);\n      if (!reactFlowInstance) return;\n      const position = reactFlowInstance.project({\n        x: event.clientX - reactFlowBounds.left,\n        y: event.clientY - reactFlowBounds.top\n      });\n      const nodeID = getNodeID(nodeType);\n      const newNode = {\n        id: nodeID,\n        type: nodeType,\n        position,\n        data: getInitNodeData(nodeID, nodeType)\n      };\n      addNode(newNode);\n    }\n  }, [reactFlowInstance, getNodeID, addNode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: reactFlowWrapper,\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      nodeTypes: nodeTypes,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onDrop: onDrop,\n      onDragOver: event => event.preventDefault(),\n      onInit: setReactFlowInstance,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      nodes: nodes,\n      edges: edges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(PipelineUI, \"/jE9uR8g8jMxOXo+4DhlkfSy9KU=\", false, function () {\n  return [useStore];\n});\n_c = PipelineUI;\nvar _c;\n$RefreshReg$(_c, \"PipelineUI\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","Controls","Background","MiniMap","useStore","shallow","InputNode","LLMNode","OutputNode","TextNode","SubmitButton","jsxDEV","_jsxDEV","nodeTypes","customInput","llm","customOutput","text","selector","state","nodes","edges","getNodeID","addNode","onNodesChange","onEdgesChange","onConnect","updateNodeField","PipelineUI","darkMode","_s","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","getInitNodeData","nodeID","type","nodeData","id","nodeType","onDrop","event","preventDefault","reactFlowBounds","current","getBoundingClientRect","appData","dataTransfer","getData","JSON","parse","position","project","x","clientX","left","y","clientY","top","newNode","data","ref","style","width","height","children","onDragOver","onInit","fitView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001 (copy)/frontend/src/ui.js"],"sourcesContent":["// src/PipelineUI.js\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store';\nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/InputNode';\nimport { LLMNode } from './nodes/llmNode';\nimport { OutputNode } from './nodes/outputNode';\nimport { TextNode } from './nodes/textNode';\nimport { SubmitButton } from './submit'; // Import SubmitButton for pipeline submission\n\nimport 'reactflow/dist/style.css';\n\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode,\n};\n\nconst selector = (state) => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect,\n  updateNodeField: state.updateNodeField, // Add updateNodeField to selector\n});\n\nexport const PipelineUI = ({ darkMode }) => {\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const {\n    nodes,\n    edges,\n    getNodeID,\n    addNode,\n    onNodesChange,\n    onEdgesChange,\n    onConnect,\n    updateNodeField, // Pass updateNodeField\n  } = useStore(selector, shallow);\n\n  const getInitNodeData = (nodeID, type) => {\n    let nodeData = { id: nodeID, nodeType: `${type}` };\n    return nodeData;\n  };\n\n  const onDrop = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n      const appData = event.dataTransfer.getData('application/reactflow');\n\n      if (appData) {\n        const { nodeType } = JSON.parse(appData);\n\n        if (!reactFlowInstance) return;\n\n        const position = reactFlowInstance.project({\n          x: event.clientX - reactFlowBounds.left,\n          y: event.clientY - reactFlowBounds.top,\n        });\n\n        const nodeID = getNodeID(nodeType);\n        const newNode = {\n          id: nodeID,\n          type: nodeType,\n          position,\n          data: getInitNodeData(nodeID, nodeType),\n        };\n\n        addNode(newNode);\n      }\n    },\n    [reactFlowInstance, getNodeID, addNode]\n  );\n\n  return (\n    <div ref={reactFlowWrapper} style={{ width: '100%', height: '100%' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        nodeTypes={nodeTypes}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onDrop={onDrop}\n        onDragOver={(event) => event.preventDefault()}\n        onInit={setReactFlowInstance}\n        fitView\n      >\n        <Background />\n        <Controls />\n        <MiniMap />\n      </ReactFlow>\n      <SubmitButton nodes={nodes} edges={edges} /> {/* Ensure nodes and edges are passed to SubmitButton */}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}