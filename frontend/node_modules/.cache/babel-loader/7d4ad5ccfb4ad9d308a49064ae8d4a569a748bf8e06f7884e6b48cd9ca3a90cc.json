{"ast":null,"code":"var _jsxFileName = \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001/frontend/src/ui.js\",\n  _s = $RefreshSig$();\n// ui.js\n// Displays the drag-and-drop UI\n// --------------------------------------------------\n\nimport { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store';\nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/inputNode';\nimport { LLMNode } from './nodes/llmNode';\nimport { OutputNode } from './nodes/outputNode';\nimport { TextNode } from './nodes/textNode';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst gridSize = 20;\nconst proOptions = {\n  hideAttribution: true\n};\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode\n};\nconst selector = state => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect\n});\nexport const PipelineUI = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const {\n    nodes,\n    edges,\n    getNodeID,\n    addNode,\n    onNodesChange,\n    onEdgesChange,\n    onConnect\n  } = useStore(selector, shallow);\n  const getInitNodeData = (nodeID, type) => {\n    let nodeData = {\n      id: nodeID,\n      nodeType: `${type}`\n    };\n    return nodeData;\n  };\n  const onDrop = useCallback(event => {\n    var _event$dataTransfer;\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    if (event !== null && event !== void 0 && (_event$dataTransfer = event.dataTransfer) !== null && _event$dataTransfer !== void 0 && _event$dataTransfer.getData('application/reactflow')) {\n      const appData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\n      const type = appData === null || appData === void 0 ? void 0 : appData.nodeType;\n\n      // check if the dropped element is valid\n      if (typeof type === 'undefined' || !type) {\n        return;\n      }\n      const position = reactFlowInstance.project({\n        x: event.clientX - reactFlowBounds.left,\n        y: event.clientY - reactFlowBounds.top\n      });\n      const nodeID = getNodeID(type);\n      const newNode = {\n        id: nodeID,\n        type,\n        position,\n        data: getInitNodeData(nodeID, type)\n      };\n      addNode(newNode);\n    }\n  }, [reactFlowInstance, getNodeID, addNode] // Added missing dependencies\n  );\n\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: reactFlowWrapper,\n      style: {\n        width: '100vw',\n        height: '70vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        onDrop: onDrop,\n        onDragOver: onDragOver,\n        onInit: setReactFlowInstance,\n        nodeTypes: nodeTypes,\n        proOptions: proOptions,\n        snapGrid: [gridSize, gridSize],\n        connectionLineType: \"smoothstep\",\n        children: [/*#__PURE__*/_jsxDEV(Background, {\n          color: \"#aaa\",\n          gap: gridSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(PipelineUI, \"h1WzQvpnWrheoVUBQOslWqW8+CY=\", false, function () {\n  return [useStore];\n});\n_c = PipelineUI;\nvar _c;\n$RefreshReg$(_c, \"PipelineUI\");","map":{"version":3,"names":["useState","useRef","useCallback","ReactFlow","Controls","Background","MiniMap","useStore","shallow","InputNode","LLMNode","OutputNode","TextNode","jsxDEV","_jsxDEV","Fragment","_Fragment","gridSize","proOptions","hideAttribution","nodeTypes","customInput","llm","customOutput","text","selector","state","nodes","edges","getNodeID","addNode","onNodesChange","onEdgesChange","onConnect","PipelineUI","_s","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","getInitNodeData","nodeID","type","nodeData","id","nodeType","onDrop","event","_event$dataTransfer","preventDefault","reactFlowBounds","current","getBoundingClientRect","dataTransfer","getData","appData","JSON","parse","position","project","x","clientX","left","y","clientY","top","newNode","data","onDragOver","dropEffect","children","ref","style","width","height","onInit","snapGrid","connectionLineType","color","gap","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001/frontend/src/ui.js"],"sourcesContent":["// ui.js\n// Displays the drag-and-drop UI\n// --------------------------------------------------\n\nimport { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store';\nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/inputNode';\nimport { LLMNode } from './nodes/llmNode';\nimport { OutputNode } from './nodes/outputNode';\nimport { TextNode } from './nodes/textNode';\n\nimport 'reactflow/dist/style.css';\n\nconst gridSize = 20;\nconst proOptions = { hideAttribution: true };\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode,\n};\n\nconst selector = (state) => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect,\n});\n\nexport const PipelineUI = () => {\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const {\n    nodes,\n    edges,\n    getNodeID,\n    addNode,\n    onNodesChange,\n    onEdgesChange,\n    onConnect,\n  } = useStore(selector, shallow);\n\n  const getInitNodeData = (nodeID, type) => {\n    let nodeData = { id: nodeID, nodeType: `${type}` };\n    return nodeData;\n  };\n\n  const onDrop = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n      if (event?.dataTransfer?.getData('application/reactflow')) {\n        const appData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\n        const type = appData?.nodeType;\n\n        // check if the dropped element is valid\n        if (typeof type === 'undefined' || !type) {\n          return;\n        }\n\n        const position = reactFlowInstance.project({\n          x: event.clientX - reactFlowBounds.left,\n          y: event.clientY - reactFlowBounds.top,\n        });\n\n        const nodeID = getNodeID(type);\n        const newNode = {\n          id: nodeID,\n          type,\n          position,\n          data: getInitNodeData(nodeID, type),\n        };\n\n        addNode(newNode);\n      }\n    },\n    [reactFlowInstance, getNodeID, addNode] // Added missing dependencies\n  );\n\n  const onDragOver = useCallback((event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  return (\n    <>\n      <div ref={reactFlowWrapper} style={{ width: '100vw', height: '70vh' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n          onDrop={onDrop}\n          onDragOver={onDragOver}\n          onInit={setReactFlowInstance}\n          nodeTypes={nodeTypes}\n          proOptions={proOptions}\n          snapGrid={[gridSize, gridSize]}\n          connectionLineType=\"smoothstep\"\n        >\n          <Background color=\"#aaa\" gap={gridSize} />\n          <Controls />\n          <MiniMap />\n        </ReactFlow>\n      </div>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}