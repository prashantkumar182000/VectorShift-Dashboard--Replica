{"ast":null,"code":"import _createForOfIteratorHelper from \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/Prashant_Kumar_technical_assessment/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/Prashant_Kumar_technical_assessment/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/Prashant_Kumar_technical_assessment/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/Prashant_Kumar_technical_assessment/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/Prashant_Kumar_technical_assessment/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/Prashant_Kumar_technical_assessment/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _handleDirections, _MarkerSymbols, _oppositePosition;\nvar _excluded = [\"position\", \"children\", \"className\", \"style\"],\n  _excluded2 = [\"x\", \"y\", \"label\", \"labelStyle\", \"labelShowBg\", \"labelBgStyle\", \"labelBgPadding\", \"labelBgBorderRadius\", \"children\", \"className\"],\n  _excluded3 = [\"id\"],\n  _excluded4 = [\"type\", \"position\", \"isValidConnection\", \"isConnectable\", \"isConnectableStart\", \"isConnectableEnd\", \"id\", \"onConnect\", \"children\", \"className\", \"onMouseDown\", \"onTouchStart\"],\n  _excluded5 = [\"nodes\", \"edges\", \"defaultNodes\", \"defaultEdges\", \"className\", \"nodeTypes\", \"edgeTypes\", \"onNodeClick\", \"onEdgeClick\", \"onInit\", \"onMove\", \"onMoveStart\", \"onMoveEnd\", \"onConnect\", \"onConnectStart\", \"onConnectEnd\", \"onClickConnectStart\", \"onClickConnectEnd\", \"onNodeMouseEnter\", \"onNodeMouseMove\", \"onNodeMouseLeave\", \"onNodeContextMenu\", \"onNodeDoubleClick\", \"onNodeDragStart\", \"onNodeDrag\", \"onNodeDragStop\", \"onNodesDelete\", \"onEdgesDelete\", \"onSelectionChange\", \"onSelectionDragStart\", \"onSelectionDrag\", \"onSelectionDragStop\", \"onSelectionContextMenu\", \"onSelectionStart\", \"onSelectionEnd\", \"connectionMode\", \"connectionLineType\", \"connectionLineStyle\", \"connectionLineComponent\", \"connectionLineContainerStyle\", \"deleteKeyCode\", \"selectionKeyCode\", \"selectionOnDrag\", \"selectionMode\", \"panActivationKeyCode\", \"multiSelectionKeyCode\", \"zoomActivationKeyCode\", \"snapToGrid\", \"snapGrid\", \"onlyRenderVisibleElements\", \"selectNodesOnDrag\", \"nodesDraggable\", \"nodesConnectable\", \"nodesFocusable\", \"nodeOrigin\", \"edgesFocusable\", \"edgesUpdatable\", \"elementsSelectable\", \"defaultViewport\", \"minZoom\", \"maxZoom\", \"translateExtent\", \"preventScrolling\", \"nodeExtent\", \"defaultMarkerColor\", \"zoomOnScroll\", \"zoomOnPinch\", \"panOnScroll\", \"panOnScrollSpeed\", \"panOnScrollMode\", \"zoomOnDoubleClick\", \"panOnDrag\", \"onPaneClick\", \"onPaneMouseEnter\", \"onPaneMouseMove\", \"onPaneMouseLeave\", \"onPaneScroll\", \"onPaneContextMenu\", \"children\", \"onEdgeUpdate\", \"onEdgeContextMenu\", \"onEdgeDoubleClick\", \"onEdgeMouseEnter\", \"onEdgeMouseMove\", \"onEdgeMouseLeave\", \"onEdgeUpdateStart\", \"onEdgeUpdateEnd\", \"edgeUpdaterRadius\", \"onNodesChange\", \"onEdgesChange\", \"noDragClassName\", \"noWheelClassName\", \"noPanClassName\", \"fitView\", \"fitViewOptions\", \"connectOnClick\", \"attributionPosition\", \"proOptions\", \"defaultEdgeOptions\", \"elevateNodesOnSelect\", \"elevateEdgesOnSelect\", \"disableKeyboardA11y\", \"autoPanOnConnect\", \"autoPanOnNodeDrag\", \"connectionRadius\", \"isValidConnection\", \"onError\", \"style\", \"id\"];\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { createPortal } from 'react-dom';\nvar StoreContext = createContext(null);\nvar Provider$1 = StoreContext.Provider;\nvar errorMessages = {\n  error001: function error001() {\n    return '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001';\n  },\n  error002: function error002() {\n    return \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\";\n  },\n  error003: function error003(nodeType) {\n    return \"Node type \\\"\".concat(nodeType, \"\\\" not found. Using fallback type \\\"default\\\".\");\n  },\n  error004: function error004() {\n    return 'The React Flow parent container needs a width and a height to render the graph.';\n  },\n  error005: function error005() {\n    return 'Only child nodes can use a parent extent.';\n  },\n  error006: function error006() {\n    return \"Can't create edge. An edge needs a source and a target.\";\n  },\n  error007: function error007(id) {\n    return \"The old edge with id=\".concat(id, \" does not exist.\");\n  },\n  error009: function error009(type) {\n    return \"Marker type \\\"\".concat(type, \"\\\" doesn't exist.\");\n  },\n  error008: function error008(sourceHandle, edge) {\n    return \"Couldn't create edge for \".concat(!sourceHandle ? 'source' : 'target', \" handle id: \\\"\").concat(!sourceHandle ? edge.sourceHandle : edge.targetHandle, \"\\\", edge id: \").concat(edge.id, \".\");\n  },\n  error010: function error010() {\n    return 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.';\n  },\n  error011: function error011(edgeType) {\n    return \"Edge type \\\"\".concat(edgeType, \"\\\" not found. Using fallback type \\\"default\\\".\");\n  },\n  error012: function error012(id) {\n    return \"Node with id \\\"\".concat(id, \"\\\" does not exist, it may have been removed. This can happen when a node is deleted before the \\\"onNodeClick\\\" handler is called.\");\n  }\n};\nvar zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n  var store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nvar useStoreApi = function useStoreApi() {\n  var store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useMemo(function () {\n    return {\n      getState: store.getState,\n      setState: store.setState,\n      subscribe: store.subscribe,\n      destroy: store.destroy\n    };\n  }, [store]);\n};\nvar selector$g = function selector$g(s) {\n  return s.userSelectionActive ? 'none' : 'all';\n};\nfunction Panel(_ref) {\n  var position = _ref.position,\n    children = _ref.children,\n    className = _ref.className,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var pointerEvents = useStore(selector$g);\n  var positionClasses = \"\".concat(position).split('-');\n  return jsx(\"div\", _objectSpread(_objectSpread({\n    className: cc(['react-flow__panel', className].concat(_toConsumableArray(positionClasses))),\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      pointerEvents: pointerEvents\n    })\n  }, rest), {}, {\n    children: children\n  }));\n}\nfunction Attribution(_ref2) {\n  var proOptions = _ref2.proOptions,\n    _ref2$position = _ref2.position,\n    position = _ref2$position === void 0 ? 'bottom-right' : _ref2$position;\n  if (proOptions !== null && proOptions !== void 0 && proOptions.hideAttribution) {\n    return null;\n  }\n  return jsx(Panel, {\n    position: position,\n    className: \"react-flow__attribution\",\n    \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\",\n    children: jsx(\"a\", {\n      href: \"https://reactflow.dev\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": \"React Flow attribution\",\n      children: \"React Flow\"\n    })\n  });\n}\nvar EdgeText = function EdgeText(_ref3) {\n  var x = _ref3.x,\n    y = _ref3.y,\n    label = _ref3.label,\n    _ref3$labelStyle = _ref3.labelStyle,\n    labelStyle = _ref3$labelStyle === void 0 ? {} : _ref3$labelStyle,\n    _ref3$labelShowBg = _ref3.labelShowBg,\n    labelShowBg = _ref3$labelShowBg === void 0 ? true : _ref3$labelShowBg,\n    _ref3$labelBgStyle = _ref3.labelBgStyle,\n    labelBgStyle = _ref3$labelBgStyle === void 0 ? {} : _ref3$labelBgStyle,\n    _ref3$labelBgPadding = _ref3.labelBgPadding,\n    labelBgPadding = _ref3$labelBgPadding === void 0 ? [2, 4] : _ref3$labelBgPadding,\n    _ref3$labelBgBorderRa = _ref3.labelBgBorderRadius,\n    labelBgBorderRadius = _ref3$labelBgBorderRa === void 0 ? 2 : _ref3$labelBgBorderRa,\n    children = _ref3.children,\n    className = _ref3.className,\n    rest = _objectWithoutProperties(_ref3, _excluded2);\n  var edgeRef = useRef(null);\n  var _useState = useState({\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    edgeTextBbox = _useState2[0],\n    setEdgeTextBbox = _useState2[1];\n  var edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n  useEffect(function () {\n    if (edgeRef.current) {\n      var textBbox = edgeRef.current.getBBox();\n      setEdgeTextBbox({\n        x: textBbox.x,\n        y: textBbox.y,\n        width: textBbox.width,\n        height: textBbox.height\n      });\n    }\n  }, [label]);\n  if (typeof label === 'undefined' || !label) {\n    return null;\n  }\n  return jsxs(\"g\", _objectSpread(_objectSpread({\n    transform: \"translate(\".concat(x - edgeTextBbox.width / 2, \" \").concat(y - edgeTextBbox.height / 2, \")\"),\n    className: edgeTextClasses,\n    visibility: edgeTextBbox.width ? 'visible' : 'hidden'\n  }, rest), {}, {\n    children: [labelShowBg && jsx(\"rect\", {\n      width: edgeTextBbox.width + 2 * labelBgPadding[0],\n      x: -labelBgPadding[0],\n      y: -labelBgPadding[1],\n      height: edgeTextBbox.height + 2 * labelBgPadding[1],\n      className: \"react-flow__edge-textbg\",\n      style: labelBgStyle,\n      rx: labelBgBorderRadius,\n      ry: labelBgBorderRadius\n    }), jsx(\"text\", {\n      className: \"react-flow__edge-text\",\n      y: edgeTextBbox.height / 2,\n      dy: \"0.3em\",\n      ref: edgeRef,\n      style: labelStyle,\n      children: label\n    }), children]\n  }));\n};\nvar EdgeText$1 = memo(EdgeText);\nvar getDimensions = function getDimensions(node) {\n  return {\n    width: node.offsetWidth,\n    height: node.offsetHeight\n  };\n};\nvar clamp = function clamp(val) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.min(Math.max(val, min), max);\n};\nvar clampPosition = function clampPosition() {\n  var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    x: 0,\n    y: 0\n  };\n  var extent = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1])\n  };\n};\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nvar calcAutoPanVelocity = function calcAutoPanVelocity(value, min, max) {\n  if (value < min) {\n    return clamp(Math.abs(value - min), 1, 50) / 50;\n  } else if (value > max) {\n    return -clamp(Math.abs(value - max), 1, 50) / 50;\n  }\n  return 0;\n};\nvar calcAutoPan = function calcAutoPan(pos, bounds) {\n  var xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n  var yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n  return [xMovement, yMovement];\n};\nvar getHostForElement = function getHostForElement(element) {\n  var _element$getRootNode, _window;\n  return ((_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element)) || ((_window = window) === null || _window === void 0 ? void 0 : _window.document);\n};\nvar getBoundsOfBoxes = function getBoundsOfBoxes(box1, box2) {\n  return {\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2)\n  };\n};\nvar rectToBox = function rectToBox(_ref4) {\n  var x = _ref4.x,\n    y = _ref4.y,\n    width = _ref4.width,\n    height = _ref4.height;\n  return {\n    x: x,\n    y: y,\n    x2: x + width,\n    y2: y + height\n  };\n};\nvar boxToRect = function boxToRect(_ref5) {\n  var x = _ref5.x,\n    y = _ref5.y,\n    x2 = _ref5.x2,\n    y2 = _ref5.y2;\n  return {\n    x: x,\n    y: y,\n    width: x2 - x,\n    height: y2 - y\n  };\n};\nvar nodeToRect = function nodeToRect(node) {\n  return _objectSpread(_objectSpread({}, node.positionAbsolute || {\n    x: 0,\n    y: 0\n  }), {}, {\n    width: node.width || 0,\n    height: node.height || 0\n  });\n};\nvar getBoundsOfRects = function getBoundsOfRects(rect1, rect2) {\n  return boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\n};\nvar getOverlappingArea = function getOverlappingArea(rectA, rectB) {\n  var xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n  var yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n  return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar isRectObject = function isRectObject(obj) {\n  return isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n};\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(n) && isFinite(n);\n};\nvar internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nvar elementSelectionKeys = ['Enter', ' ', 'Escape'];\nvar devWarn = function devWarn(id, message) {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\"[React Flow]: \".concat(message, \" Help: https://reactflow.dev/error#\").concat(id));\n  }\n};\nvar isReactKeyboardEvent = function isReactKeyboardEvent(event) {\n  return 'nativeEvent' in event;\n};\nfunction isInputDOMNode(event) {\n  var _kbEvent$composedPath;\n  var kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n  // using composed path for handling shadow dom\n  var target = ((_kbEvent$composedPath = kbEvent.composedPath) === null || _kbEvent$composedPath === void 0 || (_kbEvent$composedPath = _kbEvent$composedPath.call(kbEvent)) === null || _kbEvent$composedPath === void 0 ? void 0 : _kbEvent$composedPath[0]) || event.target;\n  var isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target === null || target === void 0 ? void 0 : target.nodeName) || (target === null || target === void 0 ? void 0 : target.hasAttribute('contenteditable'));\n  // when an input field is focused we don't want to trigger deletion or movement of nodes\n  return isInput || !!(target !== null && target !== void 0 && target.closest('.nokey'));\n}\nvar isMouseEvent = function isMouseEvent(event) {\n  return 'clientX' in event;\n};\nvar getEventPosition = function getEventPosition(event, bounds) {\n  var _event$touches, _event$touches2, _bounds$left, _bounds$top;\n  var isMouseTriggered = isMouseEvent(event);\n  var evtX = isMouseTriggered ? event.clientX : (_event$touches = event.touches) === null || _event$touches === void 0 ? void 0 : _event$touches[0].clientX;\n  var evtY = isMouseTriggered ? event.clientY : (_event$touches2 = event.touches) === null || _event$touches2 === void 0 ? void 0 : _event$touches2[0].clientY;\n  return {\n    x: evtX - ((_bounds$left = bounds === null || bounds === void 0 ? void 0 : bounds.left) !== null && _bounds$left !== void 0 ? _bounds$left : 0),\n    y: evtY - ((_bounds$top = bounds === null || bounds === void 0 ? void 0 : bounds.top) !== null && _bounds$top !== void 0 ? _bounds$top : 0)\n  };\n};\nvar isMacOs = function isMacOs() {\n  var _navigator;\n  return typeof navigator !== 'undefined' && ((_navigator = navigator) === null || _navigator === void 0 || (_navigator = _navigator.userAgent) === null || _navigator === void 0 ? void 0 : _navigator.indexOf('Mac')) >= 0;\n};\nvar BaseEdge = function BaseEdge(_ref6) {\n  var id = _ref6.id,\n    path = _ref6.path,\n    labelX = _ref6.labelX,\n    labelY = _ref6.labelY,\n    label = _ref6.label,\n    labelStyle = _ref6.labelStyle,\n    labelShowBg = _ref6.labelShowBg,\n    labelBgStyle = _ref6.labelBgStyle,\n    labelBgPadding = _ref6.labelBgPadding,\n    labelBgBorderRadius = _ref6.labelBgBorderRadius,\n    style = _ref6.style,\n    markerEnd = _ref6.markerEnd,\n    markerStart = _ref6.markerStart,\n    _ref6$interactionWidt = _ref6.interactionWidth,\n    interactionWidth = _ref6$interactionWidt === void 0 ? 20 : _ref6$interactionWidt;\n  return jsxs(Fragment, {\n    children: [jsx(\"path\", {\n      id: id,\n      style: style,\n      d: path,\n      fill: \"none\",\n      className: \"react-flow__edge-path\",\n      markerEnd: markerEnd,\n      markerStart: markerStart\n    }), interactionWidth && jsx(\"path\", {\n      d: path,\n      fill: \"none\",\n      strokeOpacity: 0,\n      strokeWidth: interactionWidth,\n      className: \"react-flow__edge-interaction\"\n    }), label && isNumeric(labelX) && isNumeric(labelY) ? jsx(EdgeText$1, {\n      x: labelX,\n      y: labelY,\n      label: label,\n      labelStyle: labelStyle,\n      labelShowBg: labelShowBg,\n      labelBgStyle: labelBgStyle,\n      labelBgPadding: labelBgPadding,\n      labelBgBorderRadius: labelBgBorderRadius\n    }) : null]\n  });\n};\nBaseEdge.displayName = 'BaseEdge';\nvar getMarkerEnd = function getMarkerEnd(markerType, markerEndId) {\n  if (typeof markerEndId !== 'undefined' && markerEndId) {\n    return \"url(#\".concat(markerEndId, \")\");\n  }\n  return typeof markerType !== 'undefined' ? \"url(#react-flow__\".concat(markerType, \")\") : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n  return handler === undefined ? handler : function (event) {\n    var edge = getState().edges.find(function (e) {\n      return e.id === id;\n    });\n    if (edge) {\n      handler(event, _objectSpread({}, edge));\n    }\n  };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter(_ref7) {\n  var sourceX = _ref7.sourceX,\n    sourceY = _ref7.sourceY,\n    targetX = _ref7.targetX,\n    targetY = _ref7.targetY;\n  var xOffset = Math.abs(targetX - sourceX) / 2;\n  var centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n  var yOffset = Math.abs(targetY - sourceY) / 2;\n  var centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n  return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter(_ref8) {\n  var sourceX = _ref8.sourceX,\n    sourceY = _ref8.sourceY,\n    targetX = _ref8.targetX,\n    targetY = _ref8.targetY,\n    sourceControlX = _ref8.sourceControlX,\n    sourceControlY = _ref8.sourceControlY,\n    targetControlX = _ref8.targetControlX,\n    targetControlY = _ref8.targetControlY;\n  // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n  // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n  var centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n  var centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n  var offsetX = Math.abs(centerX - sourceX);\n  var offsetY = Math.abs(centerY - sourceY);\n  return [centerX, centerY, offsetX, offsetY];\n}\nvar ConnectionMode;\n(function (ConnectionMode) {\n  ConnectionMode[\"Strict\"] = \"strict\";\n  ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n  PanOnScrollMode[\"Free\"] = \"free\";\n  PanOnScrollMode[\"Vertical\"] = \"vertical\";\n  PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n  SelectionMode[\"Partial\"] = \"partial\";\n  SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n  ConnectionLineType[\"Bezier\"] = \"default\";\n  ConnectionLineType[\"Straight\"] = \"straight\";\n  ConnectionLineType[\"Step\"] = \"step\";\n  ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n  ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n  MarkerType[\"Arrow\"] = \"arrow\";\n  MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\nvar Position;\n(function (Position) {\n  Position[\"Left\"] = \"left\";\n  Position[\"Top\"] = \"top\";\n  Position[\"Right\"] = \"right\";\n  Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nfunction getControl(_ref9) {\n  var pos = _ref9.pos,\n    x1 = _ref9.x1,\n    y1 = _ref9.y1,\n    x2 = _ref9.x2,\n    y2 = _ref9.y2;\n  if (pos === Position.Left || pos === Position.Right) {\n    return [0.5 * (x1 + x2), y1];\n  }\n  return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath(_ref10) {\n  var sourceX = _ref10.sourceX,\n    sourceY = _ref10.sourceY,\n    _ref10$sourcePosition = _ref10.sourcePosition,\n    sourcePosition = _ref10$sourcePosition === void 0 ? Position.Bottom : _ref10$sourcePosition,\n    targetX = _ref10.targetX,\n    targetY = _ref10.targetY,\n    _ref10$targetPosition = _ref10.targetPosition,\n    targetPosition = _ref10$targetPosition === void 0 ? Position.Top : _ref10$targetPosition;\n  var _getControl = getControl({\n      pos: sourcePosition,\n      x1: sourceX,\n      y1: sourceY,\n      x2: targetX,\n      y2: targetY\n    }),\n    _getControl2 = _slicedToArray(_getControl, 2),\n    sourceControlX = _getControl2[0],\n    sourceControlY = _getControl2[1];\n  var _getControl3 = getControl({\n      pos: targetPosition,\n      x1: targetX,\n      y1: targetY,\n      x2: sourceX,\n      y2: sourceY\n    }),\n    _getControl4 = _slicedToArray(_getControl3, 2),\n    targetControlX = _getControl4[0],\n    targetControlY = _getControl4[1];\n  var _getBezierEdgeCenter = getBezierEdgeCenter({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY,\n      sourceControlX: sourceControlX,\n      sourceControlY: sourceControlY,\n      targetControlX: targetControlX,\n      targetControlY: targetControlY\n    }),\n    _getBezierEdgeCenter2 = _slicedToArray(_getBezierEdgeCenter, 4),\n    labelX = _getBezierEdgeCenter2[0],\n    labelY = _getBezierEdgeCenter2[1],\n    offsetX = _getBezierEdgeCenter2[2],\n    offsetY = _getBezierEdgeCenter2[3];\n  return [\"M\".concat(sourceX, \",\").concat(sourceY, \" C\").concat(sourceControlX, \",\").concat(sourceControlY, \" \").concat(targetControlX, \",\").concat(targetControlY, \" \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nvar SimpleBezierEdge = memo(function (_ref11) {\n  var sourceX = _ref11.sourceX,\n    sourceY = _ref11.sourceY,\n    targetX = _ref11.targetX,\n    targetY = _ref11.targetY,\n    _ref11$sourcePosition = _ref11.sourcePosition,\n    sourcePosition = _ref11$sourcePosition === void 0 ? Position.Bottom : _ref11$sourcePosition,\n    _ref11$targetPosition = _ref11.targetPosition,\n    targetPosition = _ref11$targetPosition === void 0 ? Position.Top : _ref11$targetPosition,\n    label = _ref11.label,\n    labelStyle = _ref11.labelStyle,\n    labelShowBg = _ref11.labelShowBg,\n    labelBgStyle = _ref11.labelBgStyle,\n    labelBgPadding = _ref11.labelBgPadding,\n    labelBgBorderRadius = _ref11.labelBgBorderRadius,\n    style = _ref11.style,\n    markerEnd = _ref11.markerEnd,\n    markerStart = _ref11.markerStart,\n    interactionWidth = _ref11.interactionWidth;\n  var _getSimpleBezierPath = getSimpleBezierPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourcePosition: sourcePosition,\n      targetX: targetX,\n      targetY: targetY,\n      targetPosition: targetPosition\n    }),\n    _getSimpleBezierPath2 = _slicedToArray(_getSimpleBezierPath, 3),\n    path = _getSimpleBezierPath2[0],\n    labelX = _getSimpleBezierPath2[1],\n    labelY = _getSimpleBezierPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\nvar handleDirections = (_handleDirections = {}, _defineProperty(_handleDirections, Position.Left, {\n  x: -1,\n  y: 0\n}), _defineProperty(_handleDirections, Position.Right, {\n  x: 1,\n  y: 0\n}), _defineProperty(_handleDirections, Position.Top, {\n  x: 0,\n  y: -1\n}), _defineProperty(_handleDirections, Position.Bottom, {\n  x: 0,\n  y: 1\n}), _handleDirections);\nvar getDirection = function getDirection(_ref12) {\n  var source = _ref12.source,\n    _ref12$sourcePosition = _ref12.sourcePosition,\n    sourcePosition = _ref12$sourcePosition === void 0 ? Position.Bottom : _ref12$sourcePosition,\n    target = _ref12.target;\n  if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n    return source.x < target.x ? {\n      x: 1,\n      y: 0\n    } : {\n      x: -1,\n      y: 0\n    };\n  }\n  return source.y < target.y ? {\n    x: 0,\n    y: 1\n  } : {\n    x: 0,\n    y: -1\n  };\n};\nvar distance = function distance(a, b) {\n  return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n};\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints(_ref13) {\n  var source = _ref13.source,\n    _ref13$sourcePosition = _ref13.sourcePosition,\n    sourcePosition = _ref13$sourcePosition === void 0 ? Position.Bottom : _ref13$sourcePosition,\n    target = _ref13.target,\n    _ref13$targetPosition = _ref13.targetPosition,\n    targetPosition = _ref13$targetPosition === void 0 ? Position.Top : _ref13$targetPosition,\n    center = _ref13.center,\n    offset = _ref13.offset;\n  var sourceDir = handleDirections[sourcePosition];\n  var targetDir = handleDirections[targetPosition];\n  var sourceGapped = {\n    x: source.x + sourceDir.x * offset,\n    y: source.y + sourceDir.y * offset\n  };\n  var targetGapped = {\n    x: target.x + targetDir.x * offset,\n    y: target.y + targetDir.y * offset\n  };\n  var dir = getDirection({\n    source: sourceGapped,\n    sourcePosition: sourcePosition,\n    target: targetGapped\n  });\n  var dirAccessor = dir.x !== 0 ? 'x' : 'y';\n  var currDir = dir[dirAccessor];\n  var points = [];\n  var centerX, centerY;\n  var sourceGapOffset = {\n    x: 0,\n    y: 0\n  };\n  var targetGapOffset = {\n    x: 0,\n    y: 0\n  };\n  var _getEdgeCenter = getEdgeCenter({\n      sourceX: source.x,\n      sourceY: source.y,\n      targetX: target.x,\n      targetY: target.y\n    }),\n    _getEdgeCenter2 = _slicedToArray(_getEdgeCenter, 4),\n    defaultCenterX = _getEdgeCenter2[0],\n    defaultCenterY = _getEdgeCenter2[1],\n    defaultOffsetX = _getEdgeCenter2[2],\n    defaultOffsetY = _getEdgeCenter2[3];\n  // opposite handle positions, default case\n  if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n    centerX = center.x || defaultCenterX;\n    centerY = center.y || defaultCenterY;\n    //    --->\n    //    |\n    // >---\n    var verticalSplit = [{\n      x: centerX,\n      y: sourceGapped.y\n    }, {\n      x: centerX,\n      y: targetGapped.y\n    }];\n    //    |\n    //  ---\n    //  |\n    var horizontalSplit = [{\n      x: sourceGapped.x,\n      y: centerY\n    }, {\n      x: targetGapped.x,\n      y: centerY\n    }];\n    if (sourceDir[dirAccessor] === currDir) {\n      points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n    } else {\n      points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n    }\n  } else {\n    // sourceTarget means we take x from source and y from target, targetSource is the opposite\n    var sourceTarget = [{\n      x: sourceGapped.x,\n      y: targetGapped.y\n    }];\n    var targetSource = [{\n      x: targetGapped.x,\n      y: sourceGapped.y\n    }];\n    // this handles edges with same handle positions\n    if (dirAccessor === 'x') {\n      points = sourceDir.x === currDir ? targetSource : sourceTarget;\n    } else {\n      points = sourceDir.y === currDir ? sourceTarget : targetSource;\n    }\n    if (sourcePosition === targetPosition) {\n      var diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n      // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n      if (diff <= offset) {\n        var gapOffset = Math.min(offset - 1, offset - diff);\n        if (sourceDir[dirAccessor] === currDir) {\n          sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n        } else {\n          targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n        }\n      }\n    }\n    // these are conditions for handling mixed handle positions like Right -> Bottom for example\n    if (sourcePosition !== targetPosition) {\n      var dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n      var isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n      var sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n      var sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n      var flipSourceTarget = sourceDir[dirAccessor] === 1 && (!isSameDir && sourceGtTargetOppo || isSameDir && sourceLtTargetOppo) || sourceDir[dirAccessor] !== 1 && (!isSameDir && sourceLtTargetOppo || isSameDir && sourceGtTargetOppo);\n      if (flipSourceTarget) {\n        points = dirAccessor === 'x' ? sourceTarget : targetSource;\n      }\n    }\n    var sourceGapPoint = {\n      x: sourceGapped.x + sourceGapOffset.x,\n      y: sourceGapped.y + sourceGapOffset.y\n    };\n    var targetGapPoint = {\n      x: targetGapped.x + targetGapOffset.x,\n      y: targetGapped.y + targetGapOffset.y\n    };\n    var maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n    var maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n    // we want to place the label on the longest segment of the edge\n    if (maxXDistance >= maxYDistance) {\n      centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n      centerY = points[0].y;\n    } else {\n      centerX = points[0].x;\n      centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n    }\n  }\n  var pathPoints = [source, {\n    x: sourceGapped.x + sourceGapOffset.x,\n    y: sourceGapped.y + sourceGapOffset.y\n  }].concat(_toConsumableArray(points), [{\n    x: targetGapped.x + targetGapOffset.x,\n    y: targetGapped.y + targetGapOffset.y\n  }, target]);\n  return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n  var bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n  var x = b.x,\n    y = b.y;\n  // no bend\n  if (a.x === x && x === c.x || a.y === y && y === c.y) {\n    return \"L\".concat(x, \" \").concat(y);\n  }\n  // first segment is horizontal\n  if (a.y === y) {\n    var _xDir = a.x < c.x ? -1 : 1;\n    var _yDir = a.y < c.y ? 1 : -1;\n    return \"L \".concat(x + bendSize * _xDir, \",\").concat(y, \"Q \").concat(x, \",\").concat(y, \" \").concat(x, \",\").concat(y + bendSize * _yDir);\n  }\n  var xDir = a.x < c.x ? 1 : -1;\n  var yDir = a.y < c.y ? -1 : 1;\n  return \"L \".concat(x, \",\").concat(y + bendSize * yDir, \"Q \").concat(x, \",\").concat(y, \" \").concat(x + bendSize * xDir, \",\").concat(y);\n}\nfunction getSmoothStepPath(_ref14) {\n  var sourceX = _ref14.sourceX,\n    sourceY = _ref14.sourceY,\n    _ref14$sourcePosition = _ref14.sourcePosition,\n    sourcePosition = _ref14$sourcePosition === void 0 ? Position.Bottom : _ref14$sourcePosition,\n    targetX = _ref14.targetX,\n    targetY = _ref14.targetY,\n    _ref14$targetPosition = _ref14.targetPosition,\n    targetPosition = _ref14$targetPosition === void 0 ? Position.Top : _ref14$targetPosition,\n    _ref14$borderRadius = _ref14.borderRadius,\n    borderRadius = _ref14$borderRadius === void 0 ? 5 : _ref14$borderRadius,\n    centerX = _ref14.centerX,\n    centerY = _ref14.centerY,\n    _ref14$offset = _ref14.offset,\n    offset = _ref14$offset === void 0 ? 20 : _ref14$offset;\n  var _getPoints = getPoints({\n      source: {\n        x: sourceX,\n        y: sourceY\n      },\n      sourcePosition: sourcePosition,\n      target: {\n        x: targetX,\n        y: targetY\n      },\n      targetPosition: targetPosition,\n      center: {\n        x: centerX,\n        y: centerY\n      },\n      offset: offset\n    }),\n    _getPoints2 = _slicedToArray(_getPoints, 5),\n    points = _getPoints2[0],\n    labelX = _getPoints2[1],\n    labelY = _getPoints2[2],\n    offsetX = _getPoints2[3],\n    offsetY = _getPoints2[4];\n  var path = points.reduce(function (res, p, i) {\n    var segment = '';\n    if (i > 0 && i < points.length - 1) {\n      segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n    } else {\n      segment = \"\".concat(i === 0 ? 'M' : 'L').concat(p.x, \" \").concat(p.y);\n    }\n    res += segment;\n    return res;\n  }, '');\n  return [path, labelX, labelY, offsetX, offsetY];\n}\nvar SmoothStepEdge = memo(function (_ref15) {\n  var sourceX = _ref15.sourceX,\n    sourceY = _ref15.sourceY,\n    targetX = _ref15.targetX,\n    targetY = _ref15.targetY,\n    label = _ref15.label,\n    labelStyle = _ref15.labelStyle,\n    labelShowBg = _ref15.labelShowBg,\n    labelBgStyle = _ref15.labelBgStyle,\n    labelBgPadding = _ref15.labelBgPadding,\n    labelBgBorderRadius = _ref15.labelBgBorderRadius,\n    style = _ref15.style,\n    _ref15$sourcePosition = _ref15.sourcePosition,\n    sourcePosition = _ref15$sourcePosition === void 0 ? Position.Bottom : _ref15$sourcePosition,\n    _ref15$targetPosition = _ref15.targetPosition,\n    targetPosition = _ref15$targetPosition === void 0 ? Position.Top : _ref15$targetPosition,\n    markerEnd = _ref15.markerEnd,\n    markerStart = _ref15.markerStart,\n    pathOptions = _ref15.pathOptions,\n    interactionWidth = _ref15.interactionWidth;\n  var _getSmoothStepPath = getSmoothStepPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourcePosition: sourcePosition,\n      targetX: targetX,\n      targetY: targetY,\n      targetPosition: targetPosition,\n      borderRadius: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.borderRadius,\n      offset: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.offset\n    }),\n    _getSmoothStepPath2 = _slicedToArray(_getSmoothStepPath, 3),\n    path = _getSmoothStepPath2[0],\n    labelX = _getSmoothStepPath2[1],\n    labelY = _getSmoothStepPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\nvar StepEdge = memo(function (props) {\n  var _props$pathOptions2;\n  return jsx(SmoothStepEdge, _objectSpread(_objectSpread({}, props), {}, {\n    pathOptions: useMemo(function () {\n      var _props$pathOptions;\n      return {\n        borderRadius: 0,\n        offset: (_props$pathOptions = props.pathOptions) === null || _props$pathOptions === void 0 ? void 0 : _props$pathOptions.offset\n      };\n    }, [(_props$pathOptions2 = props.pathOptions) === null || _props$pathOptions2 === void 0 ? void 0 : _props$pathOptions2.offset])\n  }));\n});\nStepEdge.displayName = 'StepEdge';\nfunction getStraightPath(_ref16) {\n  var sourceX = _ref16.sourceX,\n    sourceY = _ref16.sourceY,\n    targetX = _ref16.targetX,\n    targetY = _ref16.targetY;\n  var _getEdgeCenter3 = getEdgeCenter({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY\n    }),\n    _getEdgeCenter4 = _slicedToArray(_getEdgeCenter3, 4),\n    labelX = _getEdgeCenter4[0],\n    labelY = _getEdgeCenter4[1],\n    offsetX = _getEdgeCenter4[2],\n    offsetY = _getEdgeCenter4[3];\n  return [\"M \".concat(sourceX, \",\").concat(sourceY, \"L \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nvar StraightEdge = memo(function (_ref17) {\n  var sourceX = _ref17.sourceX,\n    sourceY = _ref17.sourceY,\n    targetX = _ref17.targetX,\n    targetY = _ref17.targetY,\n    label = _ref17.label,\n    labelStyle = _ref17.labelStyle,\n    labelShowBg = _ref17.labelShowBg,\n    labelBgStyle = _ref17.labelBgStyle,\n    labelBgPadding = _ref17.labelBgPadding,\n    labelBgBorderRadius = _ref17.labelBgBorderRadius,\n    style = _ref17.style,\n    markerEnd = _ref17.markerEnd,\n    markerStart = _ref17.markerStart,\n    interactionWidth = _ref17.interactionWidth;\n  var _getStraightPath = getStraightPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY\n    }),\n    _getStraightPath2 = _slicedToArray(_getStraightPath, 3),\n    path = _getStraightPath2[0],\n    labelX = _getStraightPath2[1],\n    labelY = _getStraightPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nStraightEdge.displayName = 'StraightEdge';\nfunction calculateControlOffset(distance, curvature) {\n  if (distance >= 0) {\n    return 0.5 * distance;\n  }\n  return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature(_ref18) {\n  var pos = _ref18.pos,\n    x1 = _ref18.x1,\n    y1 = _ref18.y1,\n    x2 = _ref18.x2,\n    y2 = _ref18.y2,\n    c = _ref18.c;\n  switch (pos) {\n    case Position.Left:\n      return [x1 - calculateControlOffset(x1 - x2, c), y1];\n    case Position.Right:\n      return [x1 + calculateControlOffset(x2 - x1, c), y1];\n    case Position.Top:\n      return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n    case Position.Bottom:\n      return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n  }\n}\nfunction getBezierPath(_ref19) {\n  var sourceX = _ref19.sourceX,\n    sourceY = _ref19.sourceY,\n    _ref19$sourcePosition = _ref19.sourcePosition,\n    sourcePosition = _ref19$sourcePosition === void 0 ? Position.Bottom : _ref19$sourcePosition,\n    targetX = _ref19.targetX,\n    targetY = _ref19.targetY,\n    _ref19$targetPosition = _ref19.targetPosition,\n    targetPosition = _ref19$targetPosition === void 0 ? Position.Top : _ref19$targetPosition,\n    _ref19$curvature = _ref19.curvature,\n    curvature = _ref19$curvature === void 0 ? 0.25 : _ref19$curvature;\n  var _getControlWithCurvat = getControlWithCurvature({\n      pos: sourcePosition,\n      x1: sourceX,\n      y1: sourceY,\n      x2: targetX,\n      y2: targetY,\n      c: curvature\n    }),\n    _getControlWithCurvat2 = _slicedToArray(_getControlWithCurvat, 2),\n    sourceControlX = _getControlWithCurvat2[0],\n    sourceControlY = _getControlWithCurvat2[1];\n  var _getControlWithCurvat3 = getControlWithCurvature({\n      pos: targetPosition,\n      x1: targetX,\n      y1: targetY,\n      x2: sourceX,\n      y2: sourceY,\n      c: curvature\n    }),\n    _getControlWithCurvat4 = _slicedToArray(_getControlWithCurvat3, 2),\n    targetControlX = _getControlWithCurvat4[0],\n    targetControlY = _getControlWithCurvat4[1];\n  var _getBezierEdgeCenter3 = getBezierEdgeCenter({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY,\n      sourceControlX: sourceControlX,\n      sourceControlY: sourceControlY,\n      targetControlX: targetControlX,\n      targetControlY: targetControlY\n    }),\n    _getBezierEdgeCenter4 = _slicedToArray(_getBezierEdgeCenter3, 4),\n    labelX = _getBezierEdgeCenter4[0],\n    labelY = _getBezierEdgeCenter4[1],\n    offsetX = _getBezierEdgeCenter4[2],\n    offsetY = _getBezierEdgeCenter4[3];\n  return [\"M\".concat(sourceX, \",\").concat(sourceY, \" C\").concat(sourceControlX, \",\").concat(sourceControlY, \" \").concat(targetControlX, \",\").concat(targetControlY, \" \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nvar BezierEdge = memo(function (_ref20) {\n  var sourceX = _ref20.sourceX,\n    sourceY = _ref20.sourceY,\n    targetX = _ref20.targetX,\n    targetY = _ref20.targetY,\n    _ref20$sourcePosition = _ref20.sourcePosition,\n    sourcePosition = _ref20$sourcePosition === void 0 ? Position.Bottom : _ref20$sourcePosition,\n    _ref20$targetPosition = _ref20.targetPosition,\n    targetPosition = _ref20$targetPosition === void 0 ? Position.Top : _ref20$targetPosition,\n    label = _ref20.label,\n    labelStyle = _ref20.labelStyle,\n    labelShowBg = _ref20.labelShowBg,\n    labelBgStyle = _ref20.labelBgStyle,\n    labelBgPadding = _ref20.labelBgPadding,\n    labelBgBorderRadius = _ref20.labelBgBorderRadius,\n    style = _ref20.style,\n    markerEnd = _ref20.markerEnd,\n    markerStart = _ref20.markerStart,\n    pathOptions = _ref20.pathOptions,\n    interactionWidth = _ref20.interactionWidth;\n  var _getBezierPath = getBezierPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourcePosition: sourcePosition,\n      targetX: targetX,\n      targetY: targetY,\n      targetPosition: targetPosition,\n      curvature: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.curvature\n    }),\n    _getBezierPath2 = _slicedToArray(_getBezierPath, 3),\n    path = _getBezierPath2[0],\n    labelX = _getBezierPath2[1],\n    labelY = _getBezierPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nBezierEdge.displayName = 'BezierEdge';\nvar NodeIdContext = createContext(null);\nvar Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nvar useNodeId = function useNodeId() {\n  var nodeId = useContext(NodeIdContext);\n  return nodeId;\n};\nvar isEdge = function isEdge(element) {\n  return 'id' in element && 'source' in element && 'target' in element;\n};\nvar isNode = function isNode(element) {\n  return 'id' in element && !('source' in element) && !('target' in element);\n};\nvar getOutgoers = function getOutgoers(node, nodes, edges) {\n  if (!isNode(node)) {\n    return [];\n  }\n  var outgoerIds = edges.filter(function (e) {\n    return e.source === node.id;\n  }).map(function (e) {\n    return e.target;\n  });\n  return nodes.filter(function (n) {\n    return outgoerIds.includes(n.id);\n  });\n};\nvar getIncomers = function getIncomers(node, nodes, edges) {\n  if (!isNode(node)) {\n    return [];\n  }\n  var incomersIds = edges.filter(function (e) {\n    return e.target === node.id;\n  }).map(function (e) {\n    return e.source;\n  });\n  return nodes.filter(function (n) {\n    return incomersIds.includes(n.id);\n  });\n};\nvar getEdgeId = function getEdgeId(_ref21) {\n  var source = _ref21.source,\n    sourceHandle = _ref21.sourceHandle,\n    target = _ref21.target,\n    targetHandle = _ref21.targetHandle;\n  return \"reactflow__edge-\".concat(source).concat(sourceHandle || '', \"-\").concat(target).concat(targetHandle || '');\n};\nvar getMarkerId = function getMarkerId(marker, rfId) {\n  if (typeof marker === 'undefined') {\n    return '';\n  }\n  if (typeof marker === 'string') {\n    return marker;\n  }\n  var idPrefix = rfId ? \"\".concat(rfId, \"__\") : '';\n  return \"\".concat(idPrefix).concat(Object.keys(marker).sort().map(function (key) {\n    return \"\".concat(key, \"=\").concat(marker[key]);\n  }).join('&'));\n};\nvar connectionExists = function connectionExists(edge, edges) {\n  return edges.some(function (el) {\n    return el.source === edge.source && el.target === edge.target && (el.sourceHandle === edge.sourceHandle || !el.sourceHandle && !edge.sourceHandle) && (el.targetHandle === edge.targetHandle || !el.targetHandle && !edge.targetHandle);\n  });\n};\nvar addEdge = function addEdge(edgeParams, edges) {\n  if (!edgeParams.source || !edgeParams.target) {\n    devWarn('006', errorMessages['error006']());\n    return edges;\n  }\n  var edge;\n  if (isEdge(edgeParams)) {\n    edge = _objectSpread({}, edgeParams);\n  } else {\n    edge = _objectSpread(_objectSpread({}, edgeParams), {}, {\n      id: getEdgeId(edgeParams)\n    });\n  }\n  if (connectionExists(edge, edges)) {\n    return edges;\n  }\n  return edges.concat(edge);\n};\nvar updateEdge = function updateEdge(oldEdge, newConnection, edges) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n    shouldReplaceId: true\n  };\n  var oldEdgeId = oldEdge.id,\n    rest = _objectWithoutProperties(oldEdge, _excluded3);\n  if (!newConnection.source || !newConnection.target) {\n    devWarn('006', errorMessages['error006']());\n    return edges;\n  }\n  var foundEdge = edges.find(function (e) {\n    return e.id === oldEdgeId;\n  });\n  if (!foundEdge) {\n    devWarn('007', errorMessages['error007'](oldEdgeId));\n    return edges;\n  }\n  // Remove old edge and create the new edge with parameters of old edge.\n  var edge = _objectSpread(_objectSpread({}, rest), {}, {\n    id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n    source: newConnection.source,\n    target: newConnection.target,\n    sourceHandle: newConnection.sourceHandle,\n    targetHandle: newConnection.targetHandle\n  });\n  return edges.filter(function (e) {\n    return e.id !== oldEdgeId;\n  }).concat(edge);\n};\nvar pointToRendererPoint = function pointToRendererPoint(_ref22, _ref23, snapToGrid, _ref24) {\n  var x = _ref22.x,\n    y = _ref22.y;\n  var _ref25 = _slicedToArray(_ref23, 3),\n    tx = _ref25[0],\n    ty = _ref25[1],\n    tScale = _ref25[2];\n  var _ref26 = _slicedToArray(_ref24, 2),\n    snapX = _ref26[0],\n    snapY = _ref26[1];\n  var position = {\n    x: (x - tx) / tScale,\n    y: (y - ty) / tScale\n  };\n  if (snapToGrid) {\n    return {\n      x: snapX * Math.round(position.x / snapX),\n      y: snapY * Math.round(position.y / snapY)\n    };\n  }\n  return position;\n};\nvar rendererPointToPoint = function rendererPointToPoint(_ref27, _ref28) {\n  var x = _ref27.x,\n    y = _ref27.y;\n  var _ref29 = _slicedToArray(_ref28, 3),\n    tx = _ref29[0],\n    ty = _ref29[1],\n    tScale = _ref29[2];\n  return {\n    x: x * tScale + tx,\n    y: y * tScale + ty\n  };\n};\nvar getNodePositionWithOrigin = function getNodePositionWithOrigin(node) {\n  var _node$width, _node$height;\n  var nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (!node) {\n    return {\n      x: 0,\n      y: 0,\n      positionAbsolute: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n  var offsetX = ((_node$width = node.width) !== null && _node$width !== void 0 ? _node$width : 0) * nodeOrigin[0];\n  var offsetY = ((_node$height = node.height) !== null && _node$height !== void 0 ? _node$height : 0) * nodeOrigin[1];\n  var position = {\n    x: node.position.x - offsetX,\n    y: node.position.y - offsetY\n  };\n  return _objectSpread(_objectSpread({}, position), {}, {\n    positionAbsolute: node.positionAbsolute ? {\n      x: node.positionAbsolute.x - offsetX,\n      y: node.positionAbsolute.y - offsetY\n    } : position\n  });\n};\nvar getRectOfNodes = function getRectOfNodes(nodes) {\n  var nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (nodes.length === 0) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  var box = nodes.reduce(function (currBox, node) {\n    var _getNodePositionWithO = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute,\n      x = _getNodePositionWithO.x,\n      y = _getNodePositionWithO.y;\n    return getBoundsOfBoxes(currBox, rectToBox({\n      x: x,\n      y: y,\n      width: node.width || 0,\n      height: node.height || 0\n    }));\n  }, {\n    x: Infinity,\n    y: Infinity,\n    x2: -Infinity,\n    y2: -Infinity\n  });\n  return boxToRect(box);\n};\nvar getNodesInside = function getNodesInside(nodeInternals, rect) {\n  var _ref30 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0, 1],\n    _ref31 = _slicedToArray(_ref30, 3),\n    tx = _ref31[0],\n    ty = _ref31[1],\n    tScale = _ref31[2];\n  var partially = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var excludeNonSelectableNodes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var nodeOrigin = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [0, 0];\n  var paneRect = {\n    x: (rect.x - tx) / tScale,\n    y: (rect.y - ty) / tScale,\n    width: rect.width / tScale,\n    height: rect.height / tScale\n  };\n  var visibleNodes = [];\n  nodeInternals.forEach(function (node) {\n    var width = node.width,\n      height = node.height,\n      _node$selectable = node.selectable,\n      selectable = _node$selectable === void 0 ? true : _node$selectable,\n      _node$hidden = node.hidden,\n      hidden = _node$hidden === void 0 ? false : _node$hidden;\n    if (excludeNonSelectableNodes && !selectable || hidden) {\n      return false;\n    }\n    var _getNodePositionWithO2 = getNodePositionWithOrigin(node, nodeOrigin),\n      positionAbsolute = _getNodePositionWithO2.positionAbsolute;\n    var nodeRect = {\n      x: positionAbsolute.x,\n      y: positionAbsolute.y,\n      width: width || 0,\n      height: height || 0\n    };\n    var overlappingArea = getOverlappingArea(paneRect, nodeRect);\n    var notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n    var partiallyVisible = partially && overlappingArea > 0;\n    var area = (width || 0) * (height || 0);\n    var isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n    if (isVisible || node.dragging) {\n      visibleNodes.push(node);\n    }\n  });\n  return visibleNodes;\n};\nvar getConnectedEdges = function getConnectedEdges(nodes, edges) {\n  var nodeIds = nodes.map(function (node) {\n    return node.id;\n  });\n  return edges.filter(function (edge) {\n    return nodeIds.includes(edge.source) || nodeIds.includes(edge.target);\n  });\n};\nvar getTransformForBounds = function getTransformForBounds(bounds, width, height, minZoom, maxZoom) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n  var xZoom = width / (bounds.width * (1 + padding));\n  var yZoom = height / (bounds.height * (1 + padding));\n  var zoom = Math.min(xZoom, yZoom);\n  var clampedZoom = clamp(zoom, minZoom, maxZoom);\n  var boundsCenterX = bounds.x + bounds.width / 2;\n  var boundsCenterY = bounds.y + bounds.height / 2;\n  var x = width / 2 - boundsCenterX * clampedZoom;\n  var y = height / 2 - boundsCenterY * clampedZoom;\n  return [x, y, clampedZoom];\n};\nvar getD3Transition = function getD3Transition(selection) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n  return (handleBounds[type] || []).reduce(function (res, h) {\n    if (\"\".concat(node.id, \"-\").concat(h.id, \"-\").concat(type) !== currentHandle) {\n      var _node$positionAbsolut, _node$positionAbsolut2, _node$positionAbsolut3, _node$positionAbsolut4;\n      res.push({\n        id: h.id || null,\n        type: type,\n        nodeId: node.id,\n        x: ((_node$positionAbsolut = (_node$positionAbsolut2 = node.positionAbsolute) === null || _node$positionAbsolut2 === void 0 ? void 0 : _node$positionAbsolut2.x) !== null && _node$positionAbsolut !== void 0 ? _node$positionAbsolut : 0) + h.x + h.width / 2,\n        y: ((_node$positionAbsolut3 = (_node$positionAbsolut4 = node.positionAbsolute) === null || _node$positionAbsolut4 === void 0 ? void 0 : _node$positionAbsolut4.y) !== null && _node$positionAbsolut3 !== void 0 ? _node$positionAbsolut3 : 0) + h.y + h.height / 2\n      });\n    }\n    return res;\n  }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n  // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n  // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n  var _getEventPosition = getEventPosition(event),\n    x = _getEventPosition.x,\n    y = _getEventPosition.y;\n  var domNodes = doc.elementsFromPoint(x, y);\n  var handleBelow = domNodes.find(function (el) {\n    return el.classList.contains('react-flow__handle');\n  });\n  if (handleBelow) {\n    var handleNodeId = handleBelow.getAttribute('data-nodeid');\n    if (handleNodeId) {\n      var handleType = getHandleType(undefined, handleBelow);\n      var handleId = handleBelow.getAttribute('data-handleid');\n      var validHandleResult = validator({\n        nodeId: handleNodeId,\n        id: handleId,\n        type: handleType\n      });\n      if (validHandleResult) {\n        return {\n          handle: {\n            id: handleId,\n            type: handleType,\n            nodeId: handleNodeId,\n            x: pos.x,\n            y: pos.y\n          },\n          validHandleResult: validHandleResult\n        };\n      }\n    }\n  }\n  // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n  var closestHandles = [];\n  var minDistance = Infinity;\n  handles.forEach(function (handle) {\n    var distance = Math.sqrt(Math.pow(handle.x - pos.x, 2) + Math.pow(handle.y - pos.y, 2));\n    if (distance <= connectionRadius) {\n      var _validHandleResult = validator(handle);\n      if (distance <= minDistance) {\n        if (distance < minDistance) {\n          closestHandles = [{\n            handle: handle,\n            validHandleResult: _validHandleResult\n          }];\n        } else if (distance === minDistance) {\n          // when multiple handles are on the same distance we collect all of them\n          closestHandles.push({\n            handle: handle,\n            validHandleResult: _validHandleResult\n          });\n        }\n        minDistance = distance;\n      }\n    }\n  });\n  if (!closestHandles.length) {\n    return {\n      handle: null,\n      validHandleResult: defaultResult()\n    };\n  }\n  if (closestHandles.length === 1) {\n    return closestHandles[0];\n  }\n  var hasValidHandle = closestHandles.some(function (_ref32) {\n    var validHandleResult = _ref32.validHandleResult;\n    return validHandleResult.isValid;\n  });\n  var hasTargetHandle = closestHandles.some(function (_ref33) {\n    var handle = _ref33.handle;\n    return handle.type === 'target';\n  });\n  // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n  return closestHandles.find(function (_ref34) {\n    var handle = _ref34.handle,\n      validHandleResult = _ref34.validHandleResult;\n    return hasTargetHandle ? handle.type === 'target' : hasValidHandle ? validHandleResult.isValid : true;\n  }) || closestHandles[0];\n}\nvar nullConnection = {\n  source: null,\n  target: null,\n  sourceHandle: null,\n  targetHandle: null\n};\nvar defaultResult = function defaultResult() {\n  return {\n    handleDomNode: null,\n    isValid: false,\n    connection: nullConnection,\n    endHandle: null\n  };\n};\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n  var isTarget = fromType === 'target';\n  var handleToCheck = doc.querySelector(\".react-flow__handle[data-id=\\\"\".concat(handle === null || handle === void 0 ? void 0 : handle.nodeId, \"-\").concat(handle === null || handle === void 0 ? void 0 : handle.id, \"-\").concat(handle === null || handle === void 0 ? void 0 : handle.type, \"\\\"]\"));\n  var result = _objectSpread(_objectSpread({}, defaultResult()), {}, {\n    handleDomNode: handleToCheck\n  });\n  if (handleToCheck) {\n    var handleType = getHandleType(undefined, handleToCheck);\n    var handleNodeId = handleToCheck.getAttribute('data-nodeid');\n    var handleId = handleToCheck.getAttribute('data-handleid');\n    var connectable = handleToCheck.classList.contains('connectable');\n    var connectableEnd = handleToCheck.classList.contains('connectableend');\n    var connection = {\n      source: isTarget ? handleNodeId : fromNodeId,\n      sourceHandle: isTarget ? handleId : fromHandleId,\n      target: isTarget ? fromNodeId : handleNodeId,\n      targetHandle: isTarget ? fromHandleId : handleId\n    };\n    result.connection = connection;\n    var isConnectable = connectable && connectableEnd;\n    // in strict mode we don't allow target to target or source to source connections\n    var isValid = isConnectable && (connectionMode === ConnectionMode.Strict ? isTarget && handleType === 'source' || !isTarget && handleType === 'target' : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n    if (isValid) {\n      result.endHandle = {\n        nodeId: handleNodeId,\n        handleId: handleId,\n        type: handleType\n      };\n      result.isValid = isValidConnection(connection);\n    }\n  }\n  return result;\n}\nfunction getHandleLookup(_ref35) {\n  var nodes = _ref35.nodes,\n    nodeId = _ref35.nodeId,\n    handleId = _ref35.handleId,\n    handleType = _ref35.handleType;\n  return nodes.reduce(function (res, node) {\n    if (node[internalsSymbol]) {\n      var handleBounds = node[internalsSymbol].handleBounds;\n      var sourceHandles = [];\n      var targetHandles = [];\n      if (handleBounds) {\n        sourceHandles = getHandles(node, handleBounds, 'source', \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(handleType));\n        targetHandles = getHandles(node, handleBounds, 'target', \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(handleType));\n      }\n      res.push.apply(res, _toConsumableArray(sourceHandles).concat(_toConsumableArray(targetHandles)));\n    }\n    return res;\n  }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n  if (edgeUpdaterType) {\n    return edgeUpdaterType;\n  } else if (handleDomNode !== null && handleDomNode !== void 0 && handleDomNode.classList.contains('target')) {\n    return 'target';\n  } else if (handleDomNode !== null && handleDomNode !== void 0 && handleDomNode.classList.contains('source')) {\n    return 'source';\n  }\n  return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n  handleDomNode === null || handleDomNode === void 0 || handleDomNode.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n  var connectionStatus = null;\n  if (isHandleValid) {\n    connectionStatus = 'valid';\n  } else if (isInsideConnectionRadius && !isHandleValid) {\n    connectionStatus = 'invalid';\n  }\n  return connectionStatus;\n}\nfunction handlePointerDown(_ref36) {\n  var event = _ref36.event,\n    handleId = _ref36.handleId,\n    nodeId = _ref36.nodeId,\n    onConnect = _ref36.onConnect,\n    isTarget = _ref36.isTarget,\n    getState = _ref36.getState,\n    setState = _ref36.setState,\n    isValidConnection = _ref36.isValidConnection,\n    edgeUpdaterType = _ref36.edgeUpdaterType,\n    onEdgeUpdateEnd = _ref36.onEdgeUpdateEnd;\n  // when react-flow is used inside a shadow root we can't use document\n  var doc = getHostForElement(event.target);\n  var _getState = getState(),\n    connectionMode = _getState.connectionMode,\n    domNode = _getState.domNode,\n    autoPanOnConnect = _getState.autoPanOnConnect,\n    connectionRadius = _getState.connectionRadius,\n    onConnectStart = _getState.onConnectStart,\n    panBy = _getState.panBy,\n    getNodes = _getState.getNodes,\n    cancelConnection = _getState.cancelConnection;\n  var autoPanId = 0;\n  var closestHandle;\n  var _getEventPosition2 = getEventPosition(event),\n    x = _getEventPosition2.x,\n    y = _getEventPosition2.y;\n  var clickedHandle = doc === null || doc === void 0 ? void 0 : doc.elementFromPoint(x, y);\n  var handleType = getHandleType(edgeUpdaterType, clickedHandle);\n  var containerBounds = domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect();\n  if (!containerBounds || !handleType) {\n    return;\n  }\n  var prevActiveHandle;\n  var connectionPosition = getEventPosition(event, containerBounds);\n  var autoPanStarted = false;\n  var connection = null;\n  var isValid = false;\n  var handleDomNode = null;\n  var handleLookup = getHandleLookup({\n    nodes: getNodes(),\n    nodeId: nodeId,\n    handleId: handleId,\n    handleType: handleType\n  });\n  // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n  var autoPan = function autoPan() {\n    if (!autoPanOnConnect) {\n      return;\n    }\n    var _calcAutoPan = calcAutoPan(connectionPosition, containerBounds),\n      _calcAutoPan2 = _slicedToArray(_calcAutoPan, 2),\n      xMovement = _calcAutoPan2[0],\n      yMovement = _calcAutoPan2[1];\n    panBy({\n      x: xMovement,\n      y: yMovement\n    });\n    autoPanId = requestAnimationFrame(autoPan);\n  };\n  setState({\n    connectionPosition: connectionPosition,\n    connectionStatus: null,\n    // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n    connectionNodeId: nodeId,\n    connectionHandleId: handleId,\n    connectionHandleType: handleType,\n    connectionStartHandle: {\n      nodeId: nodeId,\n      handleId: handleId,\n      type: handleType\n    },\n    connectionEndHandle: null\n  });\n  onConnectStart === null || onConnectStart === void 0 || onConnectStart(event, {\n    nodeId: nodeId,\n    handleId: handleId,\n    handleType: handleType\n  });\n  function onPointerMove(event) {\n    var _getState2 = getState(),\n      transform = _getState2.transform;\n    connectionPosition = getEventPosition(event, containerBounds);\n    var _getClosestHandle = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, function (handle) {\n        return isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc);\n      }),\n      handle = _getClosestHandle.handle,\n      validHandleResult = _getClosestHandle.validHandleResult;\n    closestHandle = handle;\n    if (!autoPanStarted) {\n      autoPan();\n      autoPanStarted = true;\n    }\n    handleDomNode = validHandleResult.handleDomNode;\n    connection = validHandleResult.connection;\n    isValid = validHandleResult.isValid;\n    setState({\n      connectionPosition: closestHandle && isValid ? rendererPointToPoint({\n        x: closestHandle.x,\n        y: closestHandle.y\n      }, transform) : connectionPosition,\n      connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n      connectionEndHandle: validHandleResult.endHandle\n    });\n    if (!closestHandle && !isValid && !handleDomNode) {\n      return resetRecentHandle(prevActiveHandle);\n    }\n    if (connection.source !== connection.target && handleDomNode) {\n      resetRecentHandle(prevActiveHandle);\n      prevActiveHandle = handleDomNode;\n      // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n      handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n      handleDomNode.classList.toggle('valid', isValid);\n      handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n    }\n  }\n  function onPointerUp(event) {\n    var _getState$onConnectEn, _getState3;\n    if ((closestHandle || handleDomNode) && connection && isValid) {\n      onConnect === null || onConnect === void 0 || onConnect(connection);\n    }\n    // it's important to get a fresh reference from the store here\n    // in order to get the latest state of onConnectEnd\n    (_getState$onConnectEn = (_getState3 = getState()).onConnectEnd) === null || _getState$onConnectEn === void 0 || _getState$onConnectEn.call(_getState3, event);\n    if (edgeUpdaterType) {\n      onEdgeUpdateEnd === null || onEdgeUpdateEnd === void 0 || onEdgeUpdateEnd(event);\n    }\n    resetRecentHandle(prevActiveHandle);\n    cancelConnection();\n    cancelAnimationFrame(autoPanId);\n    autoPanStarted = false;\n    isValid = false;\n    connection = null;\n    handleDomNode = null;\n    doc.removeEventListener('mousemove', onPointerMove);\n    doc.removeEventListener('mouseup', onPointerUp);\n    doc.removeEventListener('touchmove', onPointerMove);\n    doc.removeEventListener('touchend', onPointerUp);\n  }\n  doc.addEventListener('mousemove', onPointerMove);\n  doc.addEventListener('mouseup', onPointerUp);\n  doc.addEventListener('touchmove', onPointerMove);\n  doc.addEventListener('touchend', onPointerUp);\n}\nvar alwaysValid = function alwaysValid() {\n  return true;\n};\nvar selector$f = function selector$f(s) {\n  return {\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName\n  };\n};\nvar connectingSelector = function connectingSelector(nodeId, handleId, type) {\n  return function (state) {\n    var startHandle = state.connectionStartHandle,\n      endHandle = state.connectionEndHandle,\n      clickHandle = state.connectionClickStartHandle;\n    return {\n      connecting: (startHandle === null || startHandle === void 0 ? void 0 : startHandle.nodeId) === nodeId && (startHandle === null || startHandle === void 0 ? void 0 : startHandle.handleId) === handleId && (startHandle === null || startHandle === void 0 ? void 0 : startHandle.type) === type || (endHandle === null || endHandle === void 0 ? void 0 : endHandle.nodeId) === nodeId && (endHandle === null || endHandle === void 0 ? void 0 : endHandle.handleId) === handleId && (endHandle === null || endHandle === void 0 ? void 0 : endHandle.type) === type,\n      clickConnecting: (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.nodeId) === nodeId && (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.handleId) === handleId && (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.type) === type\n    };\n  };\n};\nvar Handle = forwardRef(function (_ref37, ref) {\n  var _ref37$type = _ref37.type,\n    type = _ref37$type === void 0 ? 'source' : _ref37$type,\n    _ref37$position = _ref37.position,\n    position = _ref37$position === void 0 ? Position.Top : _ref37$position,\n    isValidConnection = _ref37.isValidConnection,\n    _ref37$isConnectable = _ref37.isConnectable,\n    isConnectable = _ref37$isConnectable === void 0 ? true : _ref37$isConnectable,\n    _ref37$isConnectableS = _ref37.isConnectableStart,\n    isConnectableStart = _ref37$isConnectableS === void 0 ? true : _ref37$isConnectableS,\n    _ref37$isConnectableE = _ref37.isConnectableEnd,\n    isConnectableEnd = _ref37$isConnectableE === void 0 ? true : _ref37$isConnectableE,\n    id = _ref37.id,\n    onConnect = _ref37.onConnect,\n    children = _ref37.children,\n    className = _ref37.className,\n    onMouseDown = _ref37.onMouseDown,\n    onTouchStart = _ref37.onTouchStart,\n    rest = _objectWithoutProperties(_ref37, _excluded4);\n  var handleId = id || null;\n  var isTarget = type === 'target';\n  var store = useStoreApi();\n  var nodeId = useNodeId();\n  var _useStore = useStore(selector$f, shallow),\n    connectOnClick = _useStore.connectOnClick,\n    noPanClassName = _useStore.noPanClassName;\n  var _useStore2 = useStore(connectingSelector(nodeId, handleId, type), shallow),\n    connecting = _useStore2.connecting,\n    clickConnecting = _useStore2.clickConnecting;\n  if (!nodeId) {\n    var _store$getState$onErr, _store$getState;\n    (_store$getState$onErr = (_store$getState = store.getState()).onError) === null || _store$getState$onErr === void 0 || _store$getState$onErr.call(_store$getState, '010', errorMessages['error010']());\n  }\n  var onConnectExtended = function onConnectExtended(params) {\n    var _store$getState2 = store.getState(),\n      defaultEdgeOptions = _store$getState2.defaultEdgeOptions,\n      onConnectAction = _store$getState2.onConnect,\n      hasDefaultEdges = _store$getState2.hasDefaultEdges;\n    var edgeParams = _objectSpread(_objectSpread({}, defaultEdgeOptions), params);\n    if (hasDefaultEdges) {\n      var _store$getState3 = store.getState(),\n        edges = _store$getState3.edges,\n        setEdges = _store$getState3.setEdges;\n      setEdges(addEdge(edgeParams, edges));\n    }\n    onConnectAction === null || onConnectAction === void 0 || onConnectAction(edgeParams);\n    onConnect === null || onConnect === void 0 || onConnect(edgeParams);\n  };\n  var onPointerDown = function onPointerDown(event) {\n    if (!nodeId) {\n      return;\n    }\n    var isMouseTriggered = isMouseEvent(event);\n    if (isConnectableStart && (isMouseTriggered && event.button === 0 || !isMouseTriggered)) {\n      handlePointerDown({\n        event: event,\n        handleId: handleId,\n        nodeId: nodeId,\n        onConnect: onConnectExtended,\n        isTarget: isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid\n      });\n    }\n    if (isMouseTriggered) {\n      onMouseDown === null || onMouseDown === void 0 || onMouseDown(event);\n    } else {\n      onTouchStart === null || onTouchStart === void 0 || onTouchStart(event);\n    }\n  };\n  var onClick = function onClick(event) {\n    var _store$getState4 = store.getState(),\n      onClickConnectStart = _store$getState4.onClickConnectStart,\n      onClickConnectEnd = _store$getState4.onClickConnectEnd,\n      connectionClickStartHandle = _store$getState4.connectionClickStartHandle,\n      connectionMode = _store$getState4.connectionMode,\n      isValidConnectionStore = _store$getState4.isValidConnection;\n    if (!nodeId || !connectionClickStartHandle && !isConnectableStart) {\n      return;\n    }\n    if (!connectionClickStartHandle) {\n      onClickConnectStart === null || onClickConnectStart === void 0 || onClickConnectStart(event, {\n        nodeId: nodeId,\n        handleId: handleId,\n        handleType: type\n      });\n      store.setState({\n        connectionClickStartHandle: {\n          nodeId: nodeId,\n          type: type,\n          handleId: handleId\n        }\n      });\n      return;\n    }\n    var doc = getHostForElement(event.target);\n    var isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n    var _isValidHandle = isValidHandle({\n        nodeId: nodeId,\n        id: handleId,\n        type: type\n      }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc),\n      connection = _isValidHandle.connection,\n      isValid = _isValidHandle.isValid;\n    if (isValid) {\n      onConnectExtended(connection);\n    }\n    onClickConnectEnd === null || onClickConnectEnd === void 0 || onClickConnectEnd(event);\n    store.setState({\n      connectionClickStartHandle: null\n    });\n  };\n  return jsx(\"div\", _objectSpread(_objectSpread({\n    \"data-handleid\": handleId,\n    \"data-nodeid\": nodeId,\n    \"data-handlepos\": position,\n    \"data-id\": \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(type),\n    className: cc(['react-flow__handle', \"react-flow__handle-\".concat(position), 'nodrag', noPanClassName, className, {\n      source: !isTarget,\n      target: isTarget,\n      connectable: isConnectable,\n      connectablestart: isConnectableStart,\n      connectableend: isConnectableEnd,\n      connecting: clickConnecting,\n      // this class is used to style the handle when the user is connecting\n      connectionindicator: isConnectable && (isConnectableStart && !connecting || isConnectableEnd && connecting)\n    }]),\n    onMouseDown: onPointerDown,\n    onTouchStart: onPointerDown,\n    onClick: connectOnClick ? onClick : undefined,\n    ref: ref\n  }, rest), {}, {\n    children: children\n  }));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\nvar DefaultNode = function DefaultNode(_ref38) {\n  var data = _ref38.data,\n    isConnectable = _ref38.isConnectable,\n    _ref38$targetPosition = _ref38.targetPosition,\n    targetPosition = _ref38$targetPosition === void 0 ? Position.Top : _ref38$targetPosition,\n    _ref38$sourcePosition = _ref38.sourcePosition,\n    sourcePosition = _ref38$sourcePosition === void 0 ? Position.Bottom : _ref38$sourcePosition;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data === null || data === void 0 ? void 0 : data.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\nvar InputNode = function InputNode(_ref39) {\n  var data = _ref39.data,\n    isConnectable = _ref39.isConnectable,\n    _ref39$sourcePosition = _ref39.sourcePosition,\n    sourcePosition = _ref39$sourcePosition === void 0 ? Position.Bottom : _ref39$sourcePosition;\n  return jsxs(Fragment, {\n    children: [data === null || data === void 0 ? void 0 : data.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\nvar OutputNode = function OutputNode(_ref40) {\n  var data = _ref40.data,\n    isConnectable = _ref40.isConnectable,\n    _ref40$targetPosition = _ref40.targetPosition,\n    targetPosition = _ref40$targetPosition === void 0 ? Position.Top : _ref40$targetPosition;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data === null || data === void 0 ? void 0 : data.label]\n  });\n};\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\nvar GroupNode = function GroupNode() {\n  return null;\n};\nGroupNode.displayName = 'GroupNode';\nvar selector$e = function selector$e(s) {\n  return {\n    selectedNodes: s.getNodes().filter(function (n) {\n      return n.selected;\n    }),\n    selectedEdges: s.edges.filter(function (e) {\n      return e.selected;\n    })\n  };\n};\nvar selectId = function selectId(obj) {\n  return obj.id;\n};\nfunction areEqual(a, b) {\n  return shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) && shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nvar SelectionListener = memo(function (_ref41) {\n  var onSelectionChange = _ref41.onSelectionChange;\n  var store = useStoreApi();\n  var _useStore3 = useStore(selector$e, areEqual),\n    selectedNodes = _useStore3.selectedNodes,\n    selectedEdges = _useStore3.selectedEdges;\n  useEffect(function () {\n    var _store$getState$onSel, _store$getState5;\n    var params = {\n      nodes: selectedNodes,\n      edges: selectedEdges\n    };\n    onSelectionChange === null || onSelectionChange === void 0 || onSelectionChange(params);\n    (_store$getState$onSel = (_store$getState5 = store.getState()).onSelectionChange) === null || _store$getState$onSel === void 0 || _store$getState$onSel.call(_store$getState5, params);\n  }, [selectedNodes, selectedEdges, onSelectionChange]);\n  return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nvar changeSelector = function changeSelector(s) {\n  return !!s.onSelectionChange;\n};\nfunction Wrapper$1(_ref42) {\n  var onSelectionChange = _ref42.onSelectionChange;\n  var storeHasSelectionChange = useStore(changeSelector);\n  if (onSelectionChange || storeHasSelectionChange) {\n    return jsx(SelectionListener, {\n      onSelectionChange: onSelectionChange\n    });\n  }\n  return null;\n}\nvar selector$d = function selector$d(s) {\n  return {\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset\n  };\n};\nfunction useStoreUpdater(value, setStoreState) {\n  useEffect(function () {\n    if (typeof value !== 'undefined') {\n      setStoreState(value);\n    }\n  }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n  useEffect(function () {\n    if (typeof value !== 'undefined') {\n      setState(_defineProperty({}, key, value));\n    }\n  }, [value]);\n}\nvar StoreUpdater = function StoreUpdater(_ref43) {\n  var nodes = _ref43.nodes,\n    edges = _ref43.edges,\n    defaultNodes = _ref43.defaultNodes,\n    defaultEdges = _ref43.defaultEdges,\n    onConnect = _ref43.onConnect,\n    onConnectStart = _ref43.onConnectStart,\n    onConnectEnd = _ref43.onConnectEnd,\n    onClickConnectStart = _ref43.onClickConnectStart,\n    onClickConnectEnd = _ref43.onClickConnectEnd,\n    nodesDraggable = _ref43.nodesDraggable,\n    nodesConnectable = _ref43.nodesConnectable,\n    nodesFocusable = _ref43.nodesFocusable,\n    edgesFocusable = _ref43.edgesFocusable,\n    edgesUpdatable = _ref43.edgesUpdatable,\n    elevateNodesOnSelect = _ref43.elevateNodesOnSelect,\n    minZoom = _ref43.minZoom,\n    maxZoom = _ref43.maxZoom,\n    nodeExtent = _ref43.nodeExtent,\n    onNodesChange = _ref43.onNodesChange,\n    onEdgesChange = _ref43.onEdgesChange,\n    elementsSelectable = _ref43.elementsSelectable,\n    connectionMode = _ref43.connectionMode,\n    snapGrid = _ref43.snapGrid,\n    snapToGrid = _ref43.snapToGrid,\n    translateExtent = _ref43.translateExtent,\n    connectOnClick = _ref43.connectOnClick,\n    defaultEdgeOptions = _ref43.defaultEdgeOptions,\n    fitView = _ref43.fitView,\n    fitViewOptions = _ref43.fitViewOptions,\n    onNodesDelete = _ref43.onNodesDelete,\n    onEdgesDelete = _ref43.onEdgesDelete,\n    onNodeDrag = _ref43.onNodeDrag,\n    onNodeDragStart = _ref43.onNodeDragStart,\n    onNodeDragStop = _ref43.onNodeDragStop,\n    onSelectionDrag = _ref43.onSelectionDrag,\n    onSelectionDragStart = _ref43.onSelectionDragStart,\n    onSelectionDragStop = _ref43.onSelectionDragStop,\n    noPanClassName = _ref43.noPanClassName,\n    nodeOrigin = _ref43.nodeOrigin,\n    rfId = _ref43.rfId,\n    autoPanOnConnect = _ref43.autoPanOnConnect,\n    autoPanOnNodeDrag = _ref43.autoPanOnNodeDrag,\n    onError = _ref43.onError,\n    connectionRadius = _ref43.connectionRadius,\n    isValidConnection = _ref43.isValidConnection;\n  var _useStore4 = useStore(selector$d, shallow),\n    setNodes = _useStore4.setNodes,\n    setEdges = _useStore4.setEdges,\n    setDefaultNodesAndEdges = _useStore4.setDefaultNodesAndEdges,\n    setMinZoom = _useStore4.setMinZoom,\n    setMaxZoom = _useStore4.setMaxZoom,\n    setTranslateExtent = _useStore4.setTranslateExtent,\n    setNodeExtent = _useStore4.setNodeExtent,\n    reset = _useStore4.reset;\n  var store = useStoreApi();\n  useEffect(function () {\n    var edgesWithDefaults = defaultEdges === null || defaultEdges === void 0 ? void 0 : defaultEdges.map(function (e) {\n      return _objectSpread(_objectSpread({}, e), defaultEdgeOptions);\n    });\n    setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n    return function () {\n      reset();\n    };\n  }, []);\n  useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n  useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n  useDirectStoreUpdater('onConnect', onConnect, store.setState);\n  useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n  useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n  useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n  useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n  useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n  useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n  useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n  useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n  useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n  useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n  useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n  useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n  useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n  useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n  useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n  useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n  useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n  useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n  useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n  useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n  useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n  useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n  useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n  useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n  useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n  useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n  useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n  useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n  useDirectStoreUpdater('rfId', rfId, store.setState);\n  useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n  useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n  useDirectStoreUpdater('onError', onError, store.setState);\n  useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n  useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n  useStoreUpdater(nodes, setNodes);\n  useStoreUpdater(edges, setEdges);\n  useStoreUpdater(minZoom, setMinZoom);\n  useStoreUpdater(maxZoom, setMaxZoom);\n  useStoreUpdater(translateExtent, setTranslateExtent);\n  useStoreUpdater(nodeExtent, setNodeExtent);\n  return null;\n};\nvar style = {\n  display: 'none'\n};\nvar ariaLiveStyle = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0px, 0px, 0px, 0px)',\n  clipPath: 'inset(100%)'\n};\nvar ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nvar ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nvar ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nvar selector$c = function selector$c(s) {\n  return s.ariaLiveMessage;\n};\nfunction AriaLiveMessage(_ref44) {\n  var rfId = _ref44.rfId;\n  var ariaLiveMessage = useStore(selector$c);\n  return jsx(\"div\", {\n    id: \"\".concat(ARIA_LIVE_MESSAGE, \"-\").concat(rfId),\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    style: ariaLiveStyle,\n    children: ariaLiveMessage\n  });\n}\nfunction A11yDescriptions(_ref45) {\n  var rfId = _ref45.rfId,\n    disableKeyboardA11y = _ref45.disableKeyboardA11y;\n  return jsxs(Fragment, {\n    children: [jsxs(\"div\", {\n      id: \"\".concat(ARIA_NODE_DESC_KEY, \"-\").concat(rfId),\n      style: style,\n      children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' ']\n    }), jsx(\"div\", {\n      id: \"\".concat(ARIA_EDGE_DESC_KEY, \"-\").concat(rfId),\n      style: style,\n      children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"\n    }), !disableKeyboardA11y && jsx(AriaLiveMessage, {\n      rfId: rfId\n    })]\n  });\n}\nvar doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilities. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = function useKeyPress() {\n  var keyCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    target: doc\n  };\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    keyPressed = _useState4[0],\n    setKeyPressed = _useState4[1];\n  // we need to remember if a modifier key is pressed in order to track it\n  var modifierPressed = useRef(false);\n  // we need to remember the pressed keys in order to support combinations\n  var pressedKeys = useRef(new Set([]));\n  // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n  // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n  // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n  // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n  // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n  // we can't find it in the list of keysToWatch.\n  var _useMemo = useMemo(function () {\n      if (keyCode !== null) {\n        var keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n        var keys = keyCodeArr.filter(function (kc) {\n          return typeof kc === 'string';\n        }).map(function (kc) {\n          return kc.split('+');\n        });\n        var keysFlat = keys.reduce(function (res, item) {\n          return res.concat.apply(res, _toConsumableArray(item));\n        }, []);\n        return [keys, keysFlat];\n      }\n      return [[], []];\n    }, [keyCode]),\n    _useMemo2 = _slicedToArray(_useMemo, 2),\n    keyCodes = _useMemo2[0],\n    keysToWatch = _useMemo2[1];\n  useEffect(function () {\n    if (keyCode !== null) {\n      var _options$target, _options$target2;\n      var downHandler = function downHandler(event) {\n        modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n        if (!modifierPressed.current && isInputDOMNode(event)) {\n          return false;\n        }\n        var keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        pressedKeys.current.add(event[keyOrCode]);\n        if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n          event.preventDefault();\n          setKeyPressed(true);\n        }\n      };\n      var upHandler = function upHandler(event) {\n        if (!modifierPressed.current && isInputDOMNode(event)) {\n          return false;\n        }\n        var keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n          setKeyPressed(false);\n          pressedKeys.current.clear();\n        } else {\n          pressedKeys.current.delete(event[keyOrCode]);\n        }\n        // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n        if (event.key === 'Meta') {\n          pressedKeys.current.clear();\n        }\n        modifierPressed.current = false;\n      };\n      var resetHandler = function resetHandler() {\n        pressedKeys.current.clear();\n        setKeyPressed(false);\n      };\n      options === null || options === void 0 || (_options$target = options.target) === null || _options$target === void 0 || _options$target.addEventListener('keydown', downHandler);\n      options === null || options === void 0 || (_options$target2 = options.target) === null || _options$target2 === void 0 || _options$target2.addEventListener('keyup', upHandler);\n      window.addEventListener('blur', resetHandler);\n      return function () {\n        var _options$target3, _options$target4;\n        options === null || options === void 0 || (_options$target3 = options.target) === null || _options$target3 === void 0 || _options$target3.removeEventListener('keydown', downHandler);\n        options === null || options === void 0 || (_options$target4 = options.target) === null || _options$target4 === void 0 || _options$target4.removeEventListener('keyup', upHandler);\n        window.removeEventListener('blur', resetHandler);\n      };\n    }\n  }, [keyCode, setKeyPressed]);\n  return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n  return keyCodes\n  // we only want to compare same sizes of keyCode definitions\n  // and pressed keys. When the user specified 'Meta' as a key somewhere\n  // this would also be truthy without this filter when user presses 'Meta' + 'r'\n  .filter(function (keys) {\n    return isUp || keys.length === pressedKeys.size;\n  })\n  // since we want to support multiple possibilities only one of the\n  // combinations need to be part of the pressed keys\n  .some(function (keys) {\n    return keys.every(function (k) {\n      return pressedKeys.has(k);\n    });\n  });\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n  return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n  var _result$x, _result$y, _parentNode$internals, _parentNode$internals2, _result$z, _parentNode$internals3, _parentNode$internals4, _result$z2;\n  if (!node.parentNode) {\n    return result;\n  }\n  var parentNode = nodeInternals.get(node.parentNode);\n  var parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n  return calculateXYZPosition(parentNode, nodeInternals, {\n    x: ((_result$x = result.x) !== null && _result$x !== void 0 ? _result$x : 0) + parentNodePosition.x,\n    y: ((_result$y = result.y) !== null && _result$y !== void 0 ? _result$y : 0) + parentNodePosition.y,\n    z: ((_parentNode$internals = (_parentNode$internals2 = parentNode[internalsSymbol]) === null || _parentNode$internals2 === void 0 ? void 0 : _parentNode$internals2.z) !== null && _parentNode$internals !== void 0 ? _parentNode$internals : 0) > ((_result$z = result.z) !== null && _result$z !== void 0 ? _result$z : 0) ? (_parentNode$internals3 = (_parentNode$internals4 = parentNode[internalsSymbol]) === null || _parentNode$internals4 === void 0 ? void 0 : _parentNode$internals4.z) !== null && _parentNode$internals3 !== void 0 ? _parentNode$internals3 : 0 : (_result$z2 = result.z) !== null && _result$z2 !== void 0 ? _result$z2 : 0\n  }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n  nodeInternals.forEach(function (node) {\n    if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n      throw new Error(\"Parent node \".concat(node.parentNode, \" not found\"));\n    }\n    if (node.parentNode || parentNodes !== null && parentNodes !== void 0 && parentNodes[node.id]) {\n      var _node$internalsSymbol, _node$internalsSymbol2;\n      var _calculateXYZPosition = calculateXYZPosition(node, nodeInternals, _objectSpread(_objectSpread({}, node.position), {}, {\n          z: (_node$internalsSymbol = (_node$internalsSymbol2 = node[internalsSymbol]) === null || _node$internalsSymbol2 === void 0 ? void 0 : _node$internalsSymbol2.z) !== null && _node$internalsSymbol !== void 0 ? _node$internalsSymbol : 0\n        }), nodeOrigin),\n        x = _calculateXYZPosition.x,\n        y = _calculateXYZPosition.y,\n        z = _calculateXYZPosition.z;\n      node.positionAbsolute = {\n        x: x,\n        y: y\n      };\n      node[internalsSymbol].z = z;\n      if (parentNodes !== null && parentNodes !== void 0 && parentNodes[node.id]) {\n        node[internalsSymbol].isParent = true;\n      }\n    }\n  });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n  var nextNodeInternals = new Map();\n  var parentNodes = {};\n  var selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n  nodes.forEach(function (node) {\n    var _currInternals$intern;\n    var z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n    var currInternals = nodeInternals.get(node.id);\n    var internals = _objectSpread(_objectSpread({\n      width: currInternals === null || currInternals === void 0 ? void 0 : currInternals.width,\n      height: currInternals === null || currInternals === void 0 ? void 0 : currInternals.height\n    }, node), {}, {\n      positionAbsolute: {\n        x: node.position.x,\n        y: node.position.y\n      }\n    });\n    if (node.parentNode) {\n      internals.parentNode = node.parentNode;\n      parentNodes[node.parentNode] = true;\n    }\n    Object.defineProperty(internals, internalsSymbol, {\n      enumerable: false,\n      value: {\n        handleBounds: currInternals === null || currInternals === void 0 || (_currInternals$intern = currInternals[internalsSymbol]) === null || _currInternals$intern === void 0 ? void 0 : _currInternals$intern.handleBounds,\n        z: z\n      }\n    });\n    nextNodeInternals.set(node.id, internals);\n  });\n  updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n  return nextNodeInternals;\n}\nfunction _fitView(get) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _get = get(),\n    getNodes = _get.getNodes,\n    width = _get.width,\n    height = _get.height,\n    minZoom = _get.minZoom,\n    maxZoom = _get.maxZoom,\n    d3Zoom = _get.d3Zoom,\n    d3Selection = _get.d3Selection,\n    fitViewOnInitDone = _get.fitViewOnInitDone,\n    fitViewOnInit = _get.fitViewOnInit,\n    nodeOrigin = _get.nodeOrigin;\n  var isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n  var d3initialized = d3Zoom && d3Selection;\n  if (d3initialized && (isInitialFitView || !options.initial)) {\n    var nodes = getNodes().filter(function (n) {\n      var _options$nodes;\n      var isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n      if ((_options$nodes = options.nodes) !== null && _options$nodes !== void 0 && _options$nodes.length) {\n        return isVisible && options.nodes.some(function (optionNode) {\n          return optionNode.id === n.id;\n        });\n      }\n      return isVisible;\n    });\n    var nodesInitialized = nodes.every(function (n) {\n      return n.width && n.height;\n    });\n    if (nodes.length > 0 && nodesInitialized) {\n      var _options$minZoom, _options$maxZoom, _options$padding;\n      var bounds = getRectOfNodes(nodes, nodeOrigin);\n      var _getTransformForBound = getTransformForBounds(bounds, width, height, (_options$minZoom = options.minZoom) !== null && _options$minZoom !== void 0 ? _options$minZoom : minZoom, (_options$maxZoom = options.maxZoom) !== null && _options$maxZoom !== void 0 ? _options$maxZoom : maxZoom, (_options$padding = options.padding) !== null && _options$padding !== void 0 ? _options$padding : 0.1),\n        _getTransformForBound2 = _slicedToArray(_getTransformForBound, 3),\n        x = _getTransformForBound2[0],\n        y = _getTransformForBound2[1],\n        _zoom = _getTransformForBound2[2];\n      var nextTransform = zoomIdentity.translate(x, y).scale(_zoom);\n      if (typeof options.duration === 'number' && options.duration > 0) {\n        d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n      } else {\n        d3Zoom.transform(d3Selection, nextTransform);\n      }\n      return true;\n    }\n  }\n  return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n  nodeChanges.forEach(function (change) {\n    var node = nodeInternals.get(change.id);\n    if (node) {\n      var _objectSpread2;\n      nodeInternals.set(node.id, _objectSpread(_objectSpread({}, node), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, internalsSymbol, node[internalsSymbol]), _defineProperty(_objectSpread2, \"selected\", change.selected), _objectSpread2)));\n    }\n  });\n  return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n  return edges.map(function (e) {\n    var change = edgeChanges.find(function (change) {\n      return change.id === e.id;\n    });\n    if (change) {\n      e.selected = change.selected;\n    }\n    return e;\n  });\n}\nfunction updateNodesAndEdgesSelections(_ref46) {\n  var changedNodes = _ref46.changedNodes,\n    changedEdges = _ref46.changedEdges,\n    get = _ref46.get,\n    set = _ref46.set;\n  var _get2 = get(),\n    nodeInternals = _get2.nodeInternals,\n    edges = _get2.edges,\n    onNodesChange = _get2.onNodesChange,\n    onEdgesChange = _get2.onEdgesChange,\n    hasDefaultNodes = _get2.hasDefaultNodes,\n    hasDefaultEdges = _get2.hasDefaultEdges;\n  if (changedNodes !== null && changedNodes !== void 0 && changedNodes.length) {\n    if (hasDefaultNodes) {\n      set({\n        nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals)\n      });\n    }\n    onNodesChange === null || onNodesChange === void 0 || onNodesChange(changedNodes);\n  }\n  if (changedEdges !== null && changedEdges !== void 0 && changedEdges.length) {\n    if (hasDefaultEdges) {\n      set({\n        edges: handleControlledEdgeSelectionChange(changedEdges, edges)\n      });\n    }\n    onEdgesChange === null || onEdgesChange === void 0 || onEdgesChange(changedEdges);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nvar noop = function noop() {};\nvar initialViewportHelper = {\n  zoomIn: noop,\n  zoomOut: noop,\n  zoomTo: noop,\n  getZoom: function getZoom() {\n    return 1;\n  },\n  setViewport: noop,\n  getViewport: function getViewport() {\n    return {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n  },\n  fitView: function fitView() {\n    return false;\n  },\n  setCenter: noop,\n  fitBounds: noop,\n  project: function project(position) {\n    return position;\n  },\n  viewportInitialized: false\n};\nvar selector$b = function selector$b(s) {\n  return {\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection\n  };\n};\nvar useViewportHelper = function useViewportHelper() {\n  var store = useStoreApi();\n  var _useStore5 = useStore(selector$b, shallow),\n    d3Zoom = _useStore5.d3Zoom,\n    d3Selection = _useStore5.d3Selection;\n  var viewportHelperFunctions = useMemo(function () {\n    if (d3Selection && d3Zoom) {\n      return {\n        zoomIn: function zoomIn(options) {\n          return d3Zoom.scaleBy(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), 1.2);\n        },\n        zoomOut: function zoomOut(options) {\n          return d3Zoom.scaleBy(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), 1 / 1.2);\n        },\n        zoomTo: function zoomTo(zoomLevel, options) {\n          return d3Zoom.scaleTo(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), zoomLevel);\n        },\n        getZoom: function getZoom() {\n          return store.getState().transform[2];\n        },\n        setViewport: function setViewport(transform, options) {\n          var _transform$x, _transform$y, _transform$zoom;\n          var _store$getState$trans = _slicedToArray(store.getState().transform, 3),\n            x = _store$getState$trans[0],\n            y = _store$getState$trans[1],\n            zoom = _store$getState$trans[2];\n          var nextTransform = zoomIdentity.translate((_transform$x = transform.x) !== null && _transform$x !== void 0 ? _transform$x : x, (_transform$y = transform.y) !== null && _transform$y !== void 0 ? _transform$y : y).scale((_transform$zoom = transform.zoom) !== null && _transform$zoom !== void 0 ? _transform$zoom : zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), nextTransform);\n        },\n        getViewport: function getViewport() {\n          var _store$getState$trans2 = _slicedToArray(store.getState().transform, 3),\n            x = _store$getState$trans2[0],\n            y = _store$getState$trans2[1],\n            zoom = _store$getState$trans2[2];\n          return {\n            x: x,\n            y: y,\n            zoom: zoom\n          };\n        },\n        fitView: function fitView(options) {\n          return _fitView(store.getState, options);\n        },\n        setCenter: function setCenter(x, y, options) {\n          var _store$getState6 = store.getState(),\n            width = _store$getState6.width,\n            height = _store$getState6.height,\n            maxZoom = _store$getState6.maxZoom;\n          var nextZoom = typeof (options === null || options === void 0 ? void 0 : options.zoom) !== 'undefined' ? options.zoom : maxZoom;\n          var centerX = width / 2 - x * nextZoom;\n          var centerY = height / 2 - y * nextZoom;\n          var transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), transform);\n        },\n        fitBounds: function fitBounds(bounds, options) {\n          var _options$padding2;\n          var _store$getState7 = store.getState(),\n            width = _store$getState7.width,\n            height = _store$getState7.height,\n            minZoom = _store$getState7.minZoom,\n            maxZoom = _store$getState7.maxZoom;\n          var _getTransformForBound3 = getTransformForBounds(bounds, width, height, minZoom, maxZoom, (_options$padding2 = options === null || options === void 0 ? void 0 : options.padding) !== null && _options$padding2 !== void 0 ? _options$padding2 : 0.1),\n            _getTransformForBound4 = _slicedToArray(_getTransformForBound3, 3),\n            x = _getTransformForBound4[0],\n            y = _getTransformForBound4[1],\n            zoom = _getTransformForBound4[2];\n          var transform = zoomIdentity.translate(x, y).scale(zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), transform);\n        },\n        project: function project(position) {\n          var _store$getState8 = store.getState(),\n            transform = _store$getState8.transform,\n            snapToGrid = _store$getState8.snapToGrid,\n            snapGrid = _store$getState8.snapGrid;\n          return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n        },\n        viewportInitialized: true\n      };\n    }\n    return initialViewportHelper;\n  }, [d3Zoom, d3Selection]);\n  return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n  var viewportHelper = useViewportHelper();\n  var store = useStoreApi();\n  var getNodes = useCallback(function () {\n    return store.getState().getNodes().map(function (n) {\n      return _objectSpread({}, n);\n    });\n  }, []);\n  var getNode = useCallback(function (id) {\n    return store.getState().nodeInternals.get(id);\n  }, []);\n  var getEdges = useCallback(function () {\n    var _store$getState9 = store.getState(),\n      _store$getState9$edge = _store$getState9.edges,\n      edges = _store$getState9$edge === void 0 ? [] : _store$getState9$edge;\n    return edges.map(function (e) {\n      return _objectSpread({}, e);\n    });\n  }, []);\n  var getEdge = useCallback(function (id) {\n    var _store$getState10 = store.getState(),\n      _store$getState10$edg = _store$getState10.edges,\n      edges = _store$getState10$edg === void 0 ? [] : _store$getState10$edg;\n    return edges.find(function (e) {\n      return e.id === id;\n    });\n  }, []);\n  var setNodes = useCallback(function (payload) {\n    var _store$getState11 = store.getState(),\n      getNodes = _store$getState11.getNodes,\n      setNodes = _store$getState11.setNodes,\n      hasDefaultNodes = _store$getState11.hasDefaultNodes,\n      onNodesChange = _store$getState11.onNodesChange;\n    var nodes = getNodes();\n    var nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n    if (hasDefaultNodes) {\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      var changes = nextNodes.length === 0 ? nodes.map(function (node) {\n        return {\n          type: 'remove',\n          id: node.id\n        };\n      }) : nextNodes.map(function (node) {\n        return {\n          item: node,\n          type: 'reset'\n        };\n      });\n      onNodesChange(changes);\n    }\n  }, []);\n  var setEdges = useCallback(function (payload) {\n    var _store$getState12 = store.getState(),\n      _store$getState12$edg = _store$getState12.edges,\n      edges = _store$getState12$edg === void 0 ? [] : _store$getState12$edg,\n      setEdges = _store$getState12.setEdges,\n      hasDefaultEdges = _store$getState12.hasDefaultEdges,\n      onEdgesChange = _store$getState12.onEdgesChange;\n    var nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n    if (hasDefaultEdges) {\n      setEdges(nextEdges);\n    } else if (onEdgesChange) {\n      var changes = nextEdges.length === 0 ? edges.map(function (edge) {\n        return {\n          type: 'remove',\n          id: edge.id\n        };\n      }) : nextEdges.map(function (edge) {\n        return {\n          item: edge,\n          type: 'reset'\n        };\n      });\n      onEdgesChange(changes);\n    }\n  }, []);\n  var addNodes = useCallback(function (payload) {\n    var nodes = Array.isArray(payload) ? payload : [payload];\n    var _store$getState13 = store.getState(),\n      getNodes = _store$getState13.getNodes,\n      setNodes = _store$getState13.setNodes,\n      hasDefaultNodes = _store$getState13.hasDefaultNodes,\n      onNodesChange = _store$getState13.onNodesChange;\n    if (hasDefaultNodes) {\n      var currentNodes = getNodes();\n      var nextNodes = [].concat(_toConsumableArray(currentNodes), _toConsumableArray(nodes));\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      var changes = nodes.map(function (node) {\n        return {\n          item: node,\n          type: 'add'\n        };\n      });\n      onNodesChange(changes);\n    }\n  }, []);\n  var addEdges = useCallback(function (payload) {\n    var nextEdges = Array.isArray(payload) ? payload : [payload];\n    var _store$getState14 = store.getState(),\n      _store$getState14$edg = _store$getState14.edges,\n      edges = _store$getState14$edg === void 0 ? [] : _store$getState14$edg,\n      setEdges = _store$getState14.setEdges,\n      hasDefaultEdges = _store$getState14.hasDefaultEdges,\n      onEdgesChange = _store$getState14.onEdgesChange;\n    if (hasDefaultEdges) {\n      setEdges([].concat(_toConsumableArray(edges), _toConsumableArray(nextEdges)));\n    } else if (onEdgesChange) {\n      var changes = nextEdges.map(function (edge) {\n        return {\n          item: edge,\n          type: 'add'\n        };\n      });\n      onEdgesChange(changes);\n    }\n  }, []);\n  var toObject = useCallback(function () {\n    var _store$getState15 = store.getState(),\n      getNodes = _store$getState15.getNodes,\n      _store$getState15$edg = _store$getState15.edges,\n      edges = _store$getState15$edg === void 0 ? [] : _store$getState15$edg,\n      transform = _store$getState15.transform;\n    var _transform = _slicedToArray(transform, 3),\n      x = _transform[0],\n      y = _transform[1],\n      zoom = _transform[2];\n    return {\n      nodes: getNodes().map(function (n) {\n        return _objectSpread({}, n);\n      }),\n      edges: edges.map(function (e) {\n        return _objectSpread({}, e);\n      }),\n      viewport: {\n        x: x,\n        y: y,\n        zoom: zoom\n      }\n    };\n  }, []);\n  var deleteElements = useCallback(function (_ref47) {\n    var nodesDeleted = _ref47.nodes,\n      edgesDeleted = _ref47.edges;\n    var _store$getState16 = store.getState(),\n      nodeInternals = _store$getState16.nodeInternals,\n      getNodes = _store$getState16.getNodes,\n      edges = _store$getState16.edges,\n      hasDefaultNodes = _store$getState16.hasDefaultNodes,\n      hasDefaultEdges = _store$getState16.hasDefaultEdges,\n      onNodesDelete = _store$getState16.onNodesDelete,\n      onEdgesDelete = _store$getState16.onEdgesDelete,\n      onNodesChange = _store$getState16.onNodesChange,\n      onEdgesChange = _store$getState16.onEdgesChange;\n    var nodeIds = (nodesDeleted || []).map(function (node) {\n      return node.id;\n    });\n    var edgeIds = (edgesDeleted || []).map(function (edge) {\n      return edge.id;\n    });\n    var nodesToRemove = getNodes().reduce(function (res, node) {\n      var parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find(function (n) {\n        return n.id === node.parentNode;\n      });\n      var deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n      if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n        res.push(node);\n      }\n      return res;\n    }, []);\n    var deletableEdges = edges.filter(function (e) {\n      return typeof e.deletable === 'boolean' ? e.deletable : true;\n    });\n    var initialHitEdges = deletableEdges.filter(function (e) {\n      return edgeIds.includes(e.id);\n    });\n    if (nodesToRemove || initialHitEdges) {\n      var connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n      var edgesToRemove = [].concat(_toConsumableArray(initialHitEdges), _toConsumableArray(connectedEdges));\n      var edgeIdsToRemove = edgesToRemove.reduce(function (res, edge) {\n        if (!res.includes(edge.id)) {\n          res.push(edge.id);\n        }\n        return res;\n      }, []);\n      if (hasDefaultEdges || hasDefaultNodes) {\n        if (hasDefaultEdges) {\n          store.setState({\n            edges: edges.filter(function (e) {\n              return !edgeIdsToRemove.includes(e.id);\n            })\n          });\n        }\n        if (hasDefaultNodes) {\n          nodesToRemove.forEach(function (node) {\n            nodeInternals.delete(node.id);\n          });\n          store.setState({\n            nodeInternals: new Map(nodeInternals)\n          });\n        }\n      }\n      if (edgeIdsToRemove.length > 0) {\n        onEdgesDelete === null || onEdgesDelete === void 0 || onEdgesDelete(edgesToRemove);\n        if (onEdgesChange) {\n          onEdgesChange(edgeIdsToRemove.map(function (id) {\n            return {\n              id: id,\n              type: 'remove'\n            };\n          }));\n        }\n      }\n      if (nodesToRemove.length > 0) {\n        onNodesDelete === null || onNodesDelete === void 0 || onNodesDelete(nodesToRemove);\n        if (onNodesChange) {\n          var nodeChanges = nodesToRemove.map(function (n) {\n            return {\n              id: n.id,\n              type: 'remove'\n            };\n          });\n          onNodesChange(nodeChanges);\n        }\n      }\n    }\n  }, []);\n  var getNodeRect = useCallback(function (nodeOrRect) {\n    var isRect = isRectObject(nodeOrRect);\n    var node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n    var nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n    return [nodeRect, node, isRect];\n  }, []);\n  var getIntersectingNodes = useCallback(function (nodeOrRect) {\n    var partially = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var nodes = arguments.length > 2 ? arguments[2] : undefined;\n    var _getNodeRect = getNodeRect(nodeOrRect),\n      _getNodeRect2 = _slicedToArray(_getNodeRect, 3),\n      nodeRect = _getNodeRect2[0],\n      node = _getNodeRect2[1],\n      isRect = _getNodeRect2[2];\n    if (!nodeRect) {\n      return [];\n    }\n    return (nodes || store.getState().getNodes()).filter(function (n) {\n      if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n        return false;\n      }\n      var currNodeRect = nodeToRect(n);\n      var overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n      var partiallyVisible = partially && overlappingArea > 0;\n      return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    });\n  }, []);\n  var isNodeIntersecting = useCallback(function (nodeOrRect, area) {\n    var partially = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var _getNodeRect3 = getNodeRect(nodeOrRect),\n      _getNodeRect4 = _slicedToArray(_getNodeRect3, 1),\n      nodeRect = _getNodeRect4[0];\n    if (!nodeRect) {\n      return false;\n    }\n    var overlappingArea = getOverlappingArea(nodeRect, area);\n    var partiallyVisible = partially && overlappingArea > 0;\n    return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n  }, []);\n  return useMemo(function () {\n    return _objectSpread(_objectSpread({}, viewportHelper), {}, {\n      getNodes: getNodes,\n      getNode: getNode,\n      getEdges: getEdges,\n      getEdge: getEdge,\n      setNodes: setNodes,\n      setEdges: setEdges,\n      addNodes: addNodes,\n      addEdges: addEdges,\n      toObject: toObject,\n      deleteElements: deleteElements,\n      getIntersectingNodes: getIntersectingNodes,\n      isNodeIntersecting: isNodeIntersecting\n    });\n  }, [viewportHelper, getNodes, getNode, getEdges, getEdge, setNodes, setEdges, addNodes, addEdges, toObject, deleteElements, getIntersectingNodes, isNodeIntersecting]);\n}\nvar useGlobalKeyHandler = function useGlobalKeyHandler(_ref48) {\n  var deleteKeyCode = _ref48.deleteKeyCode,\n    multiSelectionKeyCode = _ref48.multiSelectionKeyCode;\n  var store = useStoreApi();\n  var _useReactFlow = useReactFlow(),\n    deleteElements = _useReactFlow.deleteElements;\n  var deleteKeyPressed = useKeyPress(deleteKeyCode);\n  var multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n  useEffect(function () {\n    if (deleteKeyPressed) {\n      var _store$getState17 = store.getState(),\n        edges = _store$getState17.edges,\n        getNodes = _store$getState17.getNodes;\n      var selectedNodes = getNodes().filter(function (node) {\n        return node.selected;\n      });\n      var selectedEdges = edges.filter(function (edge) {\n        return edge.selected;\n      });\n      deleteElements({\n        nodes: selectedNodes,\n        edges: selectedEdges\n      });\n      store.setState({\n        nodesSelectionActive: false\n      });\n    }\n  }, [deleteKeyPressed]);\n  useEffect(function () {\n    store.setState({\n      multiSelectionActive: multiSelectionKeyPressed\n    });\n  }, [multiSelectionKeyPressed]);\n};\nfunction useResizeHandler(rendererNode) {\n  var store = useStoreApi();\n  useEffect(function () {\n    var resizeObserver;\n    var updateDimensions = function updateDimensions() {\n      if (!rendererNode.current) {\n        return;\n      }\n      var size = getDimensions(rendererNode.current);\n      if (size.height === 0 || size.width === 0) {\n        var _store$getState$onErr2, _store$getState18;\n        (_store$getState$onErr2 = (_store$getState18 = store.getState()).onError) === null || _store$getState$onErr2 === void 0 || _store$getState$onErr2.call(_store$getState18, '004', errorMessages['error004']());\n      }\n      store.setState({\n        width: size.width || 500,\n        height: size.height || 500\n      });\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    if (rendererNode.current) {\n      resizeObserver = new ResizeObserver(function () {\n        return updateDimensions();\n      });\n      resizeObserver.observe(rendererNode.current);\n    }\n    return function () {\n      window.removeEventListener('resize', updateDimensions);\n      if (resizeObserver && rendererNode.current) {\n        resizeObserver.unobserve(rendererNode.current);\n      }\n    };\n  }, []);\n}\nvar containerStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0\n};\nvar viewChanged = function viewChanged(prevViewport, eventTransform) {\n  return prevViewport.x !== eventTransform.x || prevViewport.y !== eventTransform.y || prevViewport.zoom !== eventTransform.k;\n};\nvar eventToFlowTransform = function eventToFlowTransform(eventTransform) {\n  return {\n    x: eventTransform.x,\n    y: eventTransform.y,\n    zoom: eventTransform.k\n  };\n};\nvar isWrappedWithClass = function isWrappedWithClass(event, className) {\n  return event.target.closest(\".\".concat(className));\n};\nvar isRightClickPan = function isRightClickPan(panOnDrag, usedButton) {\n  return usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\n};\nvar wheelDelta = function wheelDelta(event) {\n  var factor = event.ctrlKey && isMacOs() ? 10 : 1;\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\nvar selector$a = function selector$a(s) {\n  return {\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive\n  };\n};\nvar ZoomPane = function ZoomPane(_ref49) {\n  var onMove = _ref49.onMove,\n    onMoveStart = _ref49.onMoveStart,\n    onMoveEnd = _ref49.onMoveEnd,\n    onPaneContextMenu = _ref49.onPaneContextMenu,\n    _ref49$zoomOnScroll = _ref49.zoomOnScroll,\n    zoomOnScroll = _ref49$zoomOnScroll === void 0 ? true : _ref49$zoomOnScroll,\n    _ref49$zoomOnPinch = _ref49.zoomOnPinch,\n    zoomOnPinch = _ref49$zoomOnPinch === void 0 ? true : _ref49$zoomOnPinch,\n    _ref49$panOnScroll = _ref49.panOnScroll,\n    panOnScroll = _ref49$panOnScroll === void 0 ? false : _ref49$panOnScroll,\n    _ref49$panOnScrollSpe = _ref49.panOnScrollSpeed,\n    panOnScrollSpeed = _ref49$panOnScrollSpe === void 0 ? 0.5 : _ref49$panOnScrollSpe,\n    _ref49$panOnScrollMod = _ref49.panOnScrollMode,\n    panOnScrollMode = _ref49$panOnScrollMod === void 0 ? PanOnScrollMode.Free : _ref49$panOnScrollMod,\n    _ref49$zoomOnDoubleCl = _ref49.zoomOnDoubleClick,\n    zoomOnDoubleClick = _ref49$zoomOnDoubleCl === void 0 ? true : _ref49$zoomOnDoubleCl,\n    elementsSelectable = _ref49.elementsSelectable,\n    _ref49$panOnDrag = _ref49.panOnDrag,\n    panOnDrag = _ref49$panOnDrag === void 0 ? true : _ref49$panOnDrag,\n    defaultViewport = _ref49.defaultViewport,\n    translateExtent = _ref49.translateExtent,\n    minZoom = _ref49.minZoom,\n    maxZoom = _ref49.maxZoom,\n    zoomActivationKeyCode = _ref49.zoomActivationKeyCode,\n    _ref49$preventScrolli = _ref49.preventScrolling,\n    preventScrolling = _ref49$preventScrolli === void 0 ? true : _ref49$preventScrolli,\n    children = _ref49.children,\n    noWheelClassName = _ref49.noWheelClassName,\n    noPanClassName = _ref49.noPanClassName;\n  var timerId = useRef();\n  var store = useStoreApi();\n  var isZoomingOrPanning = useRef(false);\n  var zoomedWithRightMouseButton = useRef(false);\n  var zoomPane = useRef(null);\n  var prevTransform = useRef({\n    x: 0,\n    y: 0,\n    zoom: 0\n  });\n  var _useStore6 = useStore(selector$a, shallow),\n    d3Zoom = _useStore6.d3Zoom,\n    d3Selection = _useStore6.d3Selection,\n    d3ZoomHandler = _useStore6.d3ZoomHandler,\n    userSelectionActive = _useStore6.userSelectionActive;\n  var zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n  var mouseButton = useRef(0);\n  var isPanScrolling = useRef(false);\n  var panScrollTimeout = useRef();\n  useResizeHandler(zoomPane);\n  useEffect(function () {\n    if (zoomPane.current) {\n      var bbox = zoomPane.current.getBoundingClientRect();\n      var d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n      var selection = select(zoomPane.current).call(d3ZoomInstance);\n      var updatedTransform = zoomIdentity.translate(defaultViewport.x, defaultViewport.y).scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n      var extent = [[0, 0], [bbox.width, bbox.height]];\n      var constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n      d3ZoomInstance.transform(selection, constrainedTransform);\n      d3ZoomInstance.wheelDelta(wheelDelta);\n      store.setState({\n        d3Zoom: d3ZoomInstance,\n        d3Selection: selection,\n        d3ZoomHandler: selection.on('wheel.zoom'),\n        // we need to pass transform because zoom handler is not registered when we set the initial transform\n        transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n        domNode: zoomPane.current.closest('.react-flow')\n      });\n    }\n  }, []);\n  useEffect(function () {\n    if (d3Selection && d3Zoom) {\n      if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n        d3Selection.on('wheel.zoom', function (event) {\n          if (isWrappedWithClass(event, noWheelClassName)) {\n            return false;\n          }\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          var currentZoom = d3Selection.property('__zoom').k || 1;\n          var _isMacOs = isMacOs();\n          // macos sets ctrlKey=true for pinch gesture on a trackpad\n          if (event.ctrlKey && zoomOnPinch && _isMacOs) {\n            var point = pointer(event);\n            var pinchDelta = wheelDelta(event);\n            var _zoom2 = currentZoom * Math.pow(2, pinchDelta);\n            // @ts-ignore\n            d3Zoom.scaleTo(d3Selection, _zoom2, point, event);\n            return;\n          }\n          // increase scroll speed in firefox\n          // firefox: deltaMode === 1; chrome: deltaMode === 0\n          var deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n          var deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n          var deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n          // this enables vertical scrolling with shift + scroll on windows\n          if (!_isMacOs && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n            deltaX = event.deltaY * deltaNormalize;\n            deltaY = 0;\n          }\n          d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed,\n          // @ts-ignore\n          {\n            internal: true\n          });\n          var nextViewport = eventToFlowTransform(d3Selection.property('__zoom'));\n          var _store$getState19 = store.getState(),\n            onViewportChangeStart = _store$getState19.onViewportChangeStart,\n            onViewportChange = _store$getState19.onViewportChange,\n            onViewportChangeEnd = _store$getState19.onViewportChangeEnd;\n          clearTimeout(panScrollTimeout.current);\n          // for pan on scroll we need to handle the event calls on our own\n          // we can't use the start, zoom and end events from d3-zoom\n          // because start and move gets called on every scroll event and not once at the beginning\n          if (!isPanScrolling.current) {\n            isPanScrolling.current = true;\n            onMoveStart === null || onMoveStart === void 0 || onMoveStart(event, nextViewport);\n            onViewportChangeStart === null || onViewportChangeStart === void 0 || onViewportChangeStart(nextViewport);\n          }\n          if (isPanScrolling.current) {\n            onMove === null || onMove === void 0 || onMove(event, nextViewport);\n            onViewportChange === null || onViewportChange === void 0 || onViewportChange(nextViewport);\n            panScrollTimeout.current = setTimeout(function () {\n              onMoveEnd === null || onMoveEnd === void 0 || onMoveEnd(event, nextViewport);\n              onViewportChangeEnd === null || onViewportChangeEnd === void 0 || onViewportChangeEnd(nextViewport);\n              isPanScrolling.current = false;\n            }, 150);\n          }\n        }, {\n          passive: false\n        });\n      } else if (typeof d3ZoomHandler !== 'undefined') {\n        d3Selection.on('wheel.zoom', function (event, d) {\n          if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n            return null;\n          }\n          event.preventDefault();\n          d3ZoomHandler.call(this, event, d);\n        }, {\n          passive: false\n        });\n      }\n    }\n  }, [userSelectionActive, panOnScroll, panOnScrollMode, d3Selection, d3Zoom, d3ZoomHandler, zoomActivationKeyPressed, zoomOnPinch, preventScrolling, noWheelClassName, onMoveStart, onMove, onMoveEnd]);\n  useEffect(function () {\n    if (d3Zoom) {\n      d3Zoom.on('start', function (event) {\n        var _event$sourceEvent, _event$sourceEvent2;\n        if (!event.sourceEvent || event.sourceEvent.internal) {\n          return null;\n        }\n        // we need to remember it here, because it's always 0 in the \"zoom\" event\n        mouseButton.current = (_event$sourceEvent = event.sourceEvent) === null || _event$sourceEvent === void 0 ? void 0 : _event$sourceEvent.button;\n        var _store$getState20 = store.getState(),\n          onViewportChangeStart = _store$getState20.onViewportChangeStart;\n        var flowTransform = eventToFlowTransform(event.transform);\n        isZoomingOrPanning.current = true;\n        prevTransform.current = flowTransform;\n        if (((_event$sourceEvent2 = event.sourceEvent) === null || _event$sourceEvent2 === void 0 ? void 0 : _event$sourceEvent2.type) === 'mousedown') {\n          store.setState({\n            paneDragging: true\n          });\n        }\n        onViewportChangeStart === null || onViewportChangeStart === void 0 || onViewportChangeStart(flowTransform);\n        onMoveStart === null || onMoveStart === void 0 || onMoveStart(event.sourceEvent, flowTransform);\n      });\n    }\n  }, [d3Zoom, onMoveStart]);\n  useEffect(function () {\n    if (d3Zoom) {\n      if (userSelectionActive && !isZoomingOrPanning.current) {\n        d3Zoom.on('zoom', null);\n      } else if (!userSelectionActive) {\n        d3Zoom.on('zoom', function (event) {\n          var _mouseButton$current, _event$sourceEvent3;\n          var _store$getState21 = store.getState(),\n            onViewportChange = _store$getState21.onViewportChange;\n          store.setState({\n            transform: [event.transform.x, event.transform.y, event.transform.k]\n          });\n          zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, (_mouseButton$current = mouseButton.current) !== null && _mouseButton$current !== void 0 ? _mouseButton$current : 0));\n          if ((onMove || onViewportChange) && !((_event$sourceEvent3 = event.sourceEvent) !== null && _event$sourceEvent3 !== void 0 && _event$sourceEvent3.internal)) {\n            var flowTransform = eventToFlowTransform(event.transform);\n            onViewportChange === null || onViewportChange === void 0 || onViewportChange(flowTransform);\n            onMove === null || onMove === void 0 || onMove(event.sourceEvent, flowTransform);\n          }\n        });\n      }\n    }\n  }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n  useEffect(function () {\n    if (d3Zoom) {\n      d3Zoom.on('end', function (event) {\n        var _mouseButton$current2;\n        if (!event.sourceEvent || event.sourceEvent.internal) {\n          return null;\n        }\n        var _store$getState22 = store.getState(),\n          onViewportChangeEnd = _store$getState22.onViewportChangeEnd;\n        isZoomingOrPanning.current = false;\n        store.setState({\n          paneDragging: false\n        });\n        if (onPaneContextMenu && isRightClickPan(panOnDrag, (_mouseButton$current2 = mouseButton.current) !== null && _mouseButton$current2 !== void 0 ? _mouseButton$current2 : 0) && !zoomedWithRightMouseButton.current) {\n          onPaneContextMenu(event.sourceEvent);\n        }\n        zoomedWithRightMouseButton.current = false;\n        if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n          var flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          clearTimeout(timerId.current);\n          timerId.current = setTimeout(function () {\n            onViewportChangeEnd === null || onViewportChangeEnd === void 0 || onViewportChangeEnd(flowTransform);\n            onMoveEnd === null || onMoveEnd === void 0 || onMoveEnd(event.sourceEvent, flowTransform);\n          }, panOnScroll ? 150 : 0);\n        }\n      });\n    }\n  }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n  useEffect(function () {\n    if (d3Zoom) {\n      d3Zoom.filter(function (event) {\n        var zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        var pinchZoom = zoomOnPinch && event.ctrlKey;\n        if (event.button === 1 && event.type === 'mousedown' && (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n          return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n          return false;\n        }\n        // during a selection we prevent all other interactions\n        if (userSelectionActive) {\n          return false;\n        }\n        // if zoom on double click is disabled, we prevent the double click event\n        if (!zoomOnDoubleClick && event.type === 'dblclick') {\n          return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n          return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n          return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n          return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n          return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // if the pane is only movable using allowed clicks\n        if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // We only allow right clicks if pan on drag is set to right click\n        var buttonAllowed = Array.isArray(panOnDrag) && panOnDrag.includes(event.button) || !event.button || event.button <= 1;\n        // default filter for d3-zoom\n        return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n      });\n    }\n  }, [userSelectionActive, d3Zoom, zoomOnScroll, zoomOnPinch, panOnScroll, zoomOnDoubleClick, panOnDrag, elementsSelectable, zoomActivationKeyPressed]);\n  return jsx(\"div\", {\n    className: \"react-flow__renderer\",\n    ref: zoomPane,\n    style: containerStyle,\n    children: children\n  });\n};\nvar selector$9 = function selector$9(s) {\n  return {\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect\n  };\n};\nfunction UserSelection() {\n  var _useStore7 = useStore(selector$9, shallow),\n    userSelectionActive = _useStore7.userSelectionActive,\n    userSelectionRect = _useStore7.userSelectionRect;\n  var isActive = userSelectionActive && userSelectionRect;\n  if (!isActive) {\n    return null;\n  }\n  return jsx(\"div\", {\n    className: \"react-flow__selection react-flow__container\",\n    style: {\n      width: userSelectionRect.width,\n      height: userSelectionRect.height,\n      transform: \"translate(\".concat(userSelectionRect.x, \"px, \").concat(userSelectionRect.y, \"px)\")\n    }\n  });\n}\nfunction handleParentExpand(res, updateItem) {\n  var parent = res.find(function (e) {\n    return e.id === updateItem.parentNode;\n  });\n  if (parent) {\n    var extendWidth = updateItem.position.x + updateItem.width - parent.width;\n    var extendHeight = updateItem.position.y + updateItem.height - parent.height;\n    if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n      var _parent$style$width, _parent$style$height;\n      parent.style = _objectSpread({}, parent.style) || {};\n      parent.style.width = (_parent$style$width = parent.style.width) !== null && _parent$style$width !== void 0 ? _parent$style$width : parent.width;\n      parent.style.height = (_parent$style$height = parent.style.height) !== null && _parent$style$height !== void 0 ? _parent$style$height : parent.height;\n      if (extendWidth > 0) {\n        parent.style.width += extendWidth;\n      }\n      if (extendHeight > 0) {\n        parent.style.height += extendHeight;\n      }\n      if (updateItem.position.x < 0) {\n        var xDiff = Math.abs(updateItem.position.x);\n        parent.position.x = parent.position.x - xDiff;\n        parent.style.width += xDiff;\n        updateItem.position.x = 0;\n      }\n      if (updateItem.position.y < 0) {\n        var yDiff = Math.abs(updateItem.position.y);\n        parent.position.y = parent.position.y - yDiff;\n        parent.style.height += yDiff;\n        updateItem.position.y = 0;\n      }\n      parent.width = parent.style.width;\n      parent.height = parent.style.height;\n    }\n  }\n}\nfunction applyChanges(changes, elements) {\n  // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n  if (changes.some(function (c) {\n    return c.type === 'reset';\n  })) {\n    return changes.filter(function (c) {\n      return c.type === 'reset';\n    }).map(function (c) {\n      return c.item;\n    });\n  }\n  var initElements = changes.filter(function (c) {\n    return c.type === 'add';\n  }).map(function (c) {\n    return c.item;\n  });\n  return elements.reduce(function (res, item) {\n    var currentChanges = changes.filter(function (c) {\n      return c.id === item.id;\n    });\n    if (currentChanges.length === 0) {\n      res.push(item);\n      return res;\n    }\n    var updateItem = _objectSpread({}, item);\n    var _iterator = _createForOfIteratorHelper(currentChanges),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var currentChange = _step.value;\n        if (currentChange) {\n          switch (currentChange.type) {\n            case 'select':\n              {\n                updateItem.selected = currentChange.selected;\n                break;\n              }\n            case 'position':\n              {\n                if (typeof currentChange.position !== 'undefined') {\n                  updateItem.position = currentChange.position;\n                }\n                if (typeof currentChange.positionAbsolute !== 'undefined') {\n                  updateItem.positionAbsolute = currentChange.positionAbsolute;\n                }\n                if (typeof currentChange.dragging !== 'undefined') {\n                  updateItem.dragging = currentChange.dragging;\n                }\n                if (updateItem.expandParent) {\n                  handleParentExpand(res, updateItem);\n                }\n                break;\n              }\n            case 'dimensions':\n              {\n                if (typeof currentChange.dimensions !== 'undefined') {\n                  updateItem.width = currentChange.dimensions.width;\n                  updateItem.height = currentChange.dimensions.height;\n                }\n                if (typeof currentChange.updateStyle !== 'undefined') {\n                  updateItem.style = _objectSpread(_objectSpread({}, updateItem.style || {}), currentChange.dimensions);\n                }\n                if (typeof currentChange.resizing === 'boolean') {\n                  updateItem.resizing = currentChange.resizing;\n                }\n                if (updateItem.expandParent) {\n                  handleParentExpand(res, updateItem);\n                }\n                break;\n              }\n            case 'remove':\n              {\n                return res;\n              }\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    res.push(updateItem);\n    return res;\n  }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n  return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n  return applyChanges(changes, edges);\n}\nvar createSelectionChange = function createSelectionChange(id, selected) {\n  return {\n    id: id,\n    type: 'select',\n    selected: selected\n  };\n};\nfunction getSelectionChanges(items, selectedIds) {\n  return items.reduce(function (res, item) {\n    var willBeSelected = selectedIds.includes(item.id);\n    if (!item.selected && willBeSelected) {\n      item.selected = true;\n      res.push(createSelectionChange(item.id, true));\n    } else if (item.selected && !willBeSelected) {\n      item.selected = false;\n      res.push(createSelectionChange(item.id, false));\n    }\n    return res;\n  }, []);\n}\nvar wrapHandler = function wrapHandler(handler, containerRef) {\n  return function (event) {\n    if (event.target !== containerRef.current) {\n      return;\n    }\n    handler === null || handler === void 0 || handler(event);\n  };\n};\nvar selector$8 = function selector$8(s) {\n  return {\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging\n  };\n};\nvar Pane = memo(function (_ref50) {\n  var isSelecting = _ref50.isSelecting,\n    _ref50$selectionMode = _ref50.selectionMode,\n    selectionMode = _ref50$selectionMode === void 0 ? SelectionMode.Full : _ref50$selectionMode,\n    panOnDrag = _ref50.panOnDrag,\n    onSelectionStart = _ref50.onSelectionStart,\n    onSelectionEnd = _ref50.onSelectionEnd,\n    onPaneClick = _ref50.onPaneClick,\n    onPaneContextMenu = _ref50.onPaneContextMenu,\n    onPaneScroll = _ref50.onPaneScroll,\n    onPaneMouseEnter = _ref50.onPaneMouseEnter,\n    onPaneMouseMove = _ref50.onPaneMouseMove,\n    onPaneMouseLeave = _ref50.onPaneMouseLeave,\n    children = _ref50.children;\n  var container = useRef(null);\n  var store = useStoreApi();\n  var prevSelectedNodesCount = useRef(0);\n  var prevSelectedEdgesCount = useRef(0);\n  var containerBounds = useRef();\n  var _useStore8 = useStore(selector$8, shallow),\n    userSelectionActive = _useStore8.userSelectionActive,\n    elementsSelectable = _useStore8.elementsSelectable,\n    dragging = _useStore8.dragging;\n  var resetUserSelection = function resetUserSelection() {\n    store.setState({\n      userSelectionActive: false,\n      userSelectionRect: null\n    });\n    prevSelectedNodesCount.current = 0;\n    prevSelectedEdgesCount.current = 0;\n  };\n  var onClick = function onClick(event) {\n    onPaneClick === null || onPaneClick === void 0 || onPaneClick(event);\n    store.getState().resetSelectedElements();\n    store.setState({\n      nodesSelectionActive: false\n    });\n  };\n  var onContextMenu = function onContextMenu(event) {\n    if (Array.isArray(panOnDrag) && panOnDrag !== null && panOnDrag !== void 0 && panOnDrag.includes(2)) {\n      event.preventDefault();\n      return;\n    }\n    onPaneContextMenu === null || onPaneContextMenu === void 0 || onPaneContextMenu(event);\n  };\n  var onWheel = onPaneScroll ? function (event) {\n    return onPaneScroll(event);\n  } : undefined;\n  var onMouseDown = function onMouseDown(event) {\n    var _store$getState23 = store.getState(),\n      resetSelectedElements = _store$getState23.resetSelectedElements,\n      domNode = _store$getState23.domNode;\n    containerBounds.current = domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect();\n    if (!elementsSelectable || !isSelecting || event.button !== 0 || event.target !== container.current || !containerBounds.current) {\n      return;\n    }\n    var _getEventPosition3 = getEventPosition(event, containerBounds.current),\n      x = _getEventPosition3.x,\n      y = _getEventPosition3.y;\n    resetSelectedElements();\n    store.setState({\n      userSelectionRect: {\n        width: 0,\n        height: 0,\n        startX: x,\n        startY: y,\n        x: x,\n        y: y\n      }\n    });\n    onSelectionStart === null || onSelectionStart === void 0 || onSelectionStart(event);\n  };\n  var onMouseMove = function onMouseMove(event) {\n    var _userSelectionRect$st, _userSelectionRect$st2;\n    var _store$getState24 = store.getState(),\n      userSelectionRect = _store$getState24.userSelectionRect,\n      nodeInternals = _store$getState24.nodeInternals,\n      edges = _store$getState24.edges,\n      transform = _store$getState24.transform,\n      onNodesChange = _store$getState24.onNodesChange,\n      onEdgesChange = _store$getState24.onEdgesChange,\n      nodeOrigin = _store$getState24.nodeOrigin,\n      getNodes = _store$getState24.getNodes;\n    if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n      return;\n    }\n    store.setState({\n      userSelectionActive: true,\n      nodesSelectionActive: false\n    });\n    var mousePos = getEventPosition(event, containerBounds.current);\n    var startX = (_userSelectionRect$st = userSelectionRect.startX) !== null && _userSelectionRect$st !== void 0 ? _userSelectionRect$st : 0;\n    var startY = (_userSelectionRect$st2 = userSelectionRect.startY) !== null && _userSelectionRect$st2 !== void 0 ? _userSelectionRect$st2 : 0;\n    var nextUserSelectRect = _objectSpread(_objectSpread({}, userSelectionRect), {}, {\n      x: mousePos.x < startX ? mousePos.x : startX,\n      y: mousePos.y < startY ? mousePos.y : startY,\n      width: Math.abs(mousePos.x - startX),\n      height: Math.abs(mousePos.y - startY)\n    });\n    var nodes = getNodes();\n    var selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n    var selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map(function (e) {\n      return e.id;\n    });\n    var selectedNodeIds = selectedNodes.map(function (n) {\n      return n.id;\n    });\n    if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n      prevSelectedNodesCount.current = selectedNodeIds.length;\n      var changes = getSelectionChanges(nodes, selectedNodeIds);\n      if (changes.length) {\n        onNodesChange === null || onNodesChange === void 0 || onNodesChange(changes);\n      }\n    }\n    if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n      prevSelectedEdgesCount.current = selectedEdgeIds.length;\n      var _changes = getSelectionChanges(edges, selectedEdgeIds);\n      if (_changes.length) {\n        onEdgesChange === null || onEdgesChange === void 0 || onEdgesChange(_changes);\n      }\n    }\n    store.setState({\n      userSelectionRect: nextUserSelectRect\n    });\n  };\n  var onMouseUp = function onMouseUp(event) {\n    if (event.button !== 0) {\n      return;\n    }\n    var _store$getState25 = store.getState(),\n      userSelectionRect = _store$getState25.userSelectionRect;\n    // We only want to trigger click functions when in selection mode if\n    // the user did not move the mouse.\n    if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n      onClick === null || onClick === void 0 || onClick(event);\n    }\n    store.setState({\n      nodesSelectionActive: prevSelectedNodesCount.current > 0\n    });\n    resetUserSelection();\n    onSelectionEnd === null || onSelectionEnd === void 0 || onSelectionEnd(event);\n  };\n  var onMouseLeave = function onMouseLeave(event) {\n    if (userSelectionActive) {\n      store.setState({\n        nodesSelectionActive: prevSelectedNodesCount.current > 0\n      });\n      onSelectionEnd === null || onSelectionEnd === void 0 || onSelectionEnd(event);\n    }\n    resetUserSelection();\n  };\n  var hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n  return jsxs(\"div\", {\n    className: cc(['react-flow__pane', {\n      dragging: dragging,\n      selection: isSelecting\n    }]),\n    onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container),\n    onContextMenu: wrapHandler(onContextMenu, container),\n    onWheel: wrapHandler(onWheel, container),\n    onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter,\n    onMouseDown: hasActiveSelection ? onMouseDown : undefined,\n    onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove,\n    onMouseUp: hasActiveSelection ? onMouseUp : undefined,\n    onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave,\n    ref: container,\n    style: containerStyle,\n    children: [children, jsx(UserSelection, {})]\n  });\n});\nPane.displayName = 'Pane';\nfunction isParentSelected(node, nodeInternals) {\n  if (!node.parentNode) {\n    return false;\n  }\n  var parentNode = nodeInternals.get(node.parentNode);\n  if (!parentNode) {\n    return false;\n  }\n  if (parentNode.selected) {\n    return true;\n  }\n  return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n  var current = target;\n  do {\n    var _current;\n    if ((_current = current) !== null && _current !== void 0 && _current.matches(selector)) return true;\n    if (current === nodeRef.current) return false;\n    current = current.parentElement;\n  } while (current);\n  return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n  return Array.from(nodeInternals.values()).filter(function (n) {\n    return (n.selected || n.id === nodeId) && (!n.parentNode || !isParentSelected(n, nodeInternals)) && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined');\n  }).map(function (n) {\n    var _n$positionAbsolute$x, _n$positionAbsolute, _n$positionAbsolute$y, _n$positionAbsolute2;\n    return {\n      id: n.id,\n      position: n.position || {\n        x: 0,\n        y: 0\n      },\n      positionAbsolute: n.positionAbsolute || {\n        x: 0,\n        y: 0\n      },\n      distance: {\n        x: mousePos.x - ((_n$positionAbsolute$x = (_n$positionAbsolute = n.positionAbsolute) === null || _n$positionAbsolute === void 0 ? void 0 : _n$positionAbsolute.x) !== null && _n$positionAbsolute$x !== void 0 ? _n$positionAbsolute$x : 0),\n        y: mousePos.y - ((_n$positionAbsolute$y = (_n$positionAbsolute2 = n.positionAbsolute) === null || _n$positionAbsolute2 === void 0 ? void 0 : _n$positionAbsolute2.y) !== null && _n$positionAbsolute$y !== void 0 ? _n$positionAbsolute$y : 0)\n      },\n      delta: {\n        x: 0,\n        y: 0\n      },\n      extent: n.extent,\n      parentNode: n.parentNode,\n      width: n.width,\n      height: n.height\n    };\n  });\n}\nfunction clampNodeExtent(node, extent) {\n  if (!extent || extent === 'parent') {\n    return extent;\n  }\n  return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent) {\n  var nodeOrigin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [0, 0];\n  var onError = arguments.length > 5 ? arguments[5] : undefined;\n  var clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n  var currentExtent = clampedNodeExtent;\n  if (node.extent === 'parent') {\n    if (node.parentNode && node.width && node.height) {\n      var parent = nodeInternals.get(node.parentNode);\n      var _getNodePositionWithO3 = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute,\n        parentX = _getNodePositionWithO3.x,\n        parentY = _getNodePositionWithO3.y;\n      currentExtent = parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height) ? [[parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]], [parentX + parent.width - node.width + node.width * nodeOrigin[0], parentY + parent.height - node.height + node.height * nodeOrigin[1]]] : currentExtent;\n    } else {\n      onError === null || onError === void 0 || onError('005', errorMessages['error005']());\n      currentExtent = clampedNodeExtent;\n    }\n  } else if (node.extent && node.parentNode) {\n    var _parent = nodeInternals.get(node.parentNode);\n    var _getNodePositionWithO4 = getNodePositionWithOrigin(_parent, nodeOrigin).positionAbsolute,\n      _parentX = _getNodePositionWithO4.x,\n      _parentY = _getNodePositionWithO4.y;\n    currentExtent = [[node.extent[0][0] + _parentX, node.extent[0][1] + _parentY], [node.extent[1][0] + _parentX, node.extent[1][1] + _parentY]];\n  }\n  var parentPosition = {\n    x: 0,\n    y: 0\n  };\n  if (node.parentNode) {\n    var parentNode = nodeInternals.get(node.parentNode);\n    parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n  }\n  var positionAbsolute = currentExtent && currentExtent !== 'parent' ? clampPosition(nextPosition, currentExtent) : nextPosition;\n  return {\n    position: {\n      x: positionAbsolute.x - parentPosition.x,\n      y: positionAbsolute.y - parentPosition.y\n    },\n    positionAbsolute: positionAbsolute\n  };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams(_ref51) {\n  var nodeId = _ref51.nodeId,\n    dragItems = _ref51.dragItems,\n    nodeInternals = _ref51.nodeInternals;\n  var extentedDragItems = dragItems.map(function (n) {\n    var node = nodeInternals.get(n.id);\n    return _objectSpread(_objectSpread({}, node), {}, {\n      position: n.position,\n      positionAbsolute: n.positionAbsolute\n    });\n  });\n  return [nodeId ? extentedDragItems.find(function (n) {\n    return n.id === nodeId;\n  }) : extentedDragItems[0], extentedDragItems];\n}\nvar getHandleBounds = function getHandleBounds(selector, nodeElement, zoom, nodeOrigin) {\n  var handles = nodeElement.querySelectorAll(selector);\n  if (!handles || !handles.length) {\n    return null;\n  }\n  var handlesArray = Array.from(handles);\n  var nodeBounds = nodeElement.getBoundingClientRect();\n  var nodeOffset = {\n    x: nodeBounds.width * nodeOrigin[0],\n    y: nodeBounds.height * nodeOrigin[1]\n  };\n  return handlesArray.map(function (handle) {\n    var handleBounds = handle.getBoundingClientRect();\n    return _objectSpread({\n      id: handle.getAttribute('data-handleid'),\n      position: handle.getAttribute('data-handlepos'),\n      x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n      y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom\n    }, getDimensions(handle));\n  });\n};\nfunction getMouseHandler(id, getState, handler) {\n  return handler === undefined ? handler : function (event) {\n    var node = getState().nodeInternals.get(id);\n    if (node) {\n      handler(event, _objectSpread({}, node));\n    }\n  };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick(_ref52) {\n  var id = _ref52.id,\n    store = _ref52.store,\n    _ref52$unselect = _ref52.unselect,\n    unselect = _ref52$unselect === void 0 ? false : _ref52$unselect,\n    nodeRef = _ref52.nodeRef;\n  var _store$getState26 = store.getState(),\n    addSelectedNodes = _store$getState26.addSelectedNodes,\n    unselectNodesAndEdges = _store$getState26.unselectNodesAndEdges,\n    multiSelectionActive = _store$getState26.multiSelectionActive,\n    nodeInternals = _store$getState26.nodeInternals,\n    onError = _store$getState26.onError;\n  var node = nodeInternals.get(id);\n  if (!node) {\n    onError === null || onError === void 0 || onError('012', errorMessages['error012'](id));\n    return;\n  }\n  store.setState({\n    nodesSelectionActive: false\n  });\n  if (!node.selected) {\n    addSelectedNodes([id]);\n  } else if (unselect || node.selected && multiSelectionActive) {\n    unselectNodesAndEdges({\n      nodes: [node]\n    });\n    requestAnimationFrame(function () {\n      var _nodeRef$current;\n      return nodeRef === null || nodeRef === void 0 || (_nodeRef$current = nodeRef.current) === null || _nodeRef$current === void 0 ? void 0 : _nodeRef$current.blur();\n    });\n  }\n}\nfunction useGetPointerPosition() {\n  var store = useStoreApi();\n  // returns the pointer position projected to the RF coordinate system\n  var getPointerPosition = useCallback(function (_ref53) {\n    var sourceEvent = _ref53.sourceEvent;\n    var _store$getState27 = store.getState(),\n      transform = _store$getState27.transform,\n      snapGrid = _store$getState27.snapGrid,\n      snapToGrid = _store$getState27.snapToGrid;\n    var x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n    var y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n    var pointerPos = {\n      x: (x - transform[0]) / transform[2],\n      y: (y - transform[1]) / transform[2]\n    };\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return _objectSpread({\n      xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n      ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y\n    }, pointerPos);\n  }, []);\n  return getPointerPosition;\n}\nfunction wrapSelectionDragFunc(selectionFunc) {\n  return function (event, _, nodes) {\n    return selectionFunc === null || selectionFunc === void 0 ? void 0 : selectionFunc(event, nodes);\n  };\n}\nfunction useDrag(_ref54) {\n  var nodeRef = _ref54.nodeRef,\n    _ref54$disabled = _ref54.disabled,\n    disabled = _ref54$disabled === void 0 ? false : _ref54$disabled,\n    noDragClassName = _ref54.noDragClassName,\n    handleSelector = _ref54.handleSelector,\n    nodeId = _ref54.nodeId,\n    isSelectable = _ref54.isSelectable,\n    selectNodesOnDrag = _ref54.selectNodesOnDrag;\n  var store = useStoreApi();\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    dragging = _useState6[0],\n    setDragging = _useState6[1];\n  var dragItems = useRef([]);\n  var lastPos = useRef({\n    x: null,\n    y: null\n  });\n  var autoPanId = useRef(0);\n  var containerBounds = useRef(null);\n  var mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  var dragEvent = useRef(null);\n  var autoPanStarted = useRef(false);\n  var getPointerPosition = useGetPointerPosition();\n  useEffect(function () {\n    if (nodeRef !== null && nodeRef !== void 0 && nodeRef.current) {\n      var selection = select(nodeRef.current);\n      var updateNodes = function updateNodes(_ref55) {\n        var x = _ref55.x,\n          y = _ref55.y;\n        var _store$getState28 = store.getState(),\n          nodeInternals = _store$getState28.nodeInternals,\n          onNodeDrag = _store$getState28.onNodeDrag,\n          onSelectionDrag = _store$getState28.onSelectionDrag,\n          updateNodePositions = _store$getState28.updateNodePositions,\n          nodeExtent = _store$getState28.nodeExtent,\n          snapGrid = _store$getState28.snapGrid,\n          snapToGrid = _store$getState28.snapToGrid,\n          nodeOrigin = _store$getState28.nodeOrigin,\n          onError = _store$getState28.onError;\n        lastPos.current = {\n          x: x,\n          y: y\n        };\n        var hasChange = false;\n        var nodesBox = {\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 0\n        };\n        if (dragItems.current.length > 1 && nodeExtent) {\n          var rect = getRectOfNodes(dragItems.current, nodeOrigin);\n          nodesBox = rectToBox(rect);\n        }\n        dragItems.current = dragItems.current.map(function (n) {\n          var nextPosition = {\n            x: x - n.distance.x,\n            y: y - n.distance.y\n          };\n          if (snapToGrid) {\n            nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n            nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n          }\n          // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n          // based on its position so that the node stays at it's position relative to the selection.\n          var adjustedNodeExtent = [[nodeExtent[0][0], nodeExtent[0][1]], [nodeExtent[1][0], nodeExtent[1][1]]];\n          if (dragItems.current.length > 1 && nodeExtent && !n.extent) {\n            var _n$width, _n$height;\n            adjustedNodeExtent[0][0] = n.positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n            adjustedNodeExtent[1][0] = n.positionAbsolute.x + ((_n$width = n.width) !== null && _n$width !== void 0 ? _n$width : 0) - nodesBox.x2 + nodeExtent[1][0];\n            adjustedNodeExtent[0][1] = n.positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n            adjustedNodeExtent[1][1] = n.positionAbsolute.y + ((_n$height = n.height) !== null && _n$height !== void 0 ? _n$height : 0) - nodesBox.y2 + nodeExtent[1][1];\n          }\n          var updatedPos = calcNextPosition(n, nextPosition, nodeInternals, adjustedNodeExtent, nodeOrigin, onError);\n          // we want to make sure that we only fire a change event when there is a change\n          hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n          n.position = updatedPos.position;\n          n.positionAbsolute = updatedPos.positionAbsolute;\n          return n;\n        });\n        if (!hasChange) {\n          return;\n        }\n        updateNodePositions(dragItems.current, true, true);\n        setDragging(true);\n        var onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n        if (onDrag && dragEvent.current) {\n          var _getEventHandlerParam = getEventHandlerParams({\n              nodeId: nodeId,\n              dragItems: dragItems.current,\n              nodeInternals: nodeInternals\n            }),\n            _getEventHandlerParam2 = _slicedToArray(_getEventHandlerParam, 2),\n            currentNode = _getEventHandlerParam2[0],\n            nodes = _getEventHandlerParam2[1];\n          onDrag(dragEvent.current, currentNode, nodes);\n        }\n      };\n      var autoPan = function autoPan() {\n        if (!containerBounds.current) {\n          return;\n        }\n        var _calcAutoPan3 = calcAutoPan(mousePosition.current, containerBounds.current),\n          _calcAutoPan4 = _slicedToArray(_calcAutoPan3, 2),\n          xMovement = _calcAutoPan4[0],\n          yMovement = _calcAutoPan4[1];\n        if (xMovement !== 0 || yMovement !== 0) {\n          var _lastPos$current$x, _lastPos$current$y;\n          var _store$getState29 = store.getState(),\n            transform = _store$getState29.transform,\n            panBy = _store$getState29.panBy;\n          lastPos.current.x = ((_lastPos$current$x = lastPos.current.x) !== null && _lastPos$current$x !== void 0 ? _lastPos$current$x : 0) - xMovement / transform[2];\n          lastPos.current.y = ((_lastPos$current$y = lastPos.current.y) !== null && _lastPos$current$y !== void 0 ? _lastPos$current$y : 0) - yMovement / transform[2];\n          if (panBy({\n            x: xMovement,\n            y: yMovement\n          })) {\n            updateNodes(lastPos.current);\n          }\n        }\n        autoPanId.current = requestAnimationFrame(autoPan);\n      };\n      if (disabled) {\n        selection.on('.drag', null);\n      } else {\n        var dragHandler = drag().on('start', function (event) {\n          var _store$getState30 = store.getState(),\n            nodeInternals = _store$getState30.nodeInternals,\n            multiSelectionActive = _store$getState30.multiSelectionActive,\n            domNode = _store$getState30.domNode,\n            nodesDraggable = _store$getState30.nodesDraggable,\n            unselectNodesAndEdges = _store$getState30.unselectNodesAndEdges,\n            onNodeDragStart = _store$getState30.onNodeDragStart,\n            onSelectionDragStart = _store$getState30.onSelectionDragStart;\n          var onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n          if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n            var _nodeInternals$get;\n            if (!((_nodeInternals$get = nodeInternals.get(nodeId)) !== null && _nodeInternals$get !== void 0 && _nodeInternals$get.selected)) {\n              // we need to reset selected nodes when selectNodesOnDrag=false\n              unselectNodesAndEdges();\n            }\n          }\n          if (nodeId && isSelectable && selectNodesOnDrag) {\n            handleNodeClick({\n              id: nodeId,\n              store: store,\n              nodeRef: nodeRef\n            });\n          }\n          var pointerPos = getPointerPosition(event);\n          lastPos.current = pointerPos;\n          dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n          if (onStart && dragItems.current) {\n            var _getEventHandlerParam3 = getEventHandlerParams({\n                nodeId: nodeId,\n                dragItems: dragItems.current,\n                nodeInternals: nodeInternals\n              }),\n              _getEventHandlerParam4 = _slicedToArray(_getEventHandlerParam3, 2),\n              currentNode = _getEventHandlerParam4[0],\n              nodes = _getEventHandlerParam4[1];\n            onStart(event.sourceEvent, currentNode, nodes);\n          }\n          containerBounds.current = (domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect()) || null;\n          mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n        }).on('drag', function (event) {\n          var pointerPos = getPointerPosition(event);\n          var _store$getState31 = store.getState(),\n            autoPanOnNodeDrag = _store$getState31.autoPanOnNodeDrag;\n          if (!autoPanStarted.current && autoPanOnNodeDrag) {\n            autoPanStarted.current = true;\n            autoPan();\n          }\n          // skip events without movement\n          if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) && dragItems.current) {\n            dragEvent.current = event.sourceEvent;\n            mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n            updateNodes(pointerPos);\n          }\n        }).on('end', function (event) {\n          setDragging(false);\n          autoPanStarted.current = false;\n          cancelAnimationFrame(autoPanId.current);\n          if (dragItems.current) {\n            var _store$getState32 = store.getState(),\n              updateNodePositions = _store$getState32.updateNodePositions,\n              nodeInternals = _store$getState32.nodeInternals,\n              onNodeDragStop = _store$getState32.onNodeDragStop,\n              onSelectionDragStop = _store$getState32.onSelectionDragStop;\n            var onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n            updateNodePositions(dragItems.current, false, false);\n            if (onStop) {\n              var _getEventHandlerParam5 = getEventHandlerParams({\n                  nodeId: nodeId,\n                  dragItems: dragItems.current,\n                  nodeInternals: nodeInternals\n                }),\n                _getEventHandlerParam6 = _slicedToArray(_getEventHandlerParam5, 2),\n                currentNode = _getEventHandlerParam6[0],\n                nodes = _getEventHandlerParam6[1];\n              onStop(event.sourceEvent, currentNode, nodes);\n            }\n          }\n        }).filter(function (event) {\n          var target = event.target;\n          var isDraggable = !event.button && (!noDragClassName || !hasSelector(target, \".\".concat(noDragClassName), nodeRef)) && (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n          return isDraggable;\n        });\n        selection.call(dragHandler);\n        return function () {\n          selection.on('.drag', null);\n        };\n      }\n    }\n  }, [nodeRef, disabled, noDragClassName, handleSelector, isSelectable, store, nodeId, selectNodesOnDrag, getPointerPosition]);\n  return dragging;\n}\nfunction useUpdateNodePositions() {\n  var store = useStoreApi();\n  var updatePositions = useCallback(function (params) {\n    var _store$getState33 = store.getState(),\n      nodeInternals = _store$getState33.nodeInternals,\n      nodeExtent = _store$getState33.nodeExtent,\n      updateNodePositions = _store$getState33.updateNodePositions,\n      getNodes = _store$getState33.getNodes,\n      snapToGrid = _store$getState33.snapToGrid,\n      snapGrid = _store$getState33.snapGrid,\n      onError = _store$getState33.onError,\n      nodesDraggable = _store$getState33.nodesDraggable;\n    var selectedNodes = getNodes().filter(function (n) {\n      return n.selected && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined');\n    });\n    // by default a node moves 5px on each key press, or 20px if shift is pressed\n    // if snap grid is enabled, we use that for the velocity.\n    var xVelo = snapToGrid ? snapGrid[0] : 5;\n    var yVelo = snapToGrid ? snapGrid[1] : 5;\n    var factor = params.isShiftPressed ? 4 : 1;\n    var positionDiffX = params.x * xVelo * factor;\n    var positionDiffY = params.y * yVelo * factor;\n    var nodeUpdates = selectedNodes.map(function (n) {\n      if (n.positionAbsolute) {\n        var nextPosition = {\n          x: n.positionAbsolute.x + positionDiffX,\n          y: n.positionAbsolute.y + positionDiffY\n        };\n        if (snapToGrid) {\n          nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n          nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n        }\n        var _calcNextPosition = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError),\n          positionAbsolute = _calcNextPosition.positionAbsolute,\n          position = _calcNextPosition.position;\n        n.position = position;\n        n.positionAbsolute = positionAbsolute;\n      }\n      return n;\n    });\n    updateNodePositions(nodeUpdates, true, false);\n  }, []);\n  return updatePositions;\n}\nvar arrowKeyDiffs = {\n  ArrowUp: {\n    x: 0,\n    y: -1\n  },\n  ArrowDown: {\n    x: 0,\n    y: 1\n  },\n  ArrowLeft: {\n    x: -1,\n    y: 0\n  },\n  ArrowRight: {\n    x: 1,\n    y: 0\n  }\n};\nvar wrapNode = function wrapNode(NodeComponent) {\n  var NodeWrapper = function NodeWrapper(_ref56) {\n    var id = _ref56.id,\n      type = _ref56.type,\n      data = _ref56.data,\n      xPos = _ref56.xPos,\n      yPos = _ref56.yPos,\n      xPosOrigin = _ref56.xPosOrigin,\n      yPosOrigin = _ref56.yPosOrigin,\n      selected = _ref56.selected,\n      onClick = _ref56.onClick,\n      onMouseEnter = _ref56.onMouseEnter,\n      onMouseMove = _ref56.onMouseMove,\n      onMouseLeave = _ref56.onMouseLeave,\n      onContextMenu = _ref56.onContextMenu,\n      onDoubleClick = _ref56.onDoubleClick,\n      style = _ref56.style,\n      className = _ref56.className,\n      isDraggable = _ref56.isDraggable,\n      isSelectable = _ref56.isSelectable,\n      isConnectable = _ref56.isConnectable,\n      isFocusable = _ref56.isFocusable,\n      selectNodesOnDrag = _ref56.selectNodesOnDrag,\n      sourcePosition = _ref56.sourcePosition,\n      targetPosition = _ref56.targetPosition,\n      hidden = _ref56.hidden,\n      resizeObserver = _ref56.resizeObserver,\n      dragHandle = _ref56.dragHandle,\n      zIndex = _ref56.zIndex,\n      isParent = _ref56.isParent,\n      noDragClassName = _ref56.noDragClassName,\n      noPanClassName = _ref56.noPanClassName,\n      initialized = _ref56.initialized,\n      disableKeyboardA11y = _ref56.disableKeyboardA11y,\n      ariaLabel = _ref56.ariaLabel,\n      rfId = _ref56.rfId;\n    var store = useStoreApi();\n    var nodeRef = useRef(null);\n    var prevSourcePosition = useRef(sourcePosition);\n    var prevTargetPosition = useRef(targetPosition);\n    var prevType = useRef(type);\n    var hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n    var updatePositions = useUpdateNodePositions();\n    var onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n    var onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n    var onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n    var onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n    var onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n    var onSelectNodeHandler = function onSelectNodeHandler(event) {\n      if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n        // this handler gets called within the drag start event when selectNodesOnDrag=true\n        handleNodeClick({\n          id: id,\n          store: store,\n          nodeRef: nodeRef\n        });\n      }\n      if (onClick) {\n        var node = store.getState().nodeInternals.get(id);\n        if (node) {\n          onClick(event, _objectSpread({}, node));\n        }\n      }\n    };\n    var onKeyDown = function onKeyDown(event) {\n      if (isInputDOMNode(event)) {\n        return;\n      }\n      if (elementSelectionKeys.includes(event.key) && isSelectable) {\n        var unselect = event.key === 'Escape';\n        handleNodeClick({\n          id: id,\n          store: store,\n          unselect: unselect,\n          nodeRef: nodeRef\n        });\n      } else if (!disableKeyboardA11y && isDraggable && selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n        store.setState({\n          ariaLiveMessage: \"Moved selected node \".concat(event.key.replace('Arrow', '').toLowerCase(), \". New position, x: \").concat(~~xPos, \", y: \").concat(~~yPos)\n        });\n        updatePositions({\n          x: arrowKeyDiffs[event.key].x,\n          y: arrowKeyDiffs[event.key].y,\n          isShiftPressed: event.shiftKey\n        });\n      }\n    };\n    useEffect(function () {\n      if (nodeRef.current && !hidden) {\n        var currNode = nodeRef.current;\n        resizeObserver === null || resizeObserver === void 0 || resizeObserver.observe(currNode);\n        return function () {\n          return resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.unobserve(currNode);\n        };\n      }\n    }, [hidden]);\n    useEffect(function () {\n      // when the user programmatically changes the source or handle position, we re-initialize the node\n      var typeChanged = prevType.current !== type;\n      var sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n      var targetPosChanged = prevTargetPosition.current !== targetPosition;\n      if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n        if (typeChanged) {\n          prevType.current = type;\n        }\n        if (sourcePosChanged) {\n          prevSourcePosition.current = sourcePosition;\n        }\n        if (targetPosChanged) {\n          prevTargetPosition.current = targetPosition;\n        }\n        store.getState().updateNodeDimensions([{\n          id: id,\n          nodeElement: nodeRef.current,\n          forceUpdate: true\n        }]);\n      }\n    }, [id, type, sourcePosition, targetPosition]);\n    var dragging = useDrag({\n      nodeRef: nodeRef,\n      disabled: hidden || !isDraggable,\n      noDragClassName: noDragClassName,\n      handleSelector: dragHandle,\n      nodeId: id,\n      isSelectable: isSelectable,\n      selectNodesOnDrag: selectNodesOnDrag\n    });\n    if (hidden) {\n      return null;\n    }\n    return jsx(\"div\", {\n      className: cc(['react-flow__node', \"react-flow__node-\".concat(type), _defineProperty({}, noPanClassName, isDraggable), className, {\n        selected: selected,\n        selectable: isSelectable,\n        parent: isParent,\n        dragging: dragging\n      }]),\n      ref: nodeRef,\n      style: _objectSpread({\n        zIndex: zIndex,\n        transform: \"translate(\".concat(xPosOrigin, \"px,\").concat(yPosOrigin, \"px)\"),\n        pointerEvents: hasPointerEvents ? 'all' : 'none',\n        visibility: initialized ? 'visible' : 'hidden'\n      }, style),\n      \"data-id\": id,\n      \"data-testid\": \"rf__node-\".concat(id),\n      onMouseEnter: onMouseEnterHandler,\n      onMouseMove: onMouseMoveHandler,\n      onMouseLeave: onMouseLeaveHandler,\n      onContextMenu: onContextMenuHandler,\n      onClick: onSelectNodeHandler,\n      onDoubleClick: onDoubleClickHandler,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"aria-describedby\": disableKeyboardA11y ? undefined : \"\".concat(ARIA_NODE_DESC_KEY, \"-\").concat(rfId),\n      \"aria-label\": ariaLabel,\n      children: jsx(Provider, {\n        value: id,\n        children: jsx(NodeComponent, {\n          id: id,\n          data: data,\n          type: type,\n          xPos: xPos,\n          yPos: yPos,\n          selected: selected,\n          isConnectable: isConnectable,\n          sourcePosition: sourcePosition,\n          targetPosition: targetPosition,\n          dragging: dragging,\n          dragHandle: dragHandle,\n          zIndex: zIndex\n        })\n      })\n    });\n  };\n  NodeWrapper.displayName = 'NodeWrapper';\n  return memo(NodeWrapper);\n};\nvar selector$7 = function selector$7(s) {\n  var selectedNodes = s.getNodes().filter(function (n) {\n    return n.selected;\n  });\n  return _objectSpread(_objectSpread({}, getRectOfNodes(selectedNodes, s.nodeOrigin)), {}, {\n    transformString: \"translate(\".concat(s.transform[0], \"px,\").concat(s.transform[1], \"px) scale(\").concat(s.transform[2], \")\"),\n    userSelectionActive: s.userSelectionActive\n  });\n};\nfunction NodesSelection(_ref58) {\n  var onSelectionContextMenu = _ref58.onSelectionContextMenu,\n    noPanClassName = _ref58.noPanClassName,\n    disableKeyboardA11y = _ref58.disableKeyboardA11y;\n  var store = useStoreApi();\n  var _useStore9 = useStore(selector$7, shallow),\n    width = _useStore9.width,\n    height = _useStore9.height,\n    left = _useStore9.x,\n    top = _useStore9.y,\n    transformString = _useStore9.transformString,\n    userSelectionActive = _useStore9.userSelectionActive;\n  var updatePositions = useUpdateNodePositions();\n  var nodeRef = useRef(null);\n  useEffect(function () {\n    if (!disableKeyboardA11y) {\n      var _nodeRef$current2;\n      (_nodeRef$current2 = nodeRef.current) === null || _nodeRef$current2 === void 0 || _nodeRef$current2.focus({\n        preventScroll: true\n      });\n    }\n  }, [disableKeyboardA11y]);\n  useDrag({\n    nodeRef: nodeRef\n  });\n  if (userSelectionActive || !width || !height) {\n    return null;\n  }\n  var onContextMenu = onSelectionContextMenu ? function (event) {\n    var selectedNodes = store.getState().getNodes().filter(function (n) {\n      return n.selected;\n    });\n    onSelectionContextMenu(event, selectedNodes);\n  } : undefined;\n  var onKeyDown = function onKeyDown(event) {\n    if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n      updatePositions({\n        x: arrowKeyDiffs[event.key].x,\n        y: arrowKeyDiffs[event.key].y,\n        isShiftPressed: event.shiftKey\n      });\n    }\n  };\n  return jsx(\"div\", {\n    className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]),\n    style: {\n      transform: transformString\n    },\n    children: jsx(\"div\", {\n      ref: nodeRef,\n      className: \"react-flow__nodesselection-rect\",\n      onContextMenu: onContextMenu,\n      tabIndex: disableKeyboardA11y ? undefined : -1,\n      onKeyDown: disableKeyboardA11y ? undefined : onKeyDown,\n      style: {\n        width: width,\n        height: height,\n        top: top,\n        left: left\n      }\n    })\n  });\n}\nvar NodesSelection$1 = memo(NodesSelection);\nvar selector$6 = function selector$6(s) {\n  return s.nodesSelectionActive;\n};\nvar FlowRenderer = function FlowRenderer(_ref59) {\n  var children = _ref59.children,\n    onPaneClick = _ref59.onPaneClick,\n    onPaneMouseEnter = _ref59.onPaneMouseEnter,\n    onPaneMouseMove = _ref59.onPaneMouseMove,\n    onPaneMouseLeave = _ref59.onPaneMouseLeave,\n    onPaneContextMenu = _ref59.onPaneContextMenu,\n    onPaneScroll = _ref59.onPaneScroll,\n    deleteKeyCode = _ref59.deleteKeyCode,\n    onMove = _ref59.onMove,\n    onMoveStart = _ref59.onMoveStart,\n    onMoveEnd = _ref59.onMoveEnd,\n    selectionKeyCode = _ref59.selectionKeyCode,\n    selectionOnDrag = _ref59.selectionOnDrag,\n    selectionMode = _ref59.selectionMode,\n    onSelectionStart = _ref59.onSelectionStart,\n    onSelectionEnd = _ref59.onSelectionEnd,\n    multiSelectionKeyCode = _ref59.multiSelectionKeyCode,\n    panActivationKeyCode = _ref59.panActivationKeyCode,\n    zoomActivationKeyCode = _ref59.zoomActivationKeyCode,\n    elementsSelectable = _ref59.elementsSelectable,\n    zoomOnScroll = _ref59.zoomOnScroll,\n    zoomOnPinch = _ref59.zoomOnPinch,\n    panOnScroll = _ref59.panOnScroll,\n    panOnScrollSpeed = _ref59.panOnScrollSpeed,\n    panOnScrollMode = _ref59.panOnScrollMode,\n    zoomOnDoubleClick = _ref59.zoomOnDoubleClick,\n    _panOnDrag = _ref59.panOnDrag,\n    defaultViewport = _ref59.defaultViewport,\n    translateExtent = _ref59.translateExtent,\n    minZoom = _ref59.minZoom,\n    maxZoom = _ref59.maxZoom,\n    preventScrolling = _ref59.preventScrolling,\n    onSelectionContextMenu = _ref59.onSelectionContextMenu,\n    noWheelClassName = _ref59.noWheelClassName,\n    noPanClassName = _ref59.noPanClassName,\n    disableKeyboardA11y = _ref59.disableKeyboardA11y;\n  var nodesSelectionActive = useStore(selector$6);\n  var selectionKeyPressed = useKeyPress(selectionKeyCode);\n  var panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n  var panOnDrag = panActivationKeyPressed || _panOnDrag;\n  var isSelecting = selectionKeyPressed || selectionOnDrag && panOnDrag !== true;\n  useGlobalKeyHandler({\n    deleteKeyCode: deleteKeyCode,\n    multiSelectionKeyCode: multiSelectionKeyCode\n  });\n  return jsx(ZoomPane, {\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    onPaneContextMenu: onPaneContextMenu,\n    elementsSelectable: elementsSelectable,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnDrag: !selectionKeyPressed && panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    preventScrolling: preventScrolling,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    children: jsxs(Pane, {\n      onSelectionStart: onSelectionStart,\n      onSelectionEnd: onSelectionEnd,\n      onPaneClick: onPaneClick,\n      onPaneMouseEnter: onPaneMouseEnter,\n      onPaneMouseMove: onPaneMouseMove,\n      onPaneMouseLeave: onPaneMouseLeave,\n      onPaneContextMenu: onPaneContextMenu,\n      onPaneScroll: onPaneScroll,\n      panOnDrag: panOnDrag,\n      isSelecting: !!isSelecting,\n      selectionMode: selectionMode,\n      children: [children, nodesSelectionActive && jsx(NodesSelection$1, {\n        onSelectionContextMenu: onSelectionContextMenu,\n        noPanClassName: noPanClassName,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  });\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\nfunction useVisibleNodes(onlyRenderVisible) {\n  var nodes = useStore(useCallback(function (s) {\n    return onlyRenderVisible ? getNodesInside(s.nodeInternals, {\n      x: 0,\n      y: 0,\n      width: s.width,\n      height: s.height\n    }, s.transform, true) : s.getNodes();\n  }, [onlyRenderVisible]));\n  return nodes;\n}\nfunction createNodeTypes(nodeTypes) {\n  var standardTypes = {\n    input: wrapNode(nodeTypes.input || InputNode$1),\n    default: wrapNode(nodeTypes.default || DefaultNode$1),\n    output: wrapNode(nodeTypes.output || OutputNode$1),\n    group: wrapNode(nodeTypes.group || GroupNode)\n  };\n  var wrappedTypes = {};\n  var specialTypes = Object.keys(nodeTypes).filter(function (k) {\n    return !['input', 'default', 'output', 'group'].includes(k);\n  }).reduce(function (res, key) {\n    res[key] = wrapNode(nodeTypes[key] || DefaultNode$1);\n    return res;\n  }, wrappedTypes);\n  return _objectSpread(_objectSpread({}, standardTypes), specialTypes);\n}\nvar getPositionWithOrigin = function getPositionWithOrigin(_ref60) {\n  var x = _ref60.x,\n    y = _ref60.y,\n    width = _ref60.width,\n    height = _ref60.height,\n    origin = _ref60.origin;\n  if (!width || !height) {\n    return {\n      x: x,\n      y: y\n    };\n  }\n  if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n    return {\n      x: x,\n      y: y\n    };\n  }\n  return {\n    x: x - width * origin[0],\n    y: y - height * origin[1]\n  };\n};\nvar selector$5 = function selector$5(s) {\n  return {\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError\n  };\n};\nvar NodeRenderer = function NodeRenderer(props) {\n  var _useStore10 = useStore(selector$5, shallow),\n    nodesDraggable = _useStore10.nodesDraggable,\n    nodesConnectable = _useStore10.nodesConnectable,\n    nodesFocusable = _useStore10.nodesFocusable,\n    elementsSelectable = _useStore10.elementsSelectable,\n    updateNodeDimensions = _useStore10.updateNodeDimensions,\n    onError = _useStore10.onError;\n  var nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n  var resizeObserverRef = useRef();\n  var resizeObserver = useMemo(function () {\n    if (typeof ResizeObserver === 'undefined') {\n      return null;\n    }\n    var observer = new ResizeObserver(function (entries) {\n      var updates = entries.map(function (entry) {\n        return {\n          id: entry.target.getAttribute('data-id'),\n          nodeElement: entry.target,\n          forceUpdate: true\n        };\n      });\n      updateNodeDimensions(updates);\n    });\n    resizeObserverRef.current = observer;\n    return observer;\n  }, []);\n  useEffect(function () {\n    return function () {\n      var _resizeObserverRef$cu;\n      resizeObserverRef === null || resizeObserverRef === void 0 || (_resizeObserverRef$cu = resizeObserverRef.current) === null || _resizeObserverRef$cu === void 0 || _resizeObserverRef$cu.disconnect();\n    };\n  }, []);\n  return jsx(\"div\", {\n    className: \"react-flow__nodes\",\n    style: containerStyle,\n    children: nodes.map(function (node) {\n      var _clampedPosition$x, _clampedPosition$y, _node$width2, _node$height2, _node$internalsSymbol3, _node$internalsSymbol4, _node$internalsSymbol5;\n      var nodeType = node.type || 'default';\n      if (!props.nodeTypes[nodeType]) {\n        onError === null || onError === void 0 || onError('003', errorMessages['error003'](nodeType));\n        nodeType = 'default';\n      }\n      var NodeComponent = props.nodeTypes[nodeType] || props.nodeTypes.default;\n      var isDraggable = !!(node.draggable || nodesDraggable && typeof node.draggable === 'undefined');\n      var isSelectable = !!(node.selectable || elementsSelectable && typeof node.selectable === 'undefined');\n      var isConnectable = !!(node.connectable || nodesConnectable && typeof node.connectable === 'undefined');\n      var isFocusable = !!(node.focusable || nodesFocusable && typeof node.focusable === 'undefined');\n      var clampedPosition = props.nodeExtent ? clampPosition(node.positionAbsolute, props.nodeExtent) : node.positionAbsolute;\n      var posX = (_clampedPosition$x = clampedPosition === null || clampedPosition === void 0 ? void 0 : clampedPosition.x) !== null && _clampedPosition$x !== void 0 ? _clampedPosition$x : 0;\n      var posY = (_clampedPosition$y = clampedPosition === null || clampedPosition === void 0 ? void 0 : clampedPosition.y) !== null && _clampedPosition$y !== void 0 ? _clampedPosition$y : 0;\n      var posOrigin = getPositionWithOrigin({\n        x: posX,\n        y: posY,\n        width: (_node$width2 = node.width) !== null && _node$width2 !== void 0 ? _node$width2 : 0,\n        height: (_node$height2 = node.height) !== null && _node$height2 !== void 0 ? _node$height2 : 0,\n        origin: props.nodeOrigin\n      });\n      return jsx(NodeComponent, {\n        id: node.id,\n        className: node.className,\n        style: node.style,\n        type: nodeType,\n        data: node.data,\n        sourcePosition: node.sourcePosition || Position.Bottom,\n        targetPosition: node.targetPosition || Position.Top,\n        hidden: node.hidden,\n        xPos: posX,\n        yPos: posY,\n        xPosOrigin: posOrigin.x,\n        yPosOrigin: posOrigin.y,\n        selectNodesOnDrag: props.selectNodesOnDrag,\n        onClick: props.onNodeClick,\n        onMouseEnter: props.onNodeMouseEnter,\n        onMouseMove: props.onNodeMouseMove,\n        onMouseLeave: props.onNodeMouseLeave,\n        onContextMenu: props.onNodeContextMenu,\n        onDoubleClick: props.onNodeDoubleClick,\n        selected: !!node.selected,\n        isDraggable: isDraggable,\n        isSelectable: isSelectable,\n        isConnectable: isConnectable,\n        isFocusable: isFocusable,\n        resizeObserver: resizeObserver,\n        dragHandle: node.dragHandle,\n        zIndex: (_node$internalsSymbol3 = (_node$internalsSymbol4 = node[internalsSymbol]) === null || _node$internalsSymbol4 === void 0 ? void 0 : _node$internalsSymbol4.z) !== null && _node$internalsSymbol3 !== void 0 ? _node$internalsSymbol3 : 0,\n        isParent: !!((_node$internalsSymbol5 = node[internalsSymbol]) !== null && _node$internalsSymbol5 !== void 0 && _node$internalsSymbol5.isParent),\n        noDragClassName: props.noDragClassName,\n        noPanClassName: props.noPanClassName,\n        initialized: !!node.width && !!node.height,\n        rfId: props.rfId,\n        disableKeyboardA11y: props.disableKeyboardA11y,\n        ariaLabel: node.ariaLabel\n      }, node.id);\n    })\n  });\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\nvar shiftX = function shiftX(x, shift, position) {\n  if (position === Position.Left) return x - shift;\n  if (position === Position.Right) return x + shift;\n  return x;\n};\nvar shiftY = function shiftY(y, shift, position) {\n  if (position === Position.Top) return y - shift;\n  if (position === Position.Bottom) return y + shift;\n  return y;\n};\nvar EdgeUpdaterClassName = 'react-flow__edgeupdater';\nvar EdgeAnchor = function EdgeAnchor(_ref61) {\n  var position = _ref61.position,\n    centerX = _ref61.centerX,\n    centerY = _ref61.centerY,\n    _ref61$radius = _ref61.radius,\n    radius = _ref61$radius === void 0 ? 10 : _ref61$radius,\n    onMouseDown = _ref61.onMouseDown,\n    onMouseEnter = _ref61.onMouseEnter,\n    onMouseOut = _ref61.onMouseOut,\n    type = _ref61.type;\n  return jsx(\"circle\", {\n    onMouseDown: onMouseDown,\n    onMouseEnter: onMouseEnter,\n    onMouseOut: onMouseOut,\n    className: cc([EdgeUpdaterClassName, \"\".concat(EdgeUpdaterClassName, \"-\").concat(type)]),\n    cx: shiftX(centerX, radius, position),\n    cy: shiftY(centerY, radius, position),\n    r: radius,\n    stroke: \"transparent\",\n    fill: \"transparent\"\n  });\n};\nvar alwaysValidConnection = function alwaysValidConnection() {\n  return true;\n};\nvar wrapEdge = function wrapEdge(EdgeComponent) {\n  var EdgeWrapper = function EdgeWrapper(_ref62) {\n    var id = _ref62.id,\n      className = _ref62.className,\n      type = _ref62.type,\n      data = _ref62.data,\n      onClick = _ref62.onClick,\n      onEdgeDoubleClick = _ref62.onEdgeDoubleClick,\n      selected = _ref62.selected,\n      animated = _ref62.animated,\n      label = _ref62.label,\n      labelStyle = _ref62.labelStyle,\n      labelShowBg = _ref62.labelShowBg,\n      labelBgStyle = _ref62.labelBgStyle,\n      labelBgPadding = _ref62.labelBgPadding,\n      labelBgBorderRadius = _ref62.labelBgBorderRadius,\n      style = _ref62.style,\n      source = _ref62.source,\n      target = _ref62.target,\n      sourceX = _ref62.sourceX,\n      sourceY = _ref62.sourceY,\n      targetX = _ref62.targetX,\n      targetY = _ref62.targetY,\n      sourcePosition = _ref62.sourcePosition,\n      targetPosition = _ref62.targetPosition,\n      elementsSelectable = _ref62.elementsSelectable,\n      hidden = _ref62.hidden,\n      sourceHandleId = _ref62.sourceHandleId,\n      targetHandleId = _ref62.targetHandleId,\n      onContextMenu = _ref62.onContextMenu,\n      onMouseEnter = _ref62.onMouseEnter,\n      onMouseMove = _ref62.onMouseMove,\n      onMouseLeave = _ref62.onMouseLeave,\n      edgeUpdaterRadius = _ref62.edgeUpdaterRadius,\n      onEdgeUpdate = _ref62.onEdgeUpdate,\n      onEdgeUpdateStart = _ref62.onEdgeUpdateStart,\n      onEdgeUpdateEnd = _ref62.onEdgeUpdateEnd,\n      markerEnd = _ref62.markerEnd,\n      markerStart = _ref62.markerStart,\n      rfId = _ref62.rfId,\n      ariaLabel = _ref62.ariaLabel,\n      isFocusable = _ref62.isFocusable,\n      isUpdatable = _ref62.isUpdatable,\n      pathOptions = _ref62.pathOptions,\n      interactionWidth = _ref62.interactionWidth;\n    var edgeRef = useRef(null);\n    var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      updateHover = _useState8[0],\n      setUpdateHover = _useState8[1];\n    var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      updating = _useState10[0],\n      setUpdating = _useState10[1];\n    var store = useStoreApi();\n    var markerStartUrl = useMemo(function () {\n      return \"url(#\".concat(getMarkerId(markerStart, rfId), \")\");\n    }, [markerStart, rfId]);\n    var markerEndUrl = useMemo(function () {\n      return \"url(#\".concat(getMarkerId(markerEnd, rfId), \")\");\n    }, [markerEnd, rfId]);\n    if (hidden) {\n      return null;\n    }\n    var onEdgeClick = function onEdgeClick(event) {\n      var _store$getState34 = store.getState(),\n        edges = _store$getState34.edges,\n        addSelectedEdges = _store$getState34.addSelectedEdges;\n      if (elementsSelectable) {\n        store.setState({\n          nodesSelectionActive: false\n        });\n        addSelectedEdges([id]);\n      }\n      if (onClick) {\n        var edge = edges.find(function (e) {\n          return e.id === id;\n        });\n        onClick(event, edge);\n      }\n    };\n    var onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n    var onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n    var onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n    var onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n    var onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n    var handleEdgeUpdater = function handleEdgeUpdater(event, isSourceHandle) {\n      // avoid triggering edge updater if mouse btn is not left\n      if (event.button !== 0) {\n        return;\n      }\n      var _store$getState35 = store.getState(),\n        edges = _store$getState35.edges,\n        isValidConnectionStore = _store$getState35.isValidConnection;\n      var nodeId = isSourceHandle ? target : source;\n      var handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n      var handleType = isSourceHandle ? 'target' : 'source';\n      var isValidConnection = isValidConnectionStore || alwaysValidConnection;\n      var isTarget = isSourceHandle;\n      var edge = edges.find(function (e) {\n        return e.id === id;\n      });\n      setUpdating(true);\n      onEdgeUpdateStart === null || onEdgeUpdateStart === void 0 || onEdgeUpdateStart(event, edge, handleType);\n      var _onEdgeUpdateEnd = function _onEdgeUpdateEnd(evt) {\n        setUpdating(false);\n        onEdgeUpdateEnd === null || onEdgeUpdateEnd === void 0 || onEdgeUpdateEnd(evt, edge, handleType);\n      };\n      var onConnectEdge = function onConnectEdge(connection) {\n        return onEdgeUpdate === null || onEdgeUpdate === void 0 ? void 0 : onEdgeUpdate(edge, connection);\n      };\n      handlePointerDown({\n        event: event,\n        handleId: handleId,\n        nodeId: nodeId,\n        onConnect: onConnectEdge,\n        isTarget: isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection: isValidConnection,\n        edgeUpdaterType: handleType,\n        onEdgeUpdateEnd: _onEdgeUpdateEnd\n      });\n    };\n    var onEdgeUpdaterSourceMouseDown = function onEdgeUpdaterSourceMouseDown(event) {\n      return handleEdgeUpdater(event, true);\n    };\n    var onEdgeUpdaterTargetMouseDown = function onEdgeUpdaterTargetMouseDown(event) {\n      return handleEdgeUpdater(event, false);\n    };\n    var onEdgeUpdaterMouseEnter = function onEdgeUpdaterMouseEnter() {\n      return setUpdateHover(true);\n    };\n    var onEdgeUpdaterMouseOut = function onEdgeUpdaterMouseOut() {\n      return setUpdateHover(false);\n    };\n    var inactive = !elementsSelectable && !onClick;\n    var onKeyDown = function onKeyDown(event) {\n      if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n        var _store$getState36 = store.getState(),\n          unselectNodesAndEdges = _store$getState36.unselectNodesAndEdges,\n          addSelectedEdges = _store$getState36.addSelectedEdges,\n          edges = _store$getState36.edges;\n        var unselect = event.key === 'Escape';\n        if (unselect) {\n          var _edgeRef$current;\n          (_edgeRef$current = edgeRef.current) === null || _edgeRef$current === void 0 || _edgeRef$current.blur();\n          unselectNodesAndEdges({\n            edges: [edges.find(function (e) {\n              return e.id === id;\n            })]\n          });\n        } else {\n          addSelectedEdges([id]);\n        }\n      }\n    };\n    return jsxs(\"g\", {\n      className: cc(['react-flow__edge', \"react-flow__edge-\".concat(type), className, {\n        selected: selected,\n        animated: animated,\n        inactive: inactive,\n        updating: updateHover\n      }]),\n      onClick: onEdgeClick,\n      onDoubleClick: onEdgeDoubleClickHandler,\n      onContextMenu: onEdgeContextMenu,\n      onMouseEnter: onEdgeMouseEnter,\n      onMouseMove: onEdgeMouseMove,\n      onMouseLeave: onEdgeMouseLeave,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : 'img',\n      \"data-testid\": \"rf__edge-\".concat(id),\n      \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : \"Edge from \".concat(source, \" to \").concat(target),\n      \"aria-describedby\": isFocusable ? \"\".concat(ARIA_EDGE_DESC_KEY, \"-\").concat(rfId) : undefined,\n      ref: edgeRef,\n      children: [!updating && jsx(EdgeComponent, {\n        id: id,\n        source: source,\n        target: target,\n        selected: selected,\n        animated: animated,\n        label: label,\n        labelStyle: labelStyle,\n        labelShowBg: labelShowBg,\n        labelBgStyle: labelBgStyle,\n        labelBgPadding: labelBgPadding,\n        labelBgBorderRadius: labelBgBorderRadius,\n        data: data,\n        style: style,\n        sourceX: sourceX,\n        sourceY: sourceY,\n        targetX: targetX,\n        targetY: targetY,\n        sourcePosition: sourcePosition,\n        targetPosition: targetPosition,\n        sourceHandleId: sourceHandleId,\n        targetHandleId: targetHandleId,\n        markerStart: markerStartUrl,\n        markerEnd: markerEndUrl,\n        pathOptions: pathOptions,\n        interactionWidth: interactionWidth\n      }), isUpdatable && jsxs(Fragment, {\n        children: [(isUpdatable === 'source' || isUpdatable === true) && jsx(EdgeAnchor, {\n          position: sourcePosition,\n          centerX: sourceX,\n          centerY: sourceY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterSourceMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"source\"\n        }), (isUpdatable === 'target' || isUpdatable === true) && jsx(EdgeAnchor, {\n          position: targetPosition,\n          centerX: targetX,\n          centerY: targetY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterTargetMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"target\"\n        })]\n      })]\n    });\n  };\n  EdgeWrapper.displayName = 'EdgeWrapper';\n  return memo(EdgeWrapper);\n};\nfunction createEdgeTypes(edgeTypes) {\n  var standardTypes = {\n    default: wrapEdge(edgeTypes.default || BezierEdge),\n    straight: wrapEdge(edgeTypes.bezier || StraightEdge),\n    step: wrapEdge(edgeTypes.step || StepEdge),\n    smoothstep: wrapEdge(edgeTypes.step || SmoothStepEdge),\n    simplebezier: wrapEdge(edgeTypes.simplebezier || SimpleBezierEdge)\n  };\n  var wrappedTypes = {};\n  var specialTypes = Object.keys(edgeTypes).filter(function (k) {\n    return !['default', 'bezier'].includes(k);\n  }).reduce(function (res, key) {\n    res[key] = wrapEdge(edgeTypes[key] || BezierEdge);\n    return res;\n  }, wrappedTypes);\n  return _objectSpread(_objectSpread({}, standardTypes), specialTypes);\n}\nfunction getHandlePosition(position, nodeRect) {\n  var handle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var x = ((handle === null || handle === void 0 ? void 0 : handle.x) || 0) + nodeRect.x;\n  var y = ((handle === null || handle === void 0 ? void 0 : handle.y) || 0) + nodeRect.y;\n  var width = (handle === null || handle === void 0 ? void 0 : handle.width) || nodeRect.width;\n  var height = (handle === null || handle === void 0 ? void 0 : handle.height) || nodeRect.height;\n  switch (position) {\n    case Position.Top:\n      return {\n        x: x + width / 2,\n        y: y\n      };\n    case Position.Right:\n      return {\n        x: x + width,\n        y: y + height / 2\n      };\n    case Position.Bottom:\n      return {\n        x: x + width / 2,\n        y: y + height\n      };\n    case Position.Left:\n      return {\n        x: x,\n        y: y + height / 2\n      };\n  }\n}\nfunction getHandle(bounds, handleId) {\n  if (!bounds) {\n    return null;\n  }\n  if (bounds.length === 1 || !handleId) {\n    return bounds[0];\n  } else if (handleId) {\n    return bounds.find(function (d) {\n      return d.id === handleId;\n    }) || null;\n  }\n  return null;\n}\nvar getEdgePositions = function getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) {\n  var sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n  var targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n  return {\n    sourceX: sourceHandlePos.x,\n    sourceY: sourceHandlePos.y,\n    targetX: targetHandlePos.x,\n    targetY: targetHandlePos.y\n  };\n};\nfunction isEdgeVisible(_ref63) {\n  var sourcePos = _ref63.sourcePos,\n    targetPos = _ref63.targetPos,\n    sourceWidth = _ref63.sourceWidth,\n    sourceHeight = _ref63.sourceHeight,\n    targetWidth = _ref63.targetWidth,\n    targetHeight = _ref63.targetHeight,\n    width = _ref63.width,\n    height = _ref63.height,\n    transform = _ref63.transform;\n  var edgeBox = {\n    x: Math.min(sourcePos.x, targetPos.x),\n    y: Math.min(sourcePos.y, targetPos.y),\n    x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n    y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight)\n  };\n  if (edgeBox.x === edgeBox.x2) {\n    edgeBox.x2 += 1;\n  }\n  if (edgeBox.y === edgeBox.y2) {\n    edgeBox.y2 += 1;\n  }\n  var viewBox = rectToBox({\n    x: (0 - transform[0]) / transform[2],\n    y: (0 - transform[1]) / transform[2],\n    width: width / transform[2],\n    height: height / transform[2]\n  });\n  var xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n  var yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n  var overlappingArea = Math.ceil(xOverlap * yOverlap);\n  return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n  var _node$internalsSymbol6, _node$positionAbsolut5, _node$positionAbsolut6, _node$positionAbsolut7, _node$positionAbsolut8;\n  var handleBounds = (node === null || node === void 0 || (_node$internalsSymbol6 = node[internalsSymbol]) === null || _node$internalsSymbol6 === void 0 ? void 0 : _node$internalsSymbol6.handleBounds) || null;\n  var isValid = handleBounds && (node === null || node === void 0 ? void 0 : node.width) && (node === null || node === void 0 ? void 0 : node.height) && typeof (node === null || node === void 0 || (_node$positionAbsolut5 = node.positionAbsolute) === null || _node$positionAbsolut5 === void 0 ? void 0 : _node$positionAbsolut5.x) !== 'undefined' && typeof (node === null || node === void 0 || (_node$positionAbsolut6 = node.positionAbsolute) === null || _node$positionAbsolut6 === void 0 ? void 0 : _node$positionAbsolut6.y) !== 'undefined';\n  return [{\n    x: (node === null || node === void 0 || (_node$positionAbsolut7 = node.positionAbsolute) === null || _node$positionAbsolut7 === void 0 ? void 0 : _node$positionAbsolut7.x) || 0,\n    y: (node === null || node === void 0 || (_node$positionAbsolut8 = node.positionAbsolute) === null || _node$positionAbsolut8 === void 0 ? void 0 : _node$positionAbsolut8.y) || 0,\n    width: (node === null || node === void 0 ? void 0 : node.width) || 0,\n    height: (node === null || node === void 0 ? void 0 : node.height) || 0\n  }, handleBounds, !!isValid];\n}\nvar defaultEdgeTree = [{\n  level: 0,\n  isMaxLevel: true,\n  edges: []\n}];\nfunction groupEdgesByZLevel(edges, nodeInternals) {\n  var elevateEdgesOnSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var maxLevel = -1;\n  var levelLookup = edges.reduce(function (tree, edge) {\n    var hasZIndex = isNumeric(edge.zIndex);\n    var z = hasZIndex ? edge.zIndex : 0;\n    if (elevateEdgesOnSelect) {\n      var _sourceNode$internals, _targetNode$internals;\n      var targetNode = nodeInternals.get(edge.target);\n      var sourceNode = nodeInternals.get(edge.source);\n      var edgeOrConnectedNodeSelected = edge.selected || (targetNode === null || targetNode === void 0 ? void 0 : targetNode.selected) || (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.selected);\n      var selectedZIndex = Math.max((sourceNode === null || sourceNode === void 0 || (_sourceNode$internals = sourceNode[internalsSymbol]) === null || _sourceNode$internals === void 0 ? void 0 : _sourceNode$internals.z) || 0, (targetNode === null || targetNode === void 0 || (_targetNode$internals = targetNode[internalsSymbol]) === null || _targetNode$internals === void 0 ? void 0 : _targetNode$internals.z) || 0, 1000);\n      z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n    }\n    if (tree[z]) {\n      tree[z].push(edge);\n    } else {\n      tree[z] = [edge];\n    }\n    maxLevel = z > maxLevel ? z : maxLevel;\n    return tree;\n  }, {});\n  var edgeTree = Object.entries(levelLookup).map(function (_ref64) {\n    var _ref65 = _slicedToArray(_ref64, 2),\n      key = _ref65[0],\n      edges = _ref65[1];\n    var level = +key;\n    return {\n      edges: edges,\n      level: level,\n      isMaxLevel: level === maxLevel\n    };\n  });\n  if (edgeTree.length === 0) {\n    return defaultEdgeTree;\n  }\n  return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n  var edges = useStore(useCallback(function (s) {\n    if (!onlyRenderVisible) {\n      return s.edges;\n    }\n    return s.edges.filter(function (e) {\n      var sourceNode = nodeInternals.get(e.source);\n      var targetNode = nodeInternals.get(e.target);\n      return (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.width) && (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.height) && (targetNode === null || targetNode === void 0 ? void 0 : targetNode.width) && (targetNode === null || targetNode === void 0 ? void 0 : targetNode.height) && isEdgeVisible({\n        sourcePos: sourceNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        targetPos: targetNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        sourceWidth: sourceNode.width,\n        sourceHeight: sourceNode.height,\n        targetWidth: targetNode.width,\n        targetHeight: targetNode.height,\n        width: s.width,\n        height: s.height,\n        transform: s.transform\n      });\n    });\n  }, [onlyRenderVisible, nodeInternals]));\n  return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\nvar ArrowSymbol = function ArrowSymbol(_ref66) {\n  var _ref66$color = _ref66.color,\n    color = _ref66$color === void 0 ? 'none' : _ref66$color,\n    _ref66$strokeWidth = _ref66.strokeWidth,\n    strokeWidth = _ref66$strokeWidth === void 0 ? 1 : _ref66$strokeWidth;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: \"none\",\n    points: \"-5,-4 0,0 -5,4\"\n  });\n};\nvar ArrowClosedSymbol = function ArrowClosedSymbol(_ref67) {\n  var _ref67$color = _ref67.color,\n    color = _ref67$color === void 0 ? 'none' : _ref67$color,\n    _ref67$strokeWidth = _ref67.strokeWidth,\n    strokeWidth = _ref67$strokeWidth === void 0 ? 1 : _ref67$strokeWidth;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: color,\n    points: \"-5,-4 0,0 -5,4 -5,-4\"\n  });\n};\nvar MarkerSymbols = (_MarkerSymbols = {}, _defineProperty(_MarkerSymbols, MarkerType.Arrow, ArrowSymbol), _defineProperty(_MarkerSymbols, MarkerType.ArrowClosed, ArrowClosedSymbol), _MarkerSymbols);\nfunction useMarkerSymbol(type) {\n  var store = useStoreApi();\n  var symbol = useMemo(function () {\n    var symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n    if (!symbolExists) {\n      var _store$getState$onErr3, _store$getState37;\n      (_store$getState$onErr3 = (_store$getState37 = store.getState()).onError) === null || _store$getState$onErr3 === void 0 || _store$getState$onErr3.call(_store$getState37, '009', errorMessages['error009'](type));\n      return null;\n    }\n    return MarkerSymbols[type];\n  }, [type]);\n  return symbol;\n}\nvar Marker = function Marker(_ref68) {\n  var id = _ref68.id,\n    type = _ref68.type,\n    color = _ref68.color,\n    _ref68$width = _ref68.width,\n    width = _ref68$width === void 0 ? 12.5 : _ref68$width,\n    _ref68$height = _ref68.height,\n    height = _ref68$height === void 0 ? 12.5 : _ref68$height,\n    _ref68$markerUnits = _ref68.markerUnits,\n    markerUnits = _ref68$markerUnits === void 0 ? 'strokeWidth' : _ref68$markerUnits,\n    strokeWidth = _ref68.strokeWidth,\n    _ref68$orient = _ref68.orient,\n    orient = _ref68$orient === void 0 ? 'auto-start-reverse' : _ref68$orient;\n  var Symbol = useMarkerSymbol(type);\n  if (!Symbol) {\n    return null;\n  }\n  return jsx(\"marker\", {\n    className: \"react-flow__arrowhead\",\n    id: id,\n    markerWidth: \"\".concat(width),\n    markerHeight: \"\".concat(height),\n    viewBox: \"-10 -10 20 20\",\n    markerUnits: markerUnits,\n    orient: orient,\n    refX: \"0\",\n    refY: \"0\",\n    children: jsx(Symbol, {\n      color: color,\n      strokeWidth: strokeWidth\n    })\n  });\n};\nvar markerSelector = function markerSelector(_ref69) {\n  var defaultColor = _ref69.defaultColor,\n    rfId = _ref69.rfId;\n  return function (s) {\n    var ids = [];\n    return s.edges.reduce(function (markers, edge) {\n      [edge.markerStart, edge.markerEnd].forEach(function (marker) {\n        if (marker && typeof marker === 'object') {\n          var markerId = getMarkerId(marker, rfId);\n          if (!ids.includes(markerId)) {\n            markers.push(_objectSpread({\n              id: markerId,\n              color: marker.color || defaultColor\n            }, marker));\n            ids.push(markerId);\n          }\n        }\n      });\n      return markers;\n    }, []).sort(function (a, b) {\n      return a.id.localeCompare(b.id);\n    });\n  };\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nvar MarkerDefinitions = function MarkerDefinitions(_ref70) {\n  var defaultColor = _ref70.defaultColor,\n    rfId = _ref70.rfId;\n  var markers = useStore(useCallback(markerSelector({\n    defaultColor: defaultColor,\n    rfId: rfId\n  }), [defaultColor, rfId]),\n  // the id includes all marker options, so we just need to look at that part of the marker\n  function (a, b) {\n    return !(a.length !== b.length || a.some(function (m, i) {\n      return m.id !== b[i].id;\n    }));\n  });\n  return jsx(\"defs\", {\n    children: markers.map(function (marker) {\n      return jsx(Marker, {\n        id: marker.id,\n        type: marker.type,\n        color: marker.color,\n        width: marker.width,\n        height: marker.height,\n        markerUnits: marker.markerUnits,\n        strokeWidth: marker.strokeWidth,\n        orient: marker.orient\n      }, marker.id);\n    })\n  });\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\nvar selector$4 = function selector$4(s) {\n  return {\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError\n  };\n};\nvar EdgeRenderer = function EdgeRenderer(_ref71) {\n  var defaultMarkerColor = _ref71.defaultMarkerColor,\n    onlyRenderVisibleElements = _ref71.onlyRenderVisibleElements,\n    elevateEdgesOnSelect = _ref71.elevateEdgesOnSelect,\n    rfId = _ref71.rfId,\n    edgeTypes = _ref71.edgeTypes,\n    noPanClassName = _ref71.noPanClassName,\n    onEdgeUpdate = _ref71.onEdgeUpdate,\n    onEdgeContextMenu = _ref71.onEdgeContextMenu,\n    onEdgeMouseEnter = _ref71.onEdgeMouseEnter,\n    onEdgeMouseMove = _ref71.onEdgeMouseMove,\n    onEdgeMouseLeave = _ref71.onEdgeMouseLeave,\n    onEdgeClick = _ref71.onEdgeClick,\n    edgeUpdaterRadius = _ref71.edgeUpdaterRadius,\n    onEdgeDoubleClick = _ref71.onEdgeDoubleClick,\n    onEdgeUpdateStart = _ref71.onEdgeUpdateStart,\n    onEdgeUpdateEnd = _ref71.onEdgeUpdateEnd,\n    children = _ref71.children;\n  var _useStore11 = useStore(selector$4, shallow),\n    edgesFocusable = _useStore11.edgesFocusable,\n    edgesUpdatable = _useStore11.edgesUpdatable,\n    elementsSelectable = _useStore11.elementsSelectable,\n    width = _useStore11.width,\n    height = _useStore11.height,\n    connectionMode = _useStore11.connectionMode,\n    nodeInternals = _useStore11.nodeInternals,\n    onError = _useStore11.onError;\n  var edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n  if (!width) {\n    return null;\n  }\n  return jsxs(Fragment, {\n    children: [edgeTree.map(function (_ref72) {\n      var level = _ref72.level,\n        edges = _ref72.edges,\n        isMaxLevel = _ref72.isMaxLevel;\n      return jsxs(\"svg\", {\n        style: {\n          zIndex: level\n        },\n        width: width,\n        height: height,\n        className: \"react-flow__edges react-flow__container\",\n        children: [isMaxLevel && jsx(MarkerDefinitions$1, {\n          defaultColor: defaultMarkerColor,\n          rfId: rfId\n        }), jsx(\"g\", {\n          children: edges.map(function (edge) {\n            var _targetHandleBounds$t, _targetHandleBounds$s;\n            var _getNodeData = getNodeData(nodeInternals.get(edge.source)),\n              _getNodeData2 = _slicedToArray(_getNodeData, 3),\n              sourceNodeRect = _getNodeData2[0],\n              sourceHandleBounds = _getNodeData2[1],\n              sourceIsValid = _getNodeData2[2];\n            var _getNodeData3 = getNodeData(nodeInternals.get(edge.target)),\n              _getNodeData4 = _slicedToArray(_getNodeData3, 3),\n              targetNodeRect = _getNodeData4[0],\n              targetHandleBounds = _getNodeData4[1],\n              targetIsValid = _getNodeData4[2];\n            if (!sourceIsValid || !targetIsValid) {\n              return null;\n            }\n            var edgeType = edge.type || 'default';\n            if (!edgeTypes[edgeType]) {\n              onError === null || onError === void 0 || onError('011', errorMessages['error011'](edgeType));\n              edgeType = 'default';\n            }\n            var EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n            // when connection type is loose we can define all handles as sources and connect source -> source\n            var targetNodeHandles = connectionMode === ConnectionMode.Strict ? targetHandleBounds.target : ((_targetHandleBounds$t = targetHandleBounds.target) !== null && _targetHandleBounds$t !== void 0 ? _targetHandleBounds$t : []).concat((_targetHandleBounds$s = targetHandleBounds.source) !== null && _targetHandleBounds$s !== void 0 ? _targetHandleBounds$s : []);\n            var sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n            var targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n            var sourcePosition = (sourceHandle === null || sourceHandle === void 0 ? void 0 : sourceHandle.position) || Position.Bottom;\n            var targetPosition = (targetHandle === null || targetHandle === void 0 ? void 0 : targetHandle.position) || Position.Top;\n            var isFocusable = !!(edge.focusable || edgesFocusable && typeof edge.focusable === 'undefined');\n            var isUpdatable = typeof onEdgeUpdate !== 'undefined' && (edge.updatable || edgesUpdatable && typeof edge.updatable === 'undefined');\n            if (!sourceHandle || !targetHandle) {\n              onError === null || onError === void 0 || onError('008', errorMessages['error008'](sourceHandle, edge));\n              return null;\n            }\n            var _getEdgePositions = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition),\n              sourceX = _getEdgePositions.sourceX,\n              sourceY = _getEdgePositions.sourceY,\n              targetX = _getEdgePositions.targetX,\n              targetY = _getEdgePositions.targetY;\n            return jsx(EdgeComponent, {\n              id: edge.id,\n              className: cc([edge.className, noPanClassName]),\n              type: edgeType,\n              data: edge.data,\n              selected: !!edge.selected,\n              animated: !!edge.animated,\n              hidden: !!edge.hidden,\n              label: edge.label,\n              labelStyle: edge.labelStyle,\n              labelShowBg: edge.labelShowBg,\n              labelBgStyle: edge.labelBgStyle,\n              labelBgPadding: edge.labelBgPadding,\n              labelBgBorderRadius: edge.labelBgBorderRadius,\n              style: edge.style,\n              source: edge.source,\n              target: edge.target,\n              sourceHandleId: edge.sourceHandle,\n              targetHandleId: edge.targetHandle,\n              markerEnd: edge.markerEnd,\n              markerStart: edge.markerStart,\n              sourceX: sourceX,\n              sourceY: sourceY,\n              targetX: targetX,\n              targetY: targetY,\n              sourcePosition: sourcePosition,\n              targetPosition: targetPosition,\n              elementsSelectable: elementsSelectable,\n              onEdgeUpdate: onEdgeUpdate,\n              onContextMenu: onEdgeContextMenu,\n              onMouseEnter: onEdgeMouseEnter,\n              onMouseMove: onEdgeMouseMove,\n              onMouseLeave: onEdgeMouseLeave,\n              onClick: onEdgeClick,\n              edgeUpdaterRadius: edgeUpdaterRadius,\n              onEdgeDoubleClick: onEdgeDoubleClick,\n              onEdgeUpdateStart: onEdgeUpdateStart,\n              onEdgeUpdateEnd: onEdgeUpdateEnd,\n              rfId: rfId,\n              ariaLabel: edge.ariaLabel,\n              isFocusable: isFocusable,\n              isUpdatable: isUpdatable,\n              pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined,\n              interactionWidth: edge.interactionWidth\n            }, edge.id);\n          })\n        })]\n      }, level);\n    }), children]\n  });\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\nvar selector$3 = function selector$3(s) {\n  return \"translate(\".concat(s.transform[0], \"px,\").concat(s.transform[1], \"px) scale(\").concat(s.transform[2], \")\");\n};\nfunction Viewport(_ref73) {\n  var children = _ref73.children;\n  var transform = useStore(selector$3);\n  return jsx(\"div\", {\n    className: \"react-flow__viewport react-flow__container\",\n    style: {\n      transform: transform\n    },\n    children: children\n  });\n}\nfunction useOnInitHandler(onInit) {\n  var rfInstance = useReactFlow();\n  var isInitialized = useRef(false);\n  useEffect(function () {\n    if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n      setTimeout(function () {\n        return onInit(rfInstance);\n      }, 1);\n      isInitialized.current = true;\n    }\n  }, [onInit, rfInstance.viewportInitialized]);\n}\nvar oppositePosition = (_oppositePosition = {}, _defineProperty(_oppositePosition, Position.Left, Position.Right), _defineProperty(_oppositePosition, Position.Right, Position.Left), _defineProperty(_oppositePosition, Position.Top, Position.Bottom), _defineProperty(_oppositePosition, Position.Bottom, Position.Top), _oppositePosition);\nvar ConnectionLine = function ConnectionLine(_ref74) {\n  var _fromNode$internalsSy, _fromNode$width, _fromNode$height, _fromNode$positionAbs, _fromNode$positionAbs2, _fromNode$positionAbs3, _fromNode$positionAbs4;\n  var nodeId = _ref74.nodeId,\n    handleType = _ref74.handleType,\n    style = _ref74.style,\n    _ref74$type = _ref74.type,\n    type = _ref74$type === void 0 ? ConnectionLineType.Bezier : _ref74$type,\n    CustomComponent = _ref74.CustomComponent,\n    connectionStatus = _ref74.connectionStatus;\n  var _useStore12 = useStore(useCallback(function (s) {\n      return {\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode\n      };\n    }, [nodeId]), shallow),\n    fromNode = _useStore12.fromNode,\n    handleId = _useStore12.handleId,\n    toX = _useStore12.toX,\n    toY = _useStore12.toY,\n    connectionMode = _useStore12.connectionMode;\n  var fromHandleBounds = fromNode === null || fromNode === void 0 || (_fromNode$internalsSy = fromNode[internalsSymbol]) === null || _fromNode$internalsSy === void 0 ? void 0 : _fromNode$internalsSy.handleBounds;\n  var handleBounds = fromHandleBounds === null || fromHandleBounds === void 0 ? void 0 : fromHandleBounds[handleType];\n  if (connectionMode === ConnectionMode.Loose) {\n    handleBounds = handleBounds ? handleBounds : fromHandleBounds === null || fromHandleBounds === void 0 ? void 0 : fromHandleBounds[handleType === 'source' ? 'target' : 'source'];\n  }\n  if (!fromNode || !handleBounds) {\n    return null;\n  }\n  var fromHandle = handleId ? handleBounds.find(function (d) {\n    return d.id === handleId;\n  }) : handleBounds[0];\n  var fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : ((_fromNode$width = fromNode.width) !== null && _fromNode$width !== void 0 ? _fromNode$width : 0) / 2;\n  var fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : (_fromNode$height = fromNode.height) !== null && _fromNode$height !== void 0 ? _fromNode$height : 0;\n  var fromX = ((_fromNode$positionAbs = (_fromNode$positionAbs2 = fromNode.positionAbsolute) === null || _fromNode$positionAbs2 === void 0 ? void 0 : _fromNode$positionAbs2.x) !== null && _fromNode$positionAbs !== void 0 ? _fromNode$positionAbs : 0) + fromHandleX;\n  var fromY = ((_fromNode$positionAbs3 = (_fromNode$positionAbs4 = fromNode.positionAbsolute) === null || _fromNode$positionAbs4 === void 0 ? void 0 : _fromNode$positionAbs4.y) !== null && _fromNode$positionAbs3 !== void 0 ? _fromNode$positionAbs3 : 0) + fromHandleY;\n  var fromPosition = fromHandle === null || fromHandle === void 0 ? void 0 : fromHandle.position;\n  var toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n  if (!fromPosition || !toPosition) {\n    return null;\n  }\n  if (CustomComponent) {\n    return jsx(CustomComponent, {\n      connectionLineType: type,\n      connectionLineStyle: style,\n      fromNode: fromNode,\n      fromHandle: fromHandle,\n      fromX: fromX,\n      fromY: fromY,\n      toX: toX,\n      toY: toY,\n      fromPosition: fromPosition,\n      toPosition: toPosition,\n      connectionStatus: connectionStatus\n    });\n  }\n  var dAttr = '';\n  var pathParams = {\n    sourceX: fromX,\n    sourceY: fromY,\n    sourcePosition: fromPosition,\n    targetX: toX,\n    targetY: toY,\n    targetPosition: toPosition\n  };\n  if (type === ConnectionLineType.Bezier) {\n    // we assume the destination position is opposite to the source position\n    var _getBezierPath3 = getBezierPath(pathParams);\n    var _getBezierPath4 = _slicedToArray(_getBezierPath3, 1);\n    dAttr = _getBezierPath4[0];\n  } else if (type === ConnectionLineType.Step) {\n    var _getSmoothStepPath3 = getSmoothStepPath(_objectSpread(_objectSpread({}, pathParams), {}, {\n      borderRadius: 0\n    }));\n    var _getSmoothStepPath4 = _slicedToArray(_getSmoothStepPath3, 1);\n    dAttr = _getSmoothStepPath4[0];\n  } else if (type === ConnectionLineType.SmoothStep) {\n    var _getSmoothStepPath5 = getSmoothStepPath(pathParams);\n    var _getSmoothStepPath6 = _slicedToArray(_getSmoothStepPath5, 1);\n    dAttr = _getSmoothStepPath6[0];\n  } else if (type === ConnectionLineType.SimpleBezier) {\n    var _getSimpleBezierPath3 = getSimpleBezierPath(pathParams);\n    var _getSimpleBezierPath4 = _slicedToArray(_getSimpleBezierPath3, 1);\n    dAttr = _getSimpleBezierPath4[0];\n  } else {\n    dAttr = \"M\".concat(fromX, \",\").concat(fromY, \" \").concat(toX, \",\").concat(toY);\n  }\n  return jsx(\"path\", {\n    d: dAttr,\n    fill: \"none\",\n    className: \"react-flow__connection-path\",\n    style: style\n  });\n};\nConnectionLine.displayName = 'ConnectionLine';\nvar selector$2 = function selector$2(s) {\n  return {\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height\n  };\n};\nfunction ConnectionLineWrapper(_ref75) {\n  var containerStyle = _ref75.containerStyle,\n    style = _ref75.style,\n    type = _ref75.type,\n    component = _ref75.component;\n  var _useStore13 = useStore(selector$2, shallow),\n    nodeId = _useStore13.nodeId,\n    handleType = _useStore13.handleType,\n    nodesConnectable = _useStore13.nodesConnectable,\n    width = _useStore13.width,\n    height = _useStore13.height,\n    connectionStatus = _useStore13.connectionStatus;\n  var isValid = !!(nodeId && handleType && width && nodesConnectable);\n  if (!isValid) {\n    return null;\n  }\n  return jsx(\"svg\", {\n    style: containerStyle,\n    width: width,\n    height: height,\n    className: \"react-flow__edges react-flow__connectionline react-flow__container\",\n    children: jsx(\"g\", {\n      className: cc(['react-flow__connection', connectionStatus]),\n      children: jsx(ConnectionLine, {\n        nodeId: nodeId,\n        handleType: handleType,\n        style: style,\n        type: type,\n        CustomComponent: component,\n        connectionStatus: connectionStatus\n      })\n    })\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n  var typesKeysRef = useRef(null);\n  var store = useStoreApi();\n  var typesParsed = useMemo(function () {\n    if (process.env.NODE_ENV === 'development') {\n      var typeKeys = Object.keys(nodeOrEdgeTypes);\n      if (shallow(typesKeysRef.current, typeKeys)) {\n        var _store$getState$onErr4, _store$getState38;\n        (_store$getState$onErr4 = (_store$getState38 = store.getState()).onError) === null || _store$getState$onErr4 === void 0 || _store$getState$onErr4.call(_store$getState38, '002', errorMessages['error002']());\n      }\n      typesKeysRef.current = typeKeys;\n    }\n    return createTypes(nodeOrEdgeTypes);\n  }, [nodeOrEdgeTypes]);\n  return typesParsed;\n}\nvar GraphView = function GraphView(_ref76) {\n  var nodeTypes = _ref76.nodeTypes,\n    edgeTypes = _ref76.edgeTypes,\n    onMove = _ref76.onMove,\n    onMoveStart = _ref76.onMoveStart,\n    onMoveEnd = _ref76.onMoveEnd,\n    onInit = _ref76.onInit,\n    onNodeClick = _ref76.onNodeClick,\n    onEdgeClick = _ref76.onEdgeClick,\n    onNodeDoubleClick = _ref76.onNodeDoubleClick,\n    onEdgeDoubleClick = _ref76.onEdgeDoubleClick,\n    onNodeMouseEnter = _ref76.onNodeMouseEnter,\n    onNodeMouseMove = _ref76.onNodeMouseMove,\n    onNodeMouseLeave = _ref76.onNodeMouseLeave,\n    onNodeContextMenu = _ref76.onNodeContextMenu,\n    onSelectionContextMenu = _ref76.onSelectionContextMenu,\n    onSelectionStart = _ref76.onSelectionStart,\n    onSelectionEnd = _ref76.onSelectionEnd,\n    connectionLineType = _ref76.connectionLineType,\n    connectionLineStyle = _ref76.connectionLineStyle,\n    connectionLineComponent = _ref76.connectionLineComponent,\n    connectionLineContainerStyle = _ref76.connectionLineContainerStyle,\n    selectionKeyCode = _ref76.selectionKeyCode,\n    selectionOnDrag = _ref76.selectionOnDrag,\n    selectionMode = _ref76.selectionMode,\n    multiSelectionKeyCode = _ref76.multiSelectionKeyCode,\n    panActivationKeyCode = _ref76.panActivationKeyCode,\n    zoomActivationKeyCode = _ref76.zoomActivationKeyCode,\n    deleteKeyCode = _ref76.deleteKeyCode,\n    onlyRenderVisibleElements = _ref76.onlyRenderVisibleElements,\n    elementsSelectable = _ref76.elementsSelectable,\n    selectNodesOnDrag = _ref76.selectNodesOnDrag,\n    defaultViewport = _ref76.defaultViewport,\n    translateExtent = _ref76.translateExtent,\n    minZoom = _ref76.minZoom,\n    maxZoom = _ref76.maxZoom,\n    preventScrolling = _ref76.preventScrolling,\n    defaultMarkerColor = _ref76.defaultMarkerColor,\n    zoomOnScroll = _ref76.zoomOnScroll,\n    zoomOnPinch = _ref76.zoomOnPinch,\n    panOnScroll = _ref76.panOnScroll,\n    panOnScrollSpeed = _ref76.panOnScrollSpeed,\n    panOnScrollMode = _ref76.panOnScrollMode,\n    zoomOnDoubleClick = _ref76.zoomOnDoubleClick,\n    panOnDrag = _ref76.panOnDrag,\n    onPaneClick = _ref76.onPaneClick,\n    onPaneMouseEnter = _ref76.onPaneMouseEnter,\n    onPaneMouseMove = _ref76.onPaneMouseMove,\n    onPaneMouseLeave = _ref76.onPaneMouseLeave,\n    onPaneScroll = _ref76.onPaneScroll,\n    onPaneContextMenu = _ref76.onPaneContextMenu,\n    onEdgeUpdate = _ref76.onEdgeUpdate,\n    onEdgeContextMenu = _ref76.onEdgeContextMenu,\n    onEdgeMouseEnter = _ref76.onEdgeMouseEnter,\n    onEdgeMouseMove = _ref76.onEdgeMouseMove,\n    onEdgeMouseLeave = _ref76.onEdgeMouseLeave,\n    edgeUpdaterRadius = _ref76.edgeUpdaterRadius,\n    onEdgeUpdateStart = _ref76.onEdgeUpdateStart,\n    onEdgeUpdateEnd = _ref76.onEdgeUpdateEnd,\n    noDragClassName = _ref76.noDragClassName,\n    noWheelClassName = _ref76.noWheelClassName,\n    noPanClassName = _ref76.noPanClassName,\n    elevateEdgesOnSelect = _ref76.elevateEdgesOnSelect,\n    disableKeyboardA11y = _ref76.disableKeyboardA11y,\n    nodeOrigin = _ref76.nodeOrigin,\n    nodeExtent = _ref76.nodeExtent,\n    rfId = _ref76.rfId;\n  var nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n  var edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n  useOnInitHandler(onInit);\n  return jsx(FlowRenderer$1, {\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneContextMenu: onPaneContextMenu,\n    onPaneScroll: onPaneScroll,\n    deleteKeyCode: deleteKeyCode,\n    selectionKeyCode: selectionKeyCode,\n    selectionOnDrag: selectionOnDrag,\n    selectionMode: selectionMode,\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    multiSelectionKeyCode: multiSelectionKeyCode,\n    panActivationKeyCode: panActivationKeyCode,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    elementsSelectable: elementsSelectable,\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    panOnDrag: panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    onSelectionContextMenu: onSelectionContextMenu,\n    preventScrolling: preventScrolling,\n    noDragClassName: noDragClassName,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    disableKeyboardA11y: disableKeyboardA11y,\n    children: jsxs(Viewport, {\n      children: [jsx(EdgeRenderer$1, {\n        edgeTypes: edgeTypesWrapped,\n        onEdgeClick: onEdgeClick,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeUpdate: onEdgeUpdate,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: !!elevateEdgesOnSelect,\n        disableKeyboardA11y: disableKeyboardA11y,\n        rfId: rfId,\n        children: jsx(ConnectionLineWrapper, {\n          style: connectionLineStyle,\n          type: connectionLineType,\n          component: connectionLineComponent,\n          containerStyle: connectionLineContainerStyle\n        })\n      }), jsx(\"div\", {\n        className: \"react-flow__edgelabel-renderer\"\n      }), jsx(NodeRenderer$1, {\n        nodeTypes: nodeTypesWrapped,\n        onNodeClick: onNodeClick,\n        onNodeDoubleClick: onNodeDoubleClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        selectNodesOnDrag: selectNodesOnDrag,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        noPanClassName: noPanClassName,\n        noDragClassName: noDragClassName,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent,\n        rfId: rfId\n      })]\n    })\n  });\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\nvar infiniteExtent = [[Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]];\nvar initialState = {\n  rfId: '1',\n  width: 0,\n  height: 0,\n  transform: [0, 0, 1],\n  nodeInternals: new Map(),\n  edges: [],\n  onNodesChange: null,\n  onEdgesChange: null,\n  hasDefaultNodes: false,\n  hasDefaultEdges: false,\n  d3Zoom: null,\n  d3Selection: null,\n  d3ZoomHandler: undefined,\n  minZoom: 0.5,\n  maxZoom: 2,\n  translateExtent: infiniteExtent,\n  nodeExtent: infiniteExtent,\n  nodesSelectionActive: false,\n  userSelectionActive: false,\n  userSelectionRect: null,\n  connectionNodeId: null,\n  connectionHandleId: null,\n  connectionHandleType: 'source',\n  connectionPosition: {\n    x: 0,\n    y: 0\n  },\n  connectionStatus: null,\n  connectionMode: ConnectionMode.Strict,\n  domNode: null,\n  paneDragging: false,\n  noPanClassName: 'nopan',\n  nodeOrigin: [0, 0],\n  snapGrid: [15, 15],\n  snapToGrid: false,\n  nodesDraggable: true,\n  nodesConnectable: true,\n  nodesFocusable: true,\n  edgesFocusable: true,\n  edgesUpdatable: true,\n  elementsSelectable: true,\n  elevateNodesOnSelect: true,\n  fitViewOnInit: false,\n  fitViewOnInitDone: false,\n  fitViewOnInitOptions: undefined,\n  multiSelectionActive: false,\n  connectionStartHandle: null,\n  connectionEndHandle: null,\n  connectionClickStartHandle: null,\n  connectOnClick: true,\n  ariaLiveMessage: '',\n  autoPanOnConnect: true,\n  autoPanOnNodeDrag: true,\n  connectionRadius: 20,\n  onError: devWarn,\n  isValidConnection: undefined\n};\nvar createRFStore = function createRFStore() {\n  return createWithEqualityFn(function (set, get) {\n    return _objectSpread(_objectSpread({}, initialState), {}, {\n      setNodes: function setNodes(nodes) {\n        var _get3 = get(),\n          nodeInternals = _get3.nodeInternals,\n          nodeOrigin = _get3.nodeOrigin,\n          elevateNodesOnSelect = _get3.elevateNodesOnSelect;\n        set({\n          nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect)\n        });\n      },\n      getNodes: function getNodes() {\n        return Array.from(get().nodeInternals.values());\n      },\n      setEdges: function setEdges(edges) {\n        var _get4 = get(),\n          _get4$defaultEdgeOpti = _get4.defaultEdgeOptions,\n          defaultEdgeOptions = _get4$defaultEdgeOpti === void 0 ? {} : _get4$defaultEdgeOpti;\n        set({\n          edges: edges.map(function (e) {\n            return _objectSpread(_objectSpread({}, defaultEdgeOptions), e);\n          })\n        });\n      },\n      setDefaultNodesAndEdges: function setDefaultNodesAndEdges(nodes, edges) {\n        var hasDefaultNodes = typeof nodes !== 'undefined';\n        var hasDefaultEdges = typeof edges !== 'undefined';\n        var nodeInternals = hasDefaultNodes ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect) : new Map();\n        var nextEdges = hasDefaultEdges ? edges : [];\n        set({\n          nodeInternals: nodeInternals,\n          edges: nextEdges,\n          hasDefaultNodes: hasDefaultNodes,\n          hasDefaultEdges: hasDefaultEdges\n        });\n      },\n      updateNodeDimensions: function updateNodeDimensions(updates) {\n        var _get5 = get(),\n          onNodesChange = _get5.onNodesChange,\n          nodeInternals = _get5.nodeInternals,\n          fitViewOnInit = _get5.fitViewOnInit,\n          fitViewOnInitDone = _get5.fitViewOnInitDone,\n          fitViewOnInitOptions = _get5.fitViewOnInitOptions,\n          domNode = _get5.domNode,\n          nodeOrigin = _get5.nodeOrigin;\n        var viewportNode = domNode === null || domNode === void 0 ? void 0 : domNode.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n          return;\n        }\n        var style = window.getComputedStyle(viewportNode);\n        var _window$DOMMatrixRead = new window.DOMMatrixReadOnly(style.transform),\n          zoom = _window$DOMMatrixRead.m22;\n        var changes = updates.reduce(function (res, update) {\n          var node = nodeInternals.get(update.id);\n          if (node) {\n            var dimensions = getDimensions(update.nodeElement);\n            var doUpdate = !!(dimensions.width && dimensions.height && (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n            if (doUpdate) {\n              nodeInternals.set(node.id, _objectSpread(_objectSpread({}, node), {}, _defineProperty({}, internalsSymbol, _objectSpread(_objectSpread({}, node[internalsSymbol]), {}, {\n                handleBounds: {\n                  source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                  target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin)\n                }\n              })), dimensions));\n              res.push({\n                id: node.id,\n                type: 'dimensions',\n                dimensions: dimensions\n              });\n            }\n          }\n          return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        var nextFitViewOnInitDone = fitViewOnInitDone || fitViewOnInit && !fitViewOnInitDone && _fitView(get, _objectSpread({\n          initial: true\n        }, fitViewOnInitOptions));\n        set({\n          nodeInternals: new Map(nodeInternals),\n          fitViewOnInitDone: nextFitViewOnInitDone\n        });\n        if ((changes === null || changes === void 0 ? void 0 : changes.length) > 0) {\n          onNodesChange === null || onNodesChange === void 0 || onNodesChange(changes);\n        }\n      },\n      updateNodePositions: function updateNodePositions(nodeDragItems) {\n        var positionChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var dragging = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var _get6 = get(),\n          triggerNodeChanges = _get6.triggerNodeChanges;\n        var changes = nodeDragItems.map(function (node) {\n          var change = {\n            id: node.id,\n            type: 'position',\n            dragging: dragging\n          };\n          if (positionChanged) {\n            change.positionAbsolute = node.positionAbsolute;\n            change.position = node.position;\n          }\n          return change;\n        });\n        triggerNodeChanges(changes);\n      },\n      triggerNodeChanges: function triggerNodeChanges(changes) {\n        var _get7 = get(),\n          onNodesChange = _get7.onNodesChange,\n          nodeInternals = _get7.nodeInternals,\n          hasDefaultNodes = _get7.hasDefaultNodes,\n          nodeOrigin = _get7.nodeOrigin,\n          getNodes = _get7.getNodes,\n          elevateNodesOnSelect = _get7.elevateNodesOnSelect;\n        if (changes !== null && changes !== void 0 && changes.length) {\n          if (hasDefaultNodes) {\n            var nodes = applyNodeChanges(changes, getNodes());\n            var nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n            set({\n              nodeInternals: nextNodeInternals\n            });\n          }\n          onNodesChange === null || onNodesChange === void 0 || onNodesChange(changes);\n        }\n      },\n      addSelectedNodes: function addSelectedNodes(selectedNodeIds) {\n        var _get8 = get(),\n          multiSelectionActive = _get8.multiSelectionActive,\n          edges = _get8.edges,\n          getNodes = _get8.getNodes;\n        var changedNodes;\n        var changedEdges = null;\n        if (multiSelectionActive) {\n          changedNodes = selectedNodeIds.map(function (nodeId) {\n            return createSelectionChange(nodeId, true);\n          });\n        } else {\n          changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n          changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n          changedNodes: changedNodes,\n          changedEdges: changedEdges,\n          get: get,\n          set: set\n        });\n      },\n      addSelectedEdges: function addSelectedEdges(selectedEdgeIds) {\n        var _get9 = get(),\n          multiSelectionActive = _get9.multiSelectionActive,\n          edges = _get9.edges,\n          getNodes = _get9.getNodes;\n        var changedEdges;\n        var changedNodes = null;\n        if (multiSelectionActive) {\n          changedEdges = selectedEdgeIds.map(function (edgeId) {\n            return createSelectionChange(edgeId, true);\n          });\n        } else {\n          changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n          changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n          changedNodes: changedNodes,\n          changedEdges: changedEdges,\n          get: get,\n          set: set\n        });\n      },\n      unselectNodesAndEdges: function unselectNodesAndEdges() {\n        var _ref77 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          nodes = _ref77.nodes,\n          edges = _ref77.edges;\n        var _get10 = get(),\n          storeEdges = _get10.edges,\n          getNodes = _get10.getNodes;\n        var nodesToUnselect = nodes ? nodes : getNodes();\n        var edgesToUnselect = edges ? edges : storeEdges;\n        var changedNodes = nodesToUnselect.map(function (n) {\n          n.selected = false;\n          return createSelectionChange(n.id, false);\n        });\n        var changedEdges = edgesToUnselect.map(function (edge) {\n          return createSelectionChange(edge.id, false);\n        });\n        updateNodesAndEdgesSelections({\n          changedNodes: changedNodes,\n          changedEdges: changedEdges,\n          get: get,\n          set: set\n        });\n      },\n      setMinZoom: function setMinZoom(minZoom) {\n        var _get11 = get(),\n          d3Zoom = _get11.d3Zoom,\n          maxZoom = _get11.maxZoom;\n        d3Zoom === null || d3Zoom === void 0 || d3Zoom.scaleExtent([minZoom, maxZoom]);\n        set({\n          minZoom: minZoom\n        });\n      },\n      setMaxZoom: function setMaxZoom(maxZoom) {\n        var _get12 = get(),\n          d3Zoom = _get12.d3Zoom,\n          minZoom = _get12.minZoom;\n        d3Zoom === null || d3Zoom === void 0 || d3Zoom.scaleExtent([minZoom, maxZoom]);\n        set({\n          maxZoom: maxZoom\n        });\n      },\n      setTranslateExtent: function setTranslateExtent(translateExtent) {\n        var _get$d3Zoom;\n        (_get$d3Zoom = get().d3Zoom) === null || _get$d3Zoom === void 0 || _get$d3Zoom.translateExtent(translateExtent);\n        set({\n          translateExtent: translateExtent\n        });\n      },\n      resetSelectedElements: function resetSelectedElements() {\n        var _get13 = get(),\n          edges = _get13.edges,\n          getNodes = _get13.getNodes;\n        var nodes = getNodes();\n        var nodesToUnselect = nodes.filter(function (e) {\n          return e.selected;\n        }).map(function (n) {\n          return createSelectionChange(n.id, false);\n        });\n        var edgesToUnselect = edges.filter(function (e) {\n          return e.selected;\n        }).map(function (e) {\n          return createSelectionChange(e.id, false);\n        });\n        updateNodesAndEdgesSelections({\n          changedNodes: nodesToUnselect,\n          changedEdges: edgesToUnselect,\n          get: get,\n          set: set\n        });\n      },\n      setNodeExtent: function setNodeExtent(nodeExtent) {\n        var _get14 = get(),\n          nodeInternals = _get14.nodeInternals;\n        nodeInternals.forEach(function (node) {\n          node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n          nodeExtent: nodeExtent,\n          nodeInternals: new Map(nodeInternals)\n        });\n      },\n      panBy: function panBy(delta) {\n        var _get15 = get(),\n          transform = _get15.transform,\n          width = _get15.width,\n          height = _get15.height,\n          d3Zoom = _get15.d3Zoom,\n          d3Selection = _get15.d3Selection,\n          translateExtent = _get15.translateExtent;\n        if (!d3Zoom || !d3Selection || !delta.x && !delta.y) {\n          return false;\n        }\n        var nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n        var extent = [[0, 0], [width, height]];\n        var constrainedTransform = d3Zoom === null || d3Zoom === void 0 ? void 0 : d3Zoom.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n        var transformChanged = transform[0] !== constrainedTransform.x || transform[1] !== constrainedTransform.y || transform[2] !== constrainedTransform.k;\n        return transformChanged;\n      },\n      cancelConnection: function cancelConnection() {\n        return set({\n          connectionNodeId: initialState.connectionNodeId,\n          connectionHandleId: initialState.connectionHandleId,\n          connectionHandleType: initialState.connectionHandleType,\n          connectionStatus: initialState.connectionStatus,\n          connectionStartHandle: initialState.connectionStartHandle,\n          connectionEndHandle: initialState.connectionEndHandle\n        });\n      },\n      reset: function reset() {\n        return set(_objectSpread({}, initialState));\n      }\n    });\n  }, Object.is);\n};\nvar ReactFlowProvider = function ReactFlowProvider(_ref78) {\n  var children = _ref78.children;\n  var storeRef = useRef(null);\n  if (!storeRef.current) {\n    storeRef.current = createRFStore();\n  }\n  return jsx(Provider$1, {\n    value: storeRef.current,\n    children: children\n  });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\nvar Wrapper = function Wrapper(_ref79) {\n  var children = _ref79.children;\n  var isWrapped = useContext(StoreContext);\n  if (isWrapped) {\n    // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n    return jsx(Fragment, {\n      children: children\n    });\n  }\n  return jsx(ReactFlowProvider, {\n    children: children\n  });\n};\nWrapper.displayName = 'ReactFlowWrapper';\nvar defaultNodeTypes = {\n  input: InputNode$1,\n  default: DefaultNode$1,\n  output: OutputNode$1,\n  group: GroupNode\n};\nvar defaultEdgeTypes = {\n  default: BezierEdge,\n  straight: StraightEdge,\n  step: StepEdge,\n  smoothstep: SmoothStepEdge,\n  simplebezier: SimpleBezierEdge\n};\nvar initNodeOrigin = [0, 0];\nvar initSnapGrid = [15, 15];\nvar initDefaultViewport = {\n  x: 0,\n  y: 0,\n  zoom: 1\n};\nvar wrapperStyle = {\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n  position: 'relative',\n  zIndex: 0\n};\nvar ReactFlow = forwardRef(function (_ref80, ref) {\n  var nodes = _ref80.nodes,\n    edges = _ref80.edges,\n    defaultNodes = _ref80.defaultNodes,\n    defaultEdges = _ref80.defaultEdges,\n    className = _ref80.className,\n    _ref80$nodeTypes = _ref80.nodeTypes,\n    nodeTypes = _ref80$nodeTypes === void 0 ? defaultNodeTypes : _ref80$nodeTypes,\n    _ref80$edgeTypes = _ref80.edgeTypes,\n    edgeTypes = _ref80$edgeTypes === void 0 ? defaultEdgeTypes : _ref80$edgeTypes,\n    onNodeClick = _ref80.onNodeClick,\n    onEdgeClick = _ref80.onEdgeClick,\n    onInit = _ref80.onInit,\n    onMove = _ref80.onMove,\n    onMoveStart = _ref80.onMoveStart,\n    onMoveEnd = _ref80.onMoveEnd,\n    onConnect = _ref80.onConnect,\n    onConnectStart = _ref80.onConnectStart,\n    onConnectEnd = _ref80.onConnectEnd,\n    onClickConnectStart = _ref80.onClickConnectStart,\n    onClickConnectEnd = _ref80.onClickConnectEnd,\n    onNodeMouseEnter = _ref80.onNodeMouseEnter,\n    onNodeMouseMove = _ref80.onNodeMouseMove,\n    onNodeMouseLeave = _ref80.onNodeMouseLeave,\n    onNodeContextMenu = _ref80.onNodeContextMenu,\n    onNodeDoubleClick = _ref80.onNodeDoubleClick,\n    onNodeDragStart = _ref80.onNodeDragStart,\n    onNodeDrag = _ref80.onNodeDrag,\n    onNodeDragStop = _ref80.onNodeDragStop,\n    onNodesDelete = _ref80.onNodesDelete,\n    onEdgesDelete = _ref80.onEdgesDelete,\n    onSelectionChange = _ref80.onSelectionChange,\n    onSelectionDragStart = _ref80.onSelectionDragStart,\n    onSelectionDrag = _ref80.onSelectionDrag,\n    onSelectionDragStop = _ref80.onSelectionDragStop,\n    onSelectionContextMenu = _ref80.onSelectionContextMenu,\n    onSelectionStart = _ref80.onSelectionStart,\n    onSelectionEnd = _ref80.onSelectionEnd,\n    _ref80$connectionMode = _ref80.connectionMode,\n    connectionMode = _ref80$connectionMode === void 0 ? ConnectionMode.Strict : _ref80$connectionMode,\n    _ref80$connectionLine = _ref80.connectionLineType,\n    connectionLineType = _ref80$connectionLine === void 0 ? ConnectionLineType.Bezier : _ref80$connectionLine,\n    connectionLineStyle = _ref80.connectionLineStyle,\n    connectionLineComponent = _ref80.connectionLineComponent,\n    connectionLineContainerStyle = _ref80.connectionLineContainerStyle,\n    _ref80$deleteKeyCode = _ref80.deleteKeyCode,\n    deleteKeyCode = _ref80$deleteKeyCode === void 0 ? 'Backspace' : _ref80$deleteKeyCode,\n    _ref80$selectionKeyCo = _ref80.selectionKeyCode,\n    selectionKeyCode = _ref80$selectionKeyCo === void 0 ? 'Shift' : _ref80$selectionKeyCo,\n    _ref80$selectionOnDra = _ref80.selectionOnDrag,\n    selectionOnDrag = _ref80$selectionOnDra === void 0 ? false : _ref80$selectionOnDra,\n    _ref80$selectionMode = _ref80.selectionMode,\n    selectionMode = _ref80$selectionMode === void 0 ? SelectionMode.Full : _ref80$selectionMode,\n    _ref80$panActivationK = _ref80.panActivationKeyCode,\n    panActivationKeyCode = _ref80$panActivationK === void 0 ? 'Space' : _ref80$panActivationK,\n    _ref80$multiSelection = _ref80.multiSelectionKeyCode,\n    multiSelectionKeyCode = _ref80$multiSelection === void 0 ? isMacOs() ? 'Meta' : 'Control' : _ref80$multiSelection,\n    _ref80$zoomActivation = _ref80.zoomActivationKeyCode,\n    zoomActivationKeyCode = _ref80$zoomActivation === void 0 ? isMacOs() ? 'Meta' : 'Control' : _ref80$zoomActivation,\n    _ref80$snapToGrid = _ref80.snapToGrid,\n    snapToGrid = _ref80$snapToGrid === void 0 ? false : _ref80$snapToGrid,\n    _ref80$snapGrid = _ref80.snapGrid,\n    snapGrid = _ref80$snapGrid === void 0 ? initSnapGrid : _ref80$snapGrid,\n    _ref80$onlyRenderVisi = _ref80.onlyRenderVisibleElements,\n    onlyRenderVisibleElements = _ref80$onlyRenderVisi === void 0 ? false : _ref80$onlyRenderVisi,\n    _ref80$selectNodesOnD = _ref80.selectNodesOnDrag,\n    selectNodesOnDrag = _ref80$selectNodesOnD === void 0 ? true : _ref80$selectNodesOnD,\n    nodesDraggable = _ref80.nodesDraggable,\n    nodesConnectable = _ref80.nodesConnectable,\n    nodesFocusable = _ref80.nodesFocusable,\n    _ref80$nodeOrigin = _ref80.nodeOrigin,\n    nodeOrigin = _ref80$nodeOrigin === void 0 ? initNodeOrigin : _ref80$nodeOrigin,\n    edgesFocusable = _ref80.edgesFocusable,\n    edgesUpdatable = _ref80.edgesUpdatable,\n    elementsSelectable = _ref80.elementsSelectable,\n    _ref80$defaultViewpor = _ref80.defaultViewport,\n    defaultViewport = _ref80$defaultViewpor === void 0 ? initDefaultViewport : _ref80$defaultViewpor,\n    _ref80$minZoom = _ref80.minZoom,\n    minZoom = _ref80$minZoom === void 0 ? 0.5 : _ref80$minZoom,\n    _ref80$maxZoom = _ref80.maxZoom,\n    maxZoom = _ref80$maxZoom === void 0 ? 2 : _ref80$maxZoom,\n    _ref80$translateExten = _ref80.translateExtent,\n    translateExtent = _ref80$translateExten === void 0 ? infiniteExtent : _ref80$translateExten,\n    _ref80$preventScrolli = _ref80.preventScrolling,\n    preventScrolling = _ref80$preventScrolli === void 0 ? true : _ref80$preventScrolli,\n    nodeExtent = _ref80.nodeExtent,\n    _ref80$defaultMarkerC = _ref80.defaultMarkerColor,\n    defaultMarkerColor = _ref80$defaultMarkerC === void 0 ? '#b1b1b7' : _ref80$defaultMarkerC,\n    _ref80$zoomOnScroll = _ref80.zoomOnScroll,\n    zoomOnScroll = _ref80$zoomOnScroll === void 0 ? true : _ref80$zoomOnScroll,\n    _ref80$zoomOnPinch = _ref80.zoomOnPinch,\n    zoomOnPinch = _ref80$zoomOnPinch === void 0 ? true : _ref80$zoomOnPinch,\n    _ref80$panOnScroll = _ref80.panOnScroll,\n    panOnScroll = _ref80$panOnScroll === void 0 ? false : _ref80$panOnScroll,\n    _ref80$panOnScrollSpe = _ref80.panOnScrollSpeed,\n    panOnScrollSpeed = _ref80$panOnScrollSpe === void 0 ? 0.5 : _ref80$panOnScrollSpe,\n    _ref80$panOnScrollMod = _ref80.panOnScrollMode,\n    panOnScrollMode = _ref80$panOnScrollMod === void 0 ? PanOnScrollMode.Free : _ref80$panOnScrollMod,\n    _ref80$zoomOnDoubleCl = _ref80.zoomOnDoubleClick,\n    zoomOnDoubleClick = _ref80$zoomOnDoubleCl === void 0 ? true : _ref80$zoomOnDoubleCl,\n    _ref80$panOnDrag = _ref80.panOnDrag,\n    panOnDrag = _ref80$panOnDrag === void 0 ? true : _ref80$panOnDrag,\n    onPaneClick = _ref80.onPaneClick,\n    onPaneMouseEnter = _ref80.onPaneMouseEnter,\n    onPaneMouseMove = _ref80.onPaneMouseMove,\n    onPaneMouseLeave = _ref80.onPaneMouseLeave,\n    onPaneScroll = _ref80.onPaneScroll,\n    onPaneContextMenu = _ref80.onPaneContextMenu,\n    children = _ref80.children,\n    onEdgeUpdate = _ref80.onEdgeUpdate,\n    onEdgeContextMenu = _ref80.onEdgeContextMenu,\n    onEdgeDoubleClick = _ref80.onEdgeDoubleClick,\n    onEdgeMouseEnter = _ref80.onEdgeMouseEnter,\n    onEdgeMouseMove = _ref80.onEdgeMouseMove,\n    onEdgeMouseLeave = _ref80.onEdgeMouseLeave,\n    onEdgeUpdateStart = _ref80.onEdgeUpdateStart,\n    onEdgeUpdateEnd = _ref80.onEdgeUpdateEnd,\n    _ref80$edgeUpdaterRad = _ref80.edgeUpdaterRadius,\n    edgeUpdaterRadius = _ref80$edgeUpdaterRad === void 0 ? 10 : _ref80$edgeUpdaterRad,\n    onNodesChange = _ref80.onNodesChange,\n    onEdgesChange = _ref80.onEdgesChange,\n    _ref80$noDragClassNam = _ref80.noDragClassName,\n    noDragClassName = _ref80$noDragClassNam === void 0 ? 'nodrag' : _ref80$noDragClassNam,\n    _ref80$noWheelClassNa = _ref80.noWheelClassName,\n    noWheelClassName = _ref80$noWheelClassNa === void 0 ? 'nowheel' : _ref80$noWheelClassNa,\n    _ref80$noPanClassName = _ref80.noPanClassName,\n    noPanClassName = _ref80$noPanClassName === void 0 ? 'nopan' : _ref80$noPanClassName,\n    _ref80$fitView = _ref80.fitView,\n    fitView = _ref80$fitView === void 0 ? false : _ref80$fitView,\n    fitViewOptions = _ref80.fitViewOptions,\n    _ref80$connectOnClick = _ref80.connectOnClick,\n    connectOnClick = _ref80$connectOnClick === void 0 ? true : _ref80$connectOnClick,\n    attributionPosition = _ref80.attributionPosition,\n    proOptions = _ref80.proOptions,\n    defaultEdgeOptions = _ref80.defaultEdgeOptions,\n    _ref80$elevateNodesOn = _ref80.elevateNodesOnSelect,\n    elevateNodesOnSelect = _ref80$elevateNodesOn === void 0 ? true : _ref80$elevateNodesOn,\n    _ref80$elevateEdgesOn = _ref80.elevateEdgesOnSelect,\n    elevateEdgesOnSelect = _ref80$elevateEdgesOn === void 0 ? false : _ref80$elevateEdgesOn,\n    _ref80$disableKeyboar = _ref80.disableKeyboardA11y,\n    disableKeyboardA11y = _ref80$disableKeyboar === void 0 ? false : _ref80$disableKeyboar,\n    _ref80$autoPanOnConne = _ref80.autoPanOnConnect,\n    autoPanOnConnect = _ref80$autoPanOnConne === void 0 ? true : _ref80$autoPanOnConne,\n    _ref80$autoPanOnNodeD = _ref80.autoPanOnNodeDrag,\n    autoPanOnNodeDrag = _ref80$autoPanOnNodeD === void 0 ? true : _ref80$autoPanOnNodeD,\n    _ref80$connectionRadi = _ref80.connectionRadius,\n    connectionRadius = _ref80$connectionRadi === void 0 ? 20 : _ref80$connectionRadi,\n    isValidConnection = _ref80.isValidConnection,\n    onError = _ref80.onError,\n    style = _ref80.style,\n    id = _ref80.id,\n    rest = _objectWithoutProperties(_ref80, _excluded5);\n  var rfId = id || '1';\n  return jsx(\"div\", _objectSpread(_objectSpread({}, rest), {}, {\n    style: _objectSpread(_objectSpread({}, style), wrapperStyle),\n    ref: ref,\n    className: cc(['react-flow', className]),\n    \"data-testid\": \"rf__wrapper\",\n    id: id,\n    children: jsxs(Wrapper, {\n      children: [jsx(GraphView$1, {\n        onInit: onInit,\n        onMove: onMove,\n        onMoveStart: onMoveStart,\n        onMoveEnd: onMoveEnd,\n        onNodeClick: onNodeClick,\n        onEdgeClick: onEdgeClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        onNodeDoubleClick: onNodeDoubleClick,\n        nodeTypes: nodeTypes,\n        edgeTypes: edgeTypes,\n        connectionLineType: connectionLineType,\n        connectionLineStyle: connectionLineStyle,\n        connectionLineComponent: connectionLineComponent,\n        connectionLineContainerStyle: connectionLineContainerStyle,\n        selectionKeyCode: selectionKeyCode,\n        selectionOnDrag: selectionOnDrag,\n        selectionMode: selectionMode,\n        deleteKeyCode: deleteKeyCode,\n        multiSelectionKeyCode: multiSelectionKeyCode,\n        panActivationKeyCode: panActivationKeyCode,\n        zoomActivationKeyCode: zoomActivationKeyCode,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        selectNodesOnDrag: selectNodesOnDrag,\n        defaultViewport: defaultViewport,\n        translateExtent: translateExtent,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        preventScrolling: preventScrolling,\n        zoomOnScroll: zoomOnScroll,\n        zoomOnPinch: zoomOnPinch,\n        zoomOnDoubleClick: zoomOnDoubleClick,\n        panOnScroll: panOnScroll,\n        panOnScrollSpeed: panOnScrollSpeed,\n        panOnScrollMode: panOnScrollMode,\n        panOnDrag: panOnDrag,\n        onPaneClick: onPaneClick,\n        onPaneMouseEnter: onPaneMouseEnter,\n        onPaneMouseMove: onPaneMouseMove,\n        onPaneMouseLeave: onPaneMouseLeave,\n        onPaneScroll: onPaneScroll,\n        onPaneContextMenu: onPaneContextMenu,\n        onSelectionContextMenu: onSelectionContextMenu,\n        onSelectionStart: onSelectionStart,\n        onSelectionEnd: onSelectionEnd,\n        onEdgeUpdate: onEdgeUpdate,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noDragClassName: noDragClassName,\n        noWheelClassName: noWheelClassName,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: elevateEdgesOnSelect,\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent\n      }), jsx(StoreUpdater, {\n        nodes: nodes,\n        edges: edges,\n        defaultNodes: defaultNodes,\n        defaultEdges: defaultEdges,\n        onConnect: onConnect,\n        onConnectStart: onConnectStart,\n        onConnectEnd: onConnectEnd,\n        onClickConnectStart: onClickConnectStart,\n        onClickConnectEnd: onClickConnectEnd,\n        nodesDraggable: nodesDraggable,\n        nodesConnectable: nodesConnectable,\n        nodesFocusable: nodesFocusable,\n        edgesFocusable: edgesFocusable,\n        edgesUpdatable: edgesUpdatable,\n        elementsSelectable: elementsSelectable,\n        elevateNodesOnSelect: elevateNodesOnSelect,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        nodeExtent: nodeExtent,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        snapToGrid: snapToGrid,\n        snapGrid: snapGrid,\n        connectionMode: connectionMode,\n        translateExtent: translateExtent,\n        connectOnClick: connectOnClick,\n        defaultEdgeOptions: defaultEdgeOptions,\n        fitView: fitView,\n        fitViewOptions: fitViewOptions,\n        onNodesDelete: onNodesDelete,\n        onEdgesDelete: onEdgesDelete,\n        onNodeDragStart: onNodeDragStart,\n        onNodeDrag: onNodeDrag,\n        onNodeDragStop: onNodeDragStop,\n        onSelectionDrag: onSelectionDrag,\n        onSelectionDragStart: onSelectionDragStart,\n        onSelectionDragStop: onSelectionDragStop,\n        noPanClassName: noPanClassName,\n        nodeOrigin: nodeOrigin,\n        rfId: rfId,\n        autoPanOnConnect: autoPanOnConnect,\n        autoPanOnNodeDrag: autoPanOnNodeDrag,\n        onError: onError,\n        connectionRadius: connectionRadius,\n        isValidConnection: isValidConnection\n      }), jsx(Wrapper$1, {\n        onSelectionChange: onSelectionChange\n      }), children, jsx(Attribution, {\n        proOptions: proOptions,\n        position: attributionPosition\n      }), jsx(A11yDescriptions, {\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  }));\n});\nReactFlow.displayName = 'ReactFlow';\nvar selector$1 = function selector$1(s) {\n  var _s$domNode;\n  return (_s$domNode = s.domNode) === null || _s$domNode === void 0 ? void 0 : _s$domNode.querySelector('.react-flow__edgelabel-renderer');\n};\nfunction EdgeLabelRenderer(_ref81) {\n  var children = _ref81.children;\n  var edgeLabelRenderer = useStore(selector$1);\n  if (!edgeLabelRenderer) {\n    return null;\n  }\n  return createPortal(children, edgeLabelRenderer);\n}\nfunction useUpdateNodeInternals() {\n  var store = useStoreApi();\n  return useCallback(function (id) {\n    var _store$getState39 = store.getState(),\n      domNode = _store$getState39.domNode,\n      updateNodeDimensions = _store$getState39.updateNodeDimensions;\n    var updateIds = Array.isArray(id) ? id : [id];\n    var updates = updateIds.reduce(function (res, updateId) {\n      var nodeElement = domNode === null || domNode === void 0 ? void 0 : domNode.querySelector(\".react-flow__node[data-id=\\\"\".concat(updateId, \"\\\"]\"));\n      if (nodeElement) {\n        res.push({\n          id: updateId,\n          nodeElement: nodeElement,\n          forceUpdate: true\n        });\n      }\n      return res;\n    }, []);\n    requestAnimationFrame(function () {\n      return updateNodeDimensions(updates);\n    });\n  }, []);\n}\nvar nodesSelector = function nodesSelector(state) {\n  return state.getNodes();\n};\nfunction useNodes() {\n  var nodes = useStore(nodesSelector, shallow);\n  return nodes;\n}\nvar edgesSelector = function edgesSelector(state) {\n  return state.edges;\n};\nfunction useEdges() {\n  var edges = useStore(edgesSelector, shallow);\n  return edges;\n}\nvar viewportSelector = function viewportSelector(state) {\n  return {\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2]\n  };\n};\nfunction useViewport() {\n  var viewport = useStore(viewportSelector, shallow);\n  return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n  return function (initialItems) {\n    var _useState11 = useState(initialItems),\n      _useState12 = _slicedToArray(_useState11, 2),\n      items = _useState12[0],\n      setItems = _useState12[1];\n    var onItemsChange = useCallback(function (changes) {\n      return setItems(function (items) {\n        return applyChanges(changes, items);\n      });\n    }, []);\n    return [items, setItems, onItemsChange];\n  };\n}\nvar useNodesState = createUseItemsState(applyNodeChanges);\nvar useEdgesState = createUseItemsState(applyEdgeChanges);\nfunction useOnViewportChange(_ref82) {\n  var onStart = _ref82.onStart,\n    onChange = _ref82.onChange,\n    onEnd = _ref82.onEnd;\n  var store = useStoreApi();\n  useEffect(function () {\n    store.setState({\n      onViewportChangeStart: onStart\n    });\n  }, [onStart]);\n  useEffect(function () {\n    store.setState({\n      onViewportChange: onChange\n    });\n  }, [onChange]);\n  useEffect(function () {\n    store.setState({\n      onViewportChangeEnd: onEnd\n    });\n  }, [onEnd]);\n}\nfunction useOnSelectionChange(_ref83) {\n  var onChange = _ref83.onChange;\n  var store = useStoreApi();\n  useEffect(function () {\n    store.setState({\n      onSelectionChange: onChange\n    });\n  }, [onChange]);\n}\nvar selector = function selector(options) {\n  return function (s) {\n    if (s.nodeInternals.size === 0) {\n      return false;\n    }\n    return s.getNodes().filter(function (n) {\n      return options.includeHiddenNodes ? true : !n.hidden;\n    }).every(function (n) {\n      var _n$internalsSymbol;\n      return ((_n$internalsSymbol = n[internalsSymbol]) === null || _n$internalsSymbol === void 0 ? void 0 : _n$internalsSymbol.handleBounds) !== undefined;\n    });\n  };\n};\nvar defaultOptions = {\n  includeHiddenNodes: false\n};\nfunction useNodesInitialized() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n  var initialized = useStore(selector(options));\n  return initialized;\n}\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };","map":{"version":3,"names":["jsx","jsxs","Fragment","createContext","useContext","useMemo","memo","useRef","useState","useEffect","forwardRef","useCallback","cc","useStoreWithEqualityFn","createWithEqualityFn","shallow","zoomIdentity","zoom","select","pointer","drag","createPortal","StoreContext","Provider$1","Provider","errorMessages","error001","error002","error003","nodeType","concat","error004","error005","error006","error007","id","error009","type","error008","sourceHandle","edge","targetHandle","error010","error011","edgeType","error012","zustandErrorMessage","useStore","selector","equalityFn","store","Error","useStoreApi","getState","setState","subscribe","destroy","selector$g","s","userSelectionActive","Panel","_ref","position","children","className","style","rest","_objectWithoutProperties","_excluded","pointerEvents","positionClasses","split","_objectSpread","_toConsumableArray","Attribution","_ref2","proOptions","_ref2$position","hideAttribution","href","target","rel","EdgeText","_ref3","x","y","label","_ref3$labelStyle","labelStyle","_ref3$labelShowBg","labelShowBg","_ref3$labelBgStyle","labelBgStyle","_ref3$labelBgPadding","labelBgPadding","_ref3$labelBgBorderRa","labelBgBorderRadius","_excluded2","edgeRef","_useState","width","height","_useState2","_slicedToArray","edgeTextBbox","setEdgeTextBbox","edgeTextClasses","current","textBbox","getBBox","transform","visibility","rx","ry","dy","ref","EdgeText$1","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","arguments","length","undefined","max","Math","clampPosition","extent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","bounds","xMovement","yMovement","getHostForElement","element","_element$getRootNode","_window","getRootNode","call","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","_ref4","boxToRect","_ref5","nodeToRect","positionAbsolute","getBoundsOfRects","rect1","rect2","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","process","env","NODE_ENV","console","warn","isReactKeyboardEvent","event","isInputDOMNode","_kbEvent$composedPath","kbEvent","nativeEvent","composedPath","isInput","includes","nodeName","hasAttribute","closest","isMouseEvent","getEventPosition","_event$touches","_event$touches2","_bounds$left","_bounds$top","isMouseTriggered","evtX","clientX","touches","evtY","clientY","left","top","isMacOs","_navigator","navigator","userAgent","indexOf","BaseEdge","_ref6","path","labelX","labelY","markerEnd","markerStart","_ref6$interactionWidt","interactionWidth","d","fill","strokeOpacity","strokeWidth","displayName","getMarkerEnd","markerType","markerEndId","getMouseHandler$1","handler","edges","find","e","getEdgeCenter","_ref7","sourceX","sourceY","targetX","targetY","xOffset","centerX","yOffset","centerY","getBezierEdgeCenter","_ref8","sourceControlX","sourceControlY","targetControlX","targetControlY","offsetX","offsetY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","_ref9","x1","y1","Left","Right","getSimpleBezierPath","_ref10","_ref10$sourcePosition","sourcePosition","Bottom","_ref10$targetPosition","targetPosition","Top","_getControl","_getControl2","_getControl3","_getControl4","_getBezierEdgeCenter","_getBezierEdgeCenter2","SimpleBezierEdge","_ref11","_ref11$sourcePosition","_ref11$targetPosition","_getSimpleBezierPath","_getSimpleBezierPath2","handleDirections","_handleDirections","_defineProperty","getDirection","_ref12","source","_ref12$sourcePosition","distance","a","b","sqrt","pow","getPoints","_ref13","_ref13$sourcePosition","_ref13$targetPosition","center","offset","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","points","sourceGapOffset","targetGapOffset","_getEdgeCenter","_getEdgeCenter2","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","diff","gapOffset","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","flipSourceTarget","sourceGapPoint","targetGapPoint","maxXDistance","maxYDistance","pathPoints","getBend","c","size","bendSize","xDir","yDir","getSmoothStepPath","_ref14","_ref14$sourcePosition","_ref14$targetPosition","_ref14$borderRadius","borderRadius","_ref14$offset","_getPoints","_getPoints2","reduce","res","p","i","segment","SmoothStepEdge","_ref15","_ref15$sourcePosition","_ref15$targetPosition","pathOptions","_getSmoothStepPath","_getSmoothStepPath2","StepEdge","props","_props$pathOptions2","_props$pathOptions","getStraightPath","_ref16","_getEdgeCenter3","_getEdgeCenter4","StraightEdge","_ref17","_getStraightPath","_getStraightPath2","calculateControlOffset","curvature","getControlWithCurvature","_ref18","getBezierPath","_ref19","_ref19$sourcePosition","_ref19$targetPosition","_ref19$curvature","_getControlWithCurvat","_getControlWithCurvat2","_getControlWithCurvat3","_getControlWithCurvat4","_getBezierEdgeCenter3","_getBezierEdgeCenter4","BezierEdge","_ref20","_ref20$sourcePosition","_ref20$targetPosition","_getBezierPath","_getBezierPath2","NodeIdContext","Consumer","useNodeId","nodeId","isEdge","isNode","getOutgoers","nodes","outgoerIds","filter","map","getIncomers","incomersIds","getEdgeId","_ref21","getMarkerId","marker","rfId","idPrefix","Object","keys","sort","key","join","connectionExists","some","el","addEdge","edgeParams","updateEdge","oldEdge","newConnection","options","shouldReplaceId","oldEdgeId","_excluded3","foundEdge","pointToRendererPoint","_ref22","_ref23","snapToGrid","_ref24","_ref25","tx","ty","tScale","_ref26","snapX","snapY","round","rendererPointToPoint","_ref27","_ref28","_ref29","getNodePositionWithOrigin","_node$width","_node$height","nodeOrigin","getRectOfNodes","box","currBox","_getNodePositionWithO","Infinity","getNodesInside","nodeInternals","rect","_ref30","_ref31","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","_node$selectable","selectable","_node$hidden","hidden","_getNodePositionWithO2","nodeRect","overlappingArea","notInitialized","partiallyVisible","area","isVisible","dragging","push","getConnectedEdges","nodeIds","getTransformForBounds","minZoom","maxZoom","padding","xZoom","yZoom","clampedZoom","boundsCenterX","boundsCenterY","getD3Transition","selection","duration","transition","getHandles","handleBounds","currentHandle","h","_node$positionAbsolut","_node$positionAbsolut2","_node$positionAbsolut3","_node$positionAbsolut4","getClosestHandle","doc","connectionRadius","handles","validator","_getEventPosition","domNodes","elementsFromPoint","handleBelow","classList","contains","handleNodeId","getAttribute","handleType","getHandleType","handleId","validHandleResult","handle","closestHandles","minDistance","defaultResult","hasValidHandle","_ref32","isValid","hasTargetHandle","_ref33","_ref34","nullConnection","handleDomNode","connection","endHandle","isValidHandle","connectionMode","fromNodeId","fromHandleId","fromType","isValidConnection","isTarget","handleToCheck","querySelector","result","connectable","connectableEnd","isConnectable","Strict","getHandleLookup","_ref35","sourceHandles","targetHandles","apply","edgeUpdaterType","resetRecentHandle","remove","getConnectionStatus","isInsideConnectionRadius","isHandleValid","connectionStatus","handlePointerDown","_ref36","onConnect","onEdgeUpdateEnd","_getState","domNode","autoPanOnConnect","onConnectStart","panBy","getNodes","cancelConnection","autoPanId","closestHandle","_getEventPosition2","clickedHandle","elementFromPoint","containerBounds","getBoundingClientRect","prevActiveHandle","connectionPosition","autoPanStarted","handleLookup","autoPan","_calcAutoPan","_calcAutoPan2","requestAnimationFrame","connectionNodeId","connectionHandleId","connectionHandleType","connectionStartHandle","connectionEndHandle","onPointerMove","_getState2","_getClosestHandle","add","toggle","onPointerUp","_getState$onConnectEn","_getState3","onConnectEnd","cancelAnimationFrame","removeEventListener","addEventListener","alwaysValid","selector$f","connectOnClick","noPanClassName","connectingSelector","state","startHandle","clickHandle","connectionClickStartHandle","connecting","clickConnecting","Handle","_ref37","_ref37$type","_ref37$position","_ref37$isConnectable","_ref37$isConnectableS","isConnectableStart","_ref37$isConnectableE","isConnectableEnd","onMouseDown","onTouchStart","_excluded4","_useStore","_useStore2","_store$getState$onErr","_store$getState","onError","onConnectExtended","params","_store$getState2","defaultEdgeOptions","onConnectAction","hasDefaultEdges","_store$getState3","setEdges","onPointerDown","button","onClick","_store$getState4","onClickConnectStart","onClickConnectEnd","isValidConnectionStore","isValidConnectionHandler","_isValidHandle","connectablestart","connectableend","connectionindicator","Handle$1","DefaultNode","_ref38","data","_ref38$targetPosition","_ref38$sourcePosition","DefaultNode$1","InputNode","_ref39","_ref39$sourcePosition","InputNode$1","OutputNode","_ref40","_ref40$targetPosition","OutputNode$1","GroupNode","selector$e","selectedNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","_ref41","onSelectionChange","_useStore3","_store$getState$onSel","_store$getState5","changeSelector","Wrapper$1","_ref42","storeHasSelectionChange","selector$d","setNodes","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","setStoreState","useDirectStoreUpdater","StoreUpdater","_ref43","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","edgesUpdatable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","autoPanOnNodeDrag","_useStore4","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$c","ariaLiveMessage","AriaLiveMessage","_ref44","A11yDescriptions","_ref45","disableKeyboardA11y","useKeyPress","keyCode","_useState3","_useState4","keyPressed","setKeyPressed","modifierPressed","pressedKeys","Set","_useMemo","keyCodeArr","Array","isArray","kc","keysFlat","item","_useMemo2","keyCodes","keysToWatch","_options$target","_options$target2","downHandler","ctrlKey","metaKey","shiftKey","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","_options$target3","_options$target4","isUp","every","k","has","eventCode","calculateXYZPosition","_result$x","_result$y","_parentNode$internals","_parentNode$internals2","_result$z","_parentNode$internals3","_parentNode$internals4","_result$z2","parentNode","get","parentNodePosition","z","updateAbsoluteNodePositions","parentNodes","_node$internalsSymbol","_node$internalsSymbol2","_calculateXYZPosition","isParent","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","_currInternals$intern","zIndex","currInternals","internals","defineProperty","enumerable","set","_get","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","isInitialFitView","initial","d3initialized","_options$nodes","includeHiddenNodes","optionNode","nodesInitialized","_options$minZoom","_options$maxZoom","_options$padding","_getTransformForBound","_getTransformForBound2","nextTransform","translate","scale","handleControlledNodeSelectionChange","nodeChanges","change","_objectSpread2","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","_ref46","changedNodes","changedEdges","_get2","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","viewportInitialized","selector$b","useViewportHelper","_useStore5","viewportHelperFunctions","scaleBy","zoomLevel","scaleTo","_transform$x","_transform$y","_transform$zoom","_store$getState$trans","_store$getState$trans2","_store$getState6","nextZoom","_options$padding2","_store$getState7","_getTransformForBound3","_getTransformForBound4","_store$getState8","useReactFlow","viewportHelper","getNode","getEdges","_store$getState9","_store$getState9$edge","getEdge","_store$getState10","_store$getState10$edg","payload","_store$getState11","nextNodes","changes","_store$getState12","_store$getState12$edg","nextEdges","addNodes","_store$getState13","currentNodes","addEdges","_store$getState14","_store$getState14$edg","toObject","_store$getState15","_store$getState15$edg","_transform","viewport","deleteElements","_ref47","nodesDeleted","edgesDeleted","_store$getState16","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","_getNodeRect","_getNodeRect2","currNodeRect","isNodeIntersecting","_getNodeRect3","_getNodeRect4","useGlobalKeyHandler","_ref48","deleteKeyCode","multiSelectionKeyCode","_useReactFlow","deleteKeyPressed","multiSelectionKeyPressed","_store$getState17","nodesSelectionActive","multiSelectionActive","useResizeHandler","rendererNode","resizeObserver","updateDimensions","_store$getState$onErr2","_store$getState18","ResizeObserver","observe","unobserve","containerStyle","viewChanged","prevViewport","eventTransform","eventToFlowTransform","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","wheelDelta","factor","deltaY","deltaMode","selector$a","d3ZoomHandler","ZoomPane","_ref49","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","_ref49$zoomOnScroll","zoomOnScroll","_ref49$zoomOnPinch","zoomOnPinch","_ref49$panOnScroll","panOnScroll","_ref49$panOnScrollSpe","panOnScrollSpeed","_ref49$panOnScrollMod","panOnScrollMode","Free","_ref49$zoomOnDoubleCl","zoomOnDoubleClick","_ref49$panOnDrag","defaultViewport","zoomActivationKeyCode","_ref49$preventScrolli","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","_useStore6","zoomActivationKeyPressed","mouseButton","isPanScrolling","panScrollTimeout","bbox","d3ZoomInstance","scaleExtent","updatedTransform","constrainedTransform","constrain","on","stopImmediatePropagation","currentZoom","property","_isMacOs","point","pinchDelta","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","internal","nextViewport","_store$getState19","onViewportChangeStart","onViewportChange","onViewportChangeEnd","clearTimeout","setTimeout","passive","_event$sourceEvent","_event$sourceEvent2","sourceEvent","_store$getState20","flowTransform","paneDragging","_mouseButton$current","_event$sourceEvent3","_store$getState21","_mouseButton$current2","_store$getState22","zoomScroll","pinchZoom","buttonAllowed","selector$9","userSelectionRect","UserSelection","_useStore7","isActive","handleParentExpand","updateItem","parent","extendWidth","extendHeight","_parent$style$width","_parent$style$height","xDiff","yDiff","applyChanges","elements","initElements","currentChanges","_iterator","_createForOfIteratorHelper","_step","done","currentChange","expandParent","dimensions","updateStyle","resizing","err","f","applyNodeChanges","applyEdgeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","wrapHandler","containerRef","selector$8","Pane","_ref50","isSelecting","_ref50$selectionMode","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","_useStore8","resetUserSelection","resetSelectedElements","onContextMenu","onWheel","_store$getState23","_getEventPosition3","startX","startY","onMouseMove","_userSelectionRect$st","_userSelectionRect$st2","_store$getState24","mousePos","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","onMouseUp","_store$getState25","onMouseLeave","hasActiveSelection","onMouseEnter","isParentSelected","hasSelector","nodeRef","_current","matches","parentElement","getDragItems","from","values","draggable","_n$positionAbsolute$x","_n$positionAbsolute","_n$positionAbsolute$y","_n$positionAbsolute2","delta","clampNodeExtent","calcNextPosition","nextPosition","clampedNodeExtent","currentExtent","_getNodePositionWithO3","parentX","parentY","_getNodePositionWithO4","parentPosition","getEventHandlerParams","_ref51","dragItems","extentedDragItems","getHandleBounds","nodeElement","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","_ref52","_ref52$unselect","unselect","_store$getState26","addSelectedNodes","unselectNodesAndEdges","_nodeRef$current","blur","useGetPointerPosition","getPointerPosition","_ref53","_store$getState27","pointerPos","xSnapped","ySnapped","wrapSelectionDragFunc","selectionFunc","_","useDrag","_ref54","_ref54$disabled","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","_useState5","_useState6","setDragging","lastPos","mousePosition","dragEvent","updateNodes","_ref55","_store$getState28","updateNodePositions","hasChange","nodesBox","adjustedNodeExtent","_n$width","_n$height","updatedPos","onDrag","_getEventHandlerParam","_getEventHandlerParam2","currentNode","_calcAutoPan3","_calcAutoPan4","_lastPos$current$x","_lastPos$current$y","_store$getState29","dragHandler","_store$getState30","onStart","_nodeInternals$get","_getEventHandlerParam3","_getEventHandlerParam4","_store$getState31","_store$getState32","onStop","_getEventHandlerParam5","_getEventHandlerParam6","isDraggable","useUpdateNodePositions","updatePositions","_store$getState33","xVelo","yVelo","isShiftPressed","positionDiffX","positionDiffY","nodeUpdates","_calcNextPosition","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","_ref56","xPos","yPos","xPosOrigin","yPosOrigin","onDoubleClick","isFocusable","dragHandle","initialized","ariaLabel","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","onSelectNodeHandler","onKeyDown","prototype","hasOwnProperty","replace","toLowerCase","currNode","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","tabIndex","role","selector$7","transformString","NodesSelection","_ref58","onSelectionContextMenu","_useStore9","_nodeRef$current2","focus","preventScroll","NodesSelection$1","selector$6","FlowRenderer","_ref59","selectionKeyCode","selectionOnDrag","panActivationKeyCode","_panOnDrag","selectionKeyPressed","panActivationKeyPressed","FlowRenderer$1","useVisibleNodes","onlyRenderVisible","createNodeTypes","nodeTypes","standardTypes","input","default","output","group","wrappedTypes","specialTypes","getPositionWithOrigin","_ref60","origin","selector$5","NodeRenderer","_useStore10","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","_resizeObserverRef$cu","disconnect","_clampedPosition$x","_clampedPosition$y","_node$width2","_node$height2","_node$internalsSymbol3","_node$internalsSymbol4","_node$internalsSymbol5","focusable","clampedPosition","posX","posY","posOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","_ref61","_ref61$radius","radius","onMouseOut","cx","cy","r","stroke","alwaysValidConnection","wrapEdge","EdgeComponent","EdgeWrapper","_ref62","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","isUpdatable","_useState7","_useState8","updateHover","setUpdateHover","_useState9","_useState10","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeClick","_store$getState34","addSelectedEdges","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","_store$getState35","_onEdgeUpdateEnd","evt","onConnectEdge","onEdgeUpdaterSourceMouseDown","onEdgeUpdaterTargetMouseDown","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","_store$getState36","_edgeRef$current","createEdgeTypes","edgeTypes","straight","bezier","step","smoothstep","simplebezier","getHandlePosition","getHandle","getEdgePositions","sourceNodeRect","targetNodeRect","sourceHandlePos","targetHandlePos","isEdgeVisible","_ref63","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","getNodeData","_node$internalsSymbol6","_node$positionAbsolut5","_node$positionAbsolut6","_node$positionAbsolut7","_node$positionAbsolut8","defaultEdgeTree","level","isMaxLevel","groupEdgesByZLevel","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","_sourceNode$internals","_targetNode$internals","targetNode","sourceNode","edgeOrConnectedNodeSelected","selectedZIndex","edgeTree","_ref64","_ref65","useVisibleEdges","ArrowSymbol","_ref66","_ref66$color","color","_ref66$strokeWidth","strokeLinecap","strokeLinejoin","ArrowClosedSymbol","_ref67","_ref67$color","_ref67$strokeWidth","MarkerSymbols","_MarkerSymbols","Arrow","ArrowClosed","useMarkerSymbol","symbol","symbolExists","_store$getState$onErr3","_store$getState37","Marker","_ref68","_ref68$width","_ref68$height","_ref68$markerUnits","markerUnits","_ref68$orient","orient","markerWidth","markerHeight","refX","refY","markerSelector","_ref69","defaultColor","ids","markers","markerId","localeCompare","MarkerDefinitions","_ref70","m","MarkerDefinitions$1","selector$4","EdgeRenderer","_ref71","defaultMarkerColor","_useStore11","_ref72","_targetHandleBounds$t","_targetHandleBounds$s","_getNodeData","_getNodeData2","sourceHandleBounds","sourceIsValid","_getNodeData3","_getNodeData4","targetHandleBounds","targetIsValid","targetNodeHandles","updatable","_getEdgePositions","EdgeRenderer$1","selector$3","Viewport","_ref73","useOnInitHandler","onInit","rfInstance","isInitialized","oppositePosition","_oppositePosition","ConnectionLine","_ref74","_fromNode$internalsSy","_fromNode$width","_fromNode$height","_fromNode$positionAbs","_fromNode$positionAbs2","_fromNode$positionAbs3","_fromNode$positionAbs4","_ref74$type","Bezier","CustomComponent","_useStore12","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","connectionLineType","connectionLineStyle","dAttr","pathParams","_getBezierPath3","_getBezierPath4","Step","_getSmoothStepPath3","_getSmoothStepPath4","SmoothStep","_getSmoothStepPath5","_getSmoothStepPath6","SimpleBezier","_getSimpleBezierPath3","_getSimpleBezierPath4","selector$2","ConnectionLineWrapper","_ref75","component","_useStore13","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","typesKeysRef","typesParsed","typeKeys","_store$getState$onErr4","_store$getState38","GraphView","_ref76","connectionLineComponent","connectionLineContainerStyle","nodeTypesWrapped","edgeTypesWrapped","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","createRFStore","_get3","_get4","_get4$defaultEdgeOpti","_get5","viewportNode","getComputedStyle","_window$DOMMatrixRead","DOMMatrixReadOnly","m22","update","doUpdate","nextFitViewOnInitDone","nodeDragItems","positionChanged","_get6","triggerNodeChanges","_get7","_get8","_get9","edgeId","_ref77","_get10","storeEdges","nodesToUnselect","edgesToUnselect","_get11","_get12","_get$d3Zoom","_get13","_get14","_get15","transformChanged","is","ReactFlowProvider","_ref78","storeRef","Wrapper","_ref79","isWrapped","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","_ref80","_ref80$nodeTypes","_ref80$edgeTypes","_ref80$connectionMode","_ref80$connectionLine","_ref80$deleteKeyCode","_ref80$selectionKeyCo","_ref80$selectionOnDra","_ref80$selectionMode","_ref80$panActivationK","_ref80$multiSelection","_ref80$zoomActivation","_ref80$snapToGrid","_ref80$snapGrid","_ref80$onlyRenderVisi","_ref80$selectNodesOnD","_ref80$nodeOrigin","_ref80$defaultViewpor","_ref80$minZoom","_ref80$maxZoom","_ref80$translateExten","_ref80$preventScrolli","_ref80$defaultMarkerC","_ref80$zoomOnScroll","_ref80$zoomOnPinch","_ref80$panOnScroll","_ref80$panOnScrollSpe","_ref80$panOnScrollMod","_ref80$zoomOnDoubleCl","_ref80$panOnDrag","_ref80$edgeUpdaterRad","_ref80$noDragClassNam","_ref80$noWheelClassNa","_ref80$noPanClassName","_ref80$fitView","_ref80$connectOnClick","attributionPosition","_ref80$elevateNodesOn","_ref80$elevateEdgesOn","_ref80$disableKeyboar","_ref80$autoPanOnConne","_ref80$autoPanOnNodeD","_ref80$connectionRadi","_excluded5","selector$1","_s$domNode","EdgeLabelRenderer","_ref81","edgeLabelRenderer","useUpdateNodeInternals","_store$getState39","updateIds","updateId","nodesSelector","useNodes","edgesSelector","useEdges","viewportSelector","useViewport","createUseItemsState","initialItems","_useState11","_useState12","setItems","onItemsChange","useNodesState","useEdgesState","useOnViewportChange","_ref82","onChange","onEnd","useOnSelectionChange","_ref83","_n$internalsSymbol","defaultOptions","useNodesInitialized"],"sources":["/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/Prashant_Kumar_technical_assessment/frontend/node_modules/@reactflow/core/dist/esm/index.js"],"sourcesContent":["import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n    error012: (id) => `Node with id \"${id}\" does not exist, it may have been removed. This can happen when a node is deleted before the \"onNodeClick\" handler is called.`,\n};\n\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n        destroy: store.destroy,\n    }), [store]);\n};\n\nconst selector$g = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position, children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$g);\n    const positionClasses = `${position}`.split('-');\n    return (jsx(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest, children: children }));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (jsx(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\", children: jsx(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\", children: \"React Flow\" }) }));\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\n    const edgeRef = useRef(null);\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    useEffect(() => {\n        if (edgeRef.current) {\n            const textBbox = edgeRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (jsxs(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest, children: [labelShowBg && (jsx(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })), jsx(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle, children: label }), children] }));\n};\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1]),\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, 50) / 50;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, 50) / 50;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n    const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n    const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n    return [xMovement, yMovement];\n};\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node) => ({\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\n    width: node.width || 0,\n    height: node.height || 0,\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n    // using composed path for handling shadow dom\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\n    const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouseTriggered = isMouseEvent(event);\n    const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\nconst isMacOs = () => typeof navigator !== 'undefined' && navigator?.userAgent?.indexOf('Mac') >= 0;\n\nconst BaseEdge = ({ id, path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\n    return (jsxs(Fragment, { children: [jsx(\"path\", { id: id, style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }), interactionWidth && (jsx(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })), label && isNumeric(labelX) && isNumeric(labelY) ? (jsx(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null] }));\n};\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\n        return `url(#${markerEndId})`;\n    }\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const edge = getState().edges.find((e) => e.id === id);\n            if (edge) {\n                handler(event, { ...edge });\n            }\n        };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSimpleBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const sourceGapOffset = { x: 0, y: 0 };\n    const targetGapOffset = { x: 0, y: 0 };\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x || defaultCenterX;\n        centerY = center.y || defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        if (sourcePosition === targetPosition) {\n            const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n            // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n            if (diff <= offset) {\n                const gapOffset = Math.min(offset - 1, offset - diff);\n                if (sourceDir[dirAccessor] === currDir) {\n                    sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n                else {\n                    targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n            }\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        const sourceGapPoint = { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y };\n        const targetGapPoint = { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y };\n        const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n        const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n        // we want to place the label on the longest segment of the edge\n        if (maxXDistance >= maxYDistance) {\n            centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n            centerY = points[0].y;\n        }\n        else {\n            centerX = points[0].x;\n            centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n        }\n    }\n    const pathPoints = [\n        source,\n        { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y },\n        ...points,\n        { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y },\n        target,\n    ];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSmoothStepPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        borderRadius: pathOptions?.borderRadius,\n        offset: pathOptions?.offset,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (jsx(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        curvature: pathOptions?.curvature,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\n    return nodes.filter((n) => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\n    return nodes.filter((n) => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n    if (typeof marker === 'undefined') {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = rfId ? `${rfId}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdge(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdgeId);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    if (snapToGrid) {\n        return {\n            x: snapX * Math.round(position.x / snapX),\n            y: snapY * Math.round(position.y / snapY),\n        };\n    }\n    return position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    if (!node) {\n        return {\n            x: 0,\n            y: 0,\n            positionAbsolute: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\n    const position = {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n    return {\n        ...position,\n        positionAbsolute: node.positionAbsolute\n            ? {\n                x: node.positionAbsolute.x - offsetX,\n                y: node.positionAbsolute.y - offsetY,\n            }\n            : position,\n    };\n};\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return getBoundsOfBoxes(currBox, rectToBox({\n            x,\n            y,\n            width: node.width || 0,\n            height: node.height || 0,\n        }));\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n    const paneRect = {\n        x: (rect.x - tx) / tScale,\n        y: (rect.y - ty) / tScale,\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    nodeInternals.forEach((node) => {\n        const { width, height, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            return false;\n        }\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\n        const nodeRect = {\n            x: positionAbsolute.x,\n            y: positionAbsolute.y,\n            width: width || 0,\n            height: height || 0,\n        };\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n        const partiallyVisible = partially && overlappingArea > 0;\n        const area = (width || 0) * (height || 0);\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    });\n    return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = nodes.map((node) => node.id);\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return [x, y, clampedZoom];\n};\nconst getD3Transition = (selection, duration = 0) => {\n    return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n    return (handleBounds[type] || []).reduce((res, h) => {\n        if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n            res.push({\n                id: h.id || null,\n                type,\n                nodeId: node.id,\n                x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n                y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2,\n            });\n        }\n        return res;\n    }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n    // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n    // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n    const { x, y } = getEventPosition(event);\n    const domNodes = doc.elementsFromPoint(x, y);\n    const handleBelow = domNodes.find((el) => el.classList.contains('react-flow__handle'));\n    if (handleBelow) {\n        const handleNodeId = handleBelow.getAttribute('data-nodeid');\n        if (handleNodeId) {\n            const handleType = getHandleType(undefined, handleBelow);\n            const handleId = handleBelow.getAttribute('data-handleid');\n            const validHandleResult = validator({ nodeId: handleNodeId, id: handleId, type: handleType });\n            if (validHandleResult) {\n                return {\n                    handle: {\n                        id: handleId,\n                        type: handleType,\n                        nodeId: handleNodeId,\n                        x: pos.x,\n                        y: pos.y,\n                    },\n                    validHandleResult,\n                };\n            }\n        }\n    }\n    // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n    let closestHandles = [];\n    let minDistance = Infinity;\n    handles.forEach((handle) => {\n        const distance = Math.sqrt((handle.x - pos.x) ** 2 + (handle.y - pos.y) ** 2);\n        if (distance <= connectionRadius) {\n            const validHandleResult = validator(handle);\n            if (distance <= minDistance) {\n                if (distance < minDistance) {\n                    closestHandles = [{ handle, validHandleResult }];\n                }\n                else if (distance === minDistance) {\n                    // when multiple handles are on the same distance we collect all of them\n                    closestHandles.push({\n                        handle,\n                        validHandleResult,\n                    });\n                }\n                minDistance = distance;\n            }\n        }\n    });\n    if (!closestHandles.length) {\n        return { handle: null, validHandleResult: defaultResult() };\n    }\n    if (closestHandles.length === 1) {\n        return closestHandles[0];\n    }\n    const hasValidHandle = closestHandles.some(({ validHandleResult }) => validHandleResult.isValid);\n    const hasTargetHandle = closestHandles.some(({ handle }) => handle.type === 'target');\n    // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n    return (closestHandles.find(({ handle, validHandleResult }) => hasTargetHandle ? handle.type === 'target' : (hasValidHandle ? validHandleResult.isValid : true)) || closestHandles[0]);\n}\nconst nullConnection = { source: null, target: null, sourceHandle: null, targetHandle: null };\nconst defaultResult = () => ({\n    handleDomNode: null,\n    isValid: false,\n    connection: nullConnection,\n    endHandle: null,\n});\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n    const isTarget = fromType === 'target';\n    const handleToCheck = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n    const result = {\n        ...defaultResult(),\n        handleDomNode: handleToCheck,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        if (isValid) {\n            result.endHandle = {\n                nodeId: handleNodeId,\n                handleId,\n                type: handleType,\n            };\n            result.isValid = isValidConnection(connection);\n        }\n    }\n    return result;\n}\nfunction getHandleLookup({ nodes, nodeId, handleId, handleType }) {\n    return nodes.reduce((res, node) => {\n        if (node[internalsSymbol]) {\n            const { handleBounds } = node[internalsSymbol];\n            let sourceHandles = [];\n            let targetHandles = [];\n            if (handleBounds) {\n                sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n                targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n            }\n            res.push(...sourceHandles, ...targetHandles);\n        }\n        return res;\n    }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n    handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n    let connectionStatus = null;\n    if (isHandleValid) {\n        connectionStatus = 'valid';\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        connectionStatus = 'invalid';\n    }\n    return connectionStatus;\n}\n\nfunction handlePointerDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, edgeUpdaterType, onEdgeUpdateEnd, }) {\n    // when react-flow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    const { connectionMode, domNode, autoPanOnConnect, connectionRadius, onConnectStart, panBy, getNodes, cancelConnection, } = getState();\n    let autoPanId = 0;\n    let closestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    let prevActiveHandle;\n    let connectionPosition = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    const handleLookup = getHandleLookup({\n        nodes: getNodes(),\n        nodeId,\n        handleId,\n        handleType,\n    });\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    const autoPan = () => {\n        if (!autoPanOnConnect) {\n            return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n        panBy({ x: xMovement, y: yMovement });\n        autoPanId = requestAnimationFrame(autoPan);\n    };\n    setState({\n        connectionPosition,\n        connectionStatus: null,\n        // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n        connectionNodeId: nodeId,\n        connectionHandleId: handleId,\n        connectionHandleType: handleType,\n        connectionStartHandle: {\n            nodeId,\n            handleId,\n            type: handleType,\n        },\n        connectionEndHandle: null,\n    });\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        const { transform } = getState();\n        connectionPosition = getEventPosition(event, containerBounds);\n        const { handle, validHandleResult } = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, (handle) => isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc));\n        closestHandle = handle;\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        handleDomNode = validHandleResult.handleDomNode;\n        connection = validHandleResult.connection;\n        isValid = validHandleResult.isValid;\n        setState({\n            connectionPosition: closestHandle && isValid\n                ? rendererPointToPoint({\n                    x: closestHandle.x,\n                    y: closestHandle.y,\n                }, transform)\n                : connectionPosition,\n            connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n            connectionEndHandle: validHandleResult.endHandle,\n        });\n        if (!closestHandle && !isValid && !handleDomNode) {\n            return resetRecentHandle(prevActiveHandle);\n        }\n        if (connection.source !== connection.target && handleDomNode) {\n            resetRecentHandle(prevActiveHandle);\n            prevActiveHandle = handleDomNode;\n            // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n            handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n            handleDomNode.classList.toggle('valid', isValid);\n            handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n        }\n    }\n    function onPointerUp(event) {\n        if ((closestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        getState().onConnectEnd?.(event);\n        if (edgeUpdaterType) {\n            onEdgeUpdateEnd?.(event);\n        }\n        resetRecentHandle(prevActiveHandle);\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n\nconst alwaysValid = () => true;\nconst selector$f = (s) => ({\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n});\nconst connectingSelector = (nodeId, handleId, type) => (state) => {\n    const { connectionStartHandle: startHandle, connectionEndHandle: endHandle, connectionClickStartHandle: clickHandle, } = state;\n    return {\n        connecting: (startHandle?.nodeId === nodeId && startHandle?.handleId === handleId && startHandle?.type === type) ||\n            (endHandle?.nodeId === nodeId && endHandle?.handleId === handleId && endHandle?.type === type),\n        clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.handleId === handleId && clickHandle?.type === type,\n    };\n};\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, isConnectableStart = true, isConnectableEnd = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) => {\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    const { connectOnClick, noPanClassName } = useStore(selector$f, shallow);\n    const { connecting, clickConnecting } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['error010']());\n    }\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        if (!nodeId) {\n            return;\n        }\n        const isMouseTriggered = isMouseEvent(event);\n        if (isConnectableStart && ((isMouseTriggered && event.button === 0) || !isMouseTriggered)) {\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectExtended,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionClickStartHandle, connectionMode, isValidConnection: isValidConnectionStore, } = store.getState();\n        if (!nodeId || (!connectionClickStartHandle && !isConnectableStart)) {\n            return;\n        }\n        if (!connectionClickStartHandle) {\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\n            store.setState({ connectionClickStartHandle: { nodeId, type, handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n        const { connection, isValid } = isValidHandle({\n            nodeId,\n            id: handleId,\n            type,\n        }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n        if (isValid) {\n            onConnectExtended(connection);\n        }\n        onClickConnectEnd?.(event);\n        store.setState({ connectionClickStartHandle: null });\n    };\n    return (jsx(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connectablestart: isConnectableStart,\n                connectableend: isConnectableEnd,\n                connecting: clickConnecting,\n                // this class is used to style the handle when the user is connecting\n                connectionindicator: isConnectable && ((isConnectableStart && !connecting) || (isConnectableEnd && connecting)),\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest, children: children }));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\n    return (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (jsxs(Fragment, { children: [data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label] }));\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\n\nconst selector$e = (s) => ({\n    selectedNodes: s.getNodes().filter((n) => n.selected),\n    selectedEdges: s.edges.filter((e) => e.selected),\n});\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({ onSelectionChange }) => {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$e, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChange?.(params);\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = (s) => !!s.onSelectionChange;\nfunction Wrapper$1({ onSelectionChange }) {\n    const storeHasSelectionChange = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChange) {\n        return jsx(SelectionListener, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst selector$d = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n});\nfunction useStoreUpdater(value, setStoreState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setStoreState(value);\n        }\n    }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setState({ [key]: value });\n        }\n    }, [value]);\n}\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, edgesUpdatable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, autoPanOnConnect, autoPanOnNodeDrag, onError, connectionRadius, isValidConnection, }) => {\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$d, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n        return () => {\n            reset();\n        };\n    }, []);\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n    useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n    useDirectStoreUpdater('rfId', rfId, store.setState);\n    useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n    useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n    useDirectStoreUpdater('onError', onError, store.setState);\n    useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n    useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n    useStoreUpdater(nodes, setNodes);\n    useStoreUpdater(edges, setEdges);\n    useStoreUpdater(minZoom, setMinZoom);\n    useStoreUpdater(maxZoom, setMaxZoom);\n    useStoreUpdater(translateExtent, setTranslateExtent);\n    useStoreUpdater(nodeExtent, setNodeExtent);\n    return null;\n};\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$c);\n    return (jsx(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle, children: ariaLiveMessage }));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (jsxs(Fragment, { children: [jsxs(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style, children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '] }), jsx(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\" }), !disableKeyboardA11y && jsx(AriaLiveMessage, { rfId: rfId })] }));\n}\n\nconst doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilities. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = { target: doc }) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n                if (event.key === 'Meta') {\n                    pressedKeys.current.clear();\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            options?.target?.addEventListener('keydown', downHandler);\n            options?.target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            return () => {\n                options?.target?.removeEventListener('keydown', downHandler);\n                options?.target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n    if (!node.parentNode) {\n        return result;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n    return calculateXYZPosition(parentNode, nodeInternals, {\n        x: (result.x ?? 0) + parentNodePosition.x,\n        y: (result.y ?? 0) + parentNodePosition.y,\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\n    }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n    nodeInternals.forEach((node) => {\n        if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n            throw new Error(`Parent node ${node.parentNode} not found`);\n        }\n        if (node.parentNode || parentNodes?.[node.id]) {\n            const { x, y, z } = calculateXYZPosition(node, nodeInternals, {\n                ...node.position,\n                z: node[internalsSymbol]?.z ?? 0,\n            }, nodeOrigin);\n            node.positionAbsolute = {\n                x,\n                y,\n            };\n            node[internalsSymbol].z = z;\n            if (parentNodes?.[node.id]) {\n                node[internalsSymbol].isParent = true;\n            }\n        }\n    });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n    const nextNodeInternals = new Map();\n    const parentNodes = {};\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    nodes.forEach((node) => {\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n        const currInternals = nodeInternals.get(node.id);\n        const internals = {\n            width: currInternals?.width,\n            height: currInternals?.height,\n            ...node,\n            positionAbsolute: {\n                x: node.position.x,\n                y: node.position.y,\n            },\n        };\n        if (node.parentNode) {\n            internals.parentNode = node.parentNode;\n            parentNodes[node.parentNode] = true;\n        }\n        Object.defineProperty(internals, internalsSymbol, {\n            enumerable: false,\n            value: {\n                handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\n                z,\n            },\n        });\n        nextNodeInternals.set(node.id, internals);\n    });\n    updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n    return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\n    const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n    const d3initialized = d3Zoom && d3Selection;\n    if (d3initialized && (isInitialFitView || !options.initial)) {\n        const nodes = getNodes().filter((n) => {\n            const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n            if (options.nodes?.length) {\n                return isVisible && options.nodes.some((optionNode) => optionNode.id === n.id);\n            }\n            return isVisible;\n        });\n        const nodesInitialized = nodes.every((n) => n.width && n.height);\n        if (nodes.length > 0 && nodesInitialized) {\n            const bounds = getRectOfNodes(nodes, nodeOrigin);\n            const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n            const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n            if (typeof options.duration === 'number' && options.duration > 0) {\n                d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n            }\n            else {\n                d3Zoom.transform(d3Selection, nextTransform);\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n    nodeChanges.forEach((change) => {\n        const node = nodeInternals.get(change.id);\n        if (node) {\n            nodeInternals.set(node.id, {\n                ...node,\n                [internalsSymbol]: node[internalsSymbol],\n                selected: change.selected,\n            });\n        }\n    });\n    return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n    return edges.map((e) => {\n        const change = edgeChanges.find((change) => change.id === e.id);\n        if (change) {\n            e.selected = change.selected;\n        }\n        return e;\n    });\n}\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\n    if (changedNodes?.length) {\n        if (hasDefaultNodes) {\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\n        }\n        onNodesChange?.(changedNodes);\n    }\n    if (changedEdges?.length) {\n        if (hasDefaultEdges) {\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\n        }\n        onEdgesChange?.(changedEdges);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst initialViewportHelper = {\n    zoomIn: noop,\n    zoomOut: noop,\n    zoomTo: noop,\n    getZoom: () => 1,\n    setViewport: noop,\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\n    fitView: () => false,\n    setCenter: noop,\n    fitBounds: noop,\n    project: (position) => position,\n    viewportInitialized: false,\n};\nconst selector$b = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n});\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    const { d3Zoom, d3Selection } = useStore(selector$b, shallow);\n    const viewportHelperFunctions = useMemo(() => {\n        if (d3Selection && d3Zoom) {\n            return {\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n                getZoom: () => store.getState().transform[2],\n                setViewport: (transform, options) => {\n                    const [x, y, zoom] = store.getState().transform;\n                    const nextTransform = zoomIdentity\n                        .translate(transform.x ?? x, transform.y ?? y)\n                        .scale(transform.zoom ?? zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n                },\n                getViewport: () => {\n                    const [x, y, zoom] = store.getState().transform;\n                    return { x, y, zoom };\n                },\n                fitView: (options) => fitView(store.getState, options),\n                setCenter: (x, y, options) => {\n                    const { width, height, maxZoom } = store.getState();\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                    const centerX = width / 2 - x * nextZoom;\n                    const centerY = height / 2 - y * nextZoom;\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                fitBounds: (bounds, options) => {\n                    const { width, height, minZoom, maxZoom } = store.getState();\n                    const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                project: (position) => {\n                    const { transform, snapToGrid, snapGrid } = store.getState();\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n                },\n                viewportInitialized: true,\n            };\n        }\n        return initialViewportHelper;\n    }, [d3Zoom, d3Selection]);\n    return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const getNodes = useCallback(() => {\n        return store\n            .getState()\n            .getNodes()\n            .map((n) => ({ ...n }));\n    }, []);\n    const getNode = useCallback((id) => {\n        return store.getState().nodeInternals.get(id);\n    }, []);\n    const getEdges = useCallback(() => {\n        const { edges = [] } = store.getState();\n        return edges.map((e) => ({ ...e }));\n    }, []);\n    const getEdge = useCallback((id) => {\n        const { edges = [] } = store.getState();\n        return edges.find((e) => e.id === id);\n    }, []);\n    const setNodes = useCallback((payload) => {\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        const nodes = getNodes();\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n        if (hasDefaultNodes) {\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nextNodes.length === 0\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const setEdges = useCallback((payload) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n        if (hasDefaultEdges) {\n            setEdges(nextEdges);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.length === 0\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const addNodes = useCallback((payload) => {\n        const nodes = Array.isArray(payload) ? payload : [payload];\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        if (hasDefaultNodes) {\n            const currentNodes = getNodes();\n            const nextNodes = [...currentNodes, ...nodes];\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const addEdges = useCallback((payload) => {\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        if (hasDefaultEdges) {\n            setEdges([...edges, ...nextEdges]);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const toObject = useCallback(() => {\n        const { getNodes, edges = [], transform } = store.getState();\n        const [x, y, zoom] = transform;\n        return {\n            nodes: getNodes().map((n) => ({ ...n })),\n            edges: edges.map((e) => ({ ...e })),\n            viewport: {\n                x,\n                y,\n                zoom,\n            },\n        };\n    }, []);\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\n        const nodesToRemove = getNodes().reduce((res, node) => {\n            const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find((n) => n.id === node.parentNode);\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n                res.push(node);\n            }\n            return res;\n        }, []);\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\n        if (nodesToRemove || initialHitEdges) {\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n                if (!res.includes(edge.id)) {\n                    res.push(edge.id);\n                }\n                return res;\n            }, []);\n            if (hasDefaultEdges || hasDefaultNodes) {\n                if (hasDefaultEdges) {\n                    store.setState({\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\n                    });\n                }\n                if (hasDefaultNodes) {\n                    nodesToRemove.forEach((node) => {\n                        nodeInternals.delete(node.id);\n                    });\n                    store.setState({\n                        nodeInternals: new Map(nodeInternals),\n                    });\n                }\n            }\n            if (edgeIdsToRemove.length > 0) {\n                onEdgesDelete?.(edgesToRemove);\n                if (onEdgesChange) {\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\n                        id,\n                        type: 'remove',\n                    })));\n                }\n            }\n            if (nodesToRemove.length > 0) {\n                onNodesDelete?.(nodesToRemove);\n                if (onNodesChange) {\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\n                    onNodesChange(nodeChanges);\n                }\n            }\n        }\n    }, []);\n    const getNodeRect = useCallback((nodeOrRect) => {\n        const isRect = isRectObject(nodeOrRect);\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n        return [nodeRect, node, isRect];\n    }, []);\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return [];\n        }\n        return (nodes || store.getState().getNodes()).filter((n) => {\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n                return false;\n            }\n            const currNodeRect = nodeToRect(n);\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n        });\n    }, []);\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n        const [nodeRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return false;\n        }\n        const overlappingArea = getOverlappingArea(nodeRect, area);\n        const partiallyVisible = partially && overlappingArea > 0;\n        return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    }, []);\n    return useMemo(() => {\n        return {\n            ...viewportHelper,\n            getNodes,\n            getNode,\n            getEdges,\n            getEdge,\n            setNodes,\n            setEdges,\n            addNodes,\n            addEdges,\n            toObject,\n            deleteElements,\n            getIntersectingNodes,\n            isNodeIntersecting,\n        };\n    }, [\n        viewportHelper,\n        getNodes,\n        getNode,\n        getEdges,\n        getEdge,\n        setNodes,\n        setEdges,\n        addNodes,\n        addEdges,\n        toObject,\n        deleteElements,\n        getIntersectingNodes,\n        isNodeIntersecting,\n    ]);\n}\n\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, getNodes } = store.getState();\n            const selectedNodes = getNodes().filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n};\n\nfunction useResizeHandler(rendererNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        let resizeObserver;\n        const updateDimensions = () => {\n            if (!rendererNode.current) {\n                return;\n            }\n            const size = getDimensions(rendererNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['error004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        updateDimensions();\n        window.addEventListener('resize', updateDimensions);\n        if (rendererNode.current) {\n            resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(rendererNode.current);\n        }\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n            if (resizeObserver && rendererNode.current) {\n                resizeObserver.unobserve(rendererNode.current);\n            }\n        };\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\nconst viewChanged = (prevViewport, eventTransform) => prevViewport.x !== eventTransform.x || prevViewport.y !== eventTransform.y || prevViewport.zoom !== eventTransform.k;\nconst eventToFlowTransform = (eventTransform) => ({\n    x: eventTransform.x,\n    y: eventTransform.y,\n    zoom: eventTransform.k,\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst wheelDelta = (event) => {\n    const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\nconst selector$a = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive,\n});\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\n    const timerId = useRef();\n    const store = useStoreApi();\n    const isZoomingOrPanning = useRef(false);\n    const zoomedWithRightMouseButton = useRef(false);\n    const zoomPane = useRef(null);\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$a, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const mouseButton = useRef(0);\n    const isPanScrolling = useRef(false);\n    const panScrollTimeout = useRef();\n    useResizeHandler(zoomPane);\n    useEffect(() => {\n        if (zoomPane.current) {\n            const bbox = zoomPane.current.getBoundingClientRect();\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\n            const updatedTransform = zoomIdentity\n                .translate(defaultViewport.x, defaultViewport.y)\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n            const extent = [\n                [0, 0],\n                [bbox.width, bbox.height],\n            ];\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n            d3ZoomInstance.transform(selection, constrainedTransform);\n            d3ZoomInstance.wheelDelta(wheelDelta);\n            store.setState({\n                d3Zoom: d3ZoomInstance,\n                d3Selection: selection,\n                d3ZoomHandler: selection.on('wheel.zoom'),\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n        }\n    }, []);\n    useEffect(() => {\n        if (d3Selection && d3Zoom) {\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n                d3Selection.on('wheel.zoom', (event) => {\n                    if (isWrappedWithClass(event, noWheelClassName)) {\n                        return false;\n                    }\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\n                    const _isMacOs = isMacOs();\n                    // macos sets ctrlKey=true for pinch gesture on a trackpad\n                    if (event.ctrlKey && zoomOnPinch && _isMacOs) {\n                        const point = pointer(event);\n                        const pinchDelta = wheelDelta(event);\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\n                        // @ts-ignore\n                        d3Zoom.scaleTo(d3Selection, zoom, point, event);\n                        return;\n                    }\n                    // increase scroll speed in firefox\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n                    let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n                    let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n                    // this enables vertical scrolling with shift + scroll on windows\n                    if (!_isMacOs && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n                        deltaX = event.deltaY * deltaNormalize;\n                        deltaY = 0;\n                    }\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed, \n                    // @ts-ignore\n                    { internal: true });\n                    const nextViewport = eventToFlowTransform(d3Selection.property('__zoom'));\n                    const { onViewportChangeStart, onViewportChange, onViewportChangeEnd } = store.getState();\n                    clearTimeout(panScrollTimeout.current);\n                    // for pan on scroll we need to handle the event calls on our own\n                    // we can't use the start, zoom and end events from d3-zoom\n                    // because start and move gets called on every scroll event and not once at the beginning\n                    if (!isPanScrolling.current) {\n                        isPanScrolling.current = true;\n                        onMoveStart?.(event, nextViewport);\n                        onViewportChangeStart?.(nextViewport);\n                    }\n                    if (isPanScrolling.current) {\n                        onMove?.(event, nextViewport);\n                        onViewportChange?.(nextViewport);\n                        panScrollTimeout.current = setTimeout(() => {\n                            onMoveEnd?.(event, nextViewport);\n                            onViewportChangeEnd?.(nextViewport);\n                            isPanScrolling.current = false;\n                        }, 150);\n                    }\n                }, { passive: false });\n            }\n            else if (typeof d3ZoomHandler !== 'undefined') {\n                d3Selection.on('wheel.zoom', function (event, d) {\n                    if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n                        return null;\n                    }\n                    event.preventDefault();\n                    d3ZoomHandler.call(this, event, d);\n                }, { passive: false });\n            }\n        }\n    }, [\n        userSelectionActive,\n        panOnScroll,\n        panOnScrollMode,\n        d3Selection,\n        d3Zoom,\n        d3ZoomHandler,\n        zoomActivationKeyPressed,\n        zoomOnPinch,\n        preventScrolling,\n        noWheelClassName,\n        onMoveStart,\n        onMove,\n        onMoveEnd,\n    ]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('start', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                // we need to remember it here, because it's always 0 in the \"zoom\" event\n                mouseButton.current = event.sourceEvent?.button;\n                const { onViewportChangeStart } = store.getState();\n                const flowTransform = eventToFlowTransform(event.transform);\n                isZoomingOrPanning.current = true;\n                prevTransform.current = flowTransform;\n                if (event.sourceEvent?.type === 'mousedown') {\n                    store.setState({ paneDragging: true });\n                }\n                onViewportChangeStart?.(flowTransform);\n                onMoveStart?.(event.sourceEvent, flowTransform);\n            });\n        }\n    }, [d3Zoom, onMoveStart]);\n    useEffect(() => {\n        if (d3Zoom) {\n            if (userSelectionActive && !isZoomingOrPanning.current) {\n                d3Zoom.on('zoom', null);\n            }\n            else if (!userSelectionActive) {\n                d3Zoom.on('zoom', (event) => {\n                    const { onViewportChange } = store.getState();\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n                    if ((onMove || onViewportChange) && !event.sourceEvent?.internal) {\n                        const flowTransform = eventToFlowTransform(event.transform);\n                        onViewportChange?.(flowTransform);\n                        onMove?.(event.sourceEvent, flowTransform);\n                    }\n                });\n            }\n        }\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('end', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                const { onViewportChangeEnd } = store.getState();\n                isZoomingOrPanning.current = false;\n                store.setState({ paneDragging: false });\n                if (onPaneContextMenu &&\n                    isRightClickPan(panOnDrag, mouseButton.current ?? 0) &&\n                    !zoomedWithRightMouseButton.current) {\n                    onPaneContextMenu(event.sourceEvent);\n                }\n                zoomedWithRightMouseButton.current = false;\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    clearTimeout(timerId.current);\n                    timerId.current = setTimeout(() => {\n                        onViewportChangeEnd?.(flowTransform);\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\n                    }, panOnScroll ? 150 : 0);\n                }\n            });\n        }\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.filter((event) => {\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\n                if (event.button === 1 &&\n                    event.type === 'mousedown' &&\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n                    return true;\n                }\n                // if all interactions are disabled, we prevent all zoom events\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n                    return false;\n                }\n                // during a selection we prevent all other interactions\n                if (userSelectionActive) {\n                    return false;\n                }\n                // if zoom on double click is disabled, we prevent the double click event\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\n                    return false;\n                }\n                // if the target element is inside an element with the nowheel class, we prevent zooming\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n                    return false;\n                }\n                // if the target element is inside an element with the nopan class, we prevent panning\n                if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n                    return false;\n                }\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n                    return false;\n                }\n                // when there is no scroll handling enabled, we prevent all wheel events\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n                    return false;\n                }\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // if the pane is only movable using allowed clicks\n                if (Array.isArray(panOnDrag) &&\n                    !panOnDrag.includes(event.button) &&\n                    (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // We only allow right clicks if pan on drag is set to right click\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n                // default filter for d3-zoom\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n            });\n        }\n    }, [\n        userSelectionActive,\n        d3Zoom,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        zoomOnDoubleClick,\n        panOnDrag,\n        elementsSelectable,\n        zoomActivationKeyPressed,\n    ]);\n    return (jsx(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle, children: children }));\n};\n\nconst selector$9 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$9, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (jsx(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nfunction handleParentExpand(res, updateItem) {\n    const parent = res.find((e) => e.id === updateItem.parentNode);\n    if (parent) {\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n            parent.style = { ...parent.style } || {};\n            parent.style.width = parent.style.width ?? parent.width;\n            parent.style.height = parent.style.height ?? parent.height;\n            if (extendWidth > 0) {\n                parent.style.width += extendWidth;\n            }\n            if (extendHeight > 0) {\n                parent.style.height += extendHeight;\n            }\n            if (updateItem.position.x < 0) {\n                const xDiff = Math.abs(updateItem.position.x);\n                parent.position.x = parent.position.x - xDiff;\n                parent.style.width += xDiff;\n                updateItem.position.x = 0;\n            }\n            if (updateItem.position.y < 0) {\n                const yDiff = Math.abs(updateItem.position.y);\n                parent.position.y = parent.position.y - yDiff;\n                parent.style.height += yDiff;\n                updateItem.position.y = 0;\n            }\n            parent.width = parent.style.width;\n            parent.height = parent.style.height;\n        }\n    }\n}\nfunction applyChanges(changes, elements) {\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n    if (changes.some((c) => c.type === 'reset')) {\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\n    }\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\n    return elements.reduce((res, item) => {\n        const currentChanges = changes.filter((c) => c.id === item.id);\n        if (currentChanges.length === 0) {\n            res.push(item);\n            return res;\n        }\n        const updateItem = { ...item };\n        for (const currentChange of currentChanges) {\n            if (currentChange) {\n                switch (currentChange.type) {\n                    case 'select': {\n                        updateItem.selected = currentChange.selected;\n                        break;\n                    }\n                    case 'position': {\n                        if (typeof currentChange.position !== 'undefined') {\n                            updateItem.position = currentChange.position;\n                        }\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\n                        }\n                        if (typeof currentChange.dragging !== 'undefined') {\n                            updateItem.dragging = currentChange.dragging;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'dimensions': {\n                        if (typeof currentChange.dimensions !== 'undefined') {\n                            updateItem.width = currentChange.dimensions.width;\n                            updateItem.height = currentChange.dimensions.height;\n                        }\n                        if (typeof currentChange.updateStyle !== 'undefined') {\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\n                        }\n                        if (typeof currentChange.resizing === 'boolean') {\n                            updateItem.resizing = currentChange.resizing;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'remove': {\n                        return res;\n                    }\n                }\n            }\n        }\n        res.push(updateItem);\n        return res;\n    }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n    id,\n    type: 'select',\n    selected,\n});\nfunction getSelectionChanges(items, selectedIds) {\n    return items.reduce((res, item) => {\n        const willBeSelected = selectedIds.includes(item.id);\n        if (!item.selected && willBeSelected) {\n            item.selected = true;\n            res.push(createSelectionChange(item.id, true));\n        }\n        else if (item.selected && !willBeSelected) {\n            item.selected = false;\n            res.push(createSelectionChange(item.id, false));\n        }\n        return res;\n    }, []);\n}\n\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$8 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$8, shallow);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onMouseDown = (event) => {\n        const { resetSelectedElements, domNode } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        const { x, y } = getEventPosition(event, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onMouseMove = (event) => {\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\n        const mousePos = getEventPosition(event, containerBounds.current);\n        const startX = userSelectionRect.startX ?? 0;\n        const startY = userSelectionRect.startY ?? 0;\n        const nextUserSelectRect = {\n            ...userSelectionRect,\n            x: mousePos.x < startX ? mousePos.x : startX,\n            y: mousePos.y < startY ? mousePos.y : startY,\n            width: Math.abs(mousePos.x - startX),\n            height: Math.abs(mousePos.y - startY),\n        };\n        const nodes = getNodes();\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n            prevSelectedNodesCount.current = selectedNodeIds.length;\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\n            if (changes.length) {\n                onNodesChange?.(changes);\n            }\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\n            if (changes.length) {\n                onEdgesChange?.(changes);\n            }\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n        });\n    };\n    const onMouseUp = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n        resetUserSelection();\n        onSelectionEnd?.(event);\n    };\n    const onMouseLeave = (event) => {\n        if (userSelectionActive) {\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n            onSelectionEnd?.(event);\n        }\n        resetUserSelection();\n    };\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    return (jsxs(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle, children: [children, jsx(UserSelection, {})] }));\n});\nPane.displayName = 'Pane';\n\nfunction isParentSelected(node, nodeInternals) {\n    if (!node.parentNode) {\n        return false;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === nodeRef.current)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n    return Array.from(nodeInternals.values())\n        .filter((n) => (n.selected || n.id === nodeId) &&\n        (!n.parentNode || !isParentSelected(n, nodeInternals)) &&\n        (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')))\n        .map((n) => ({\n        id: n.id,\n        position: n.position || { x: 0, y: 0 },\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\n        distance: {\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\n        },\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        extent: n.extent,\n        parentNode: n.parentNode,\n        width: n.width,\n        height: n.height,\n    }));\n}\nfunction clampNodeExtent(node, extent) {\n    if (!extent || extent === 'parent') {\n        return extent;\n    }\n    return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n    const clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n    let currentExtent = clampedNodeExtent;\n    if (node.extent === 'parent') {\n        if (node.parentNode && node.width && node.height) {\n            const parent = nodeInternals.get(node.parentNode);\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n            currentExtent =\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\n                    ? [\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\n                        [\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\n                        ],\n                    ]\n                    : currentExtent;\n        }\n        else {\n            onError?.('005', errorMessages['error005']());\n            currentExtent = clampedNodeExtent;\n        }\n    }\n    else if (node.extent && node.parentNode) {\n        const parent = nodeInternals.get(node.parentNode);\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n        currentExtent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    let parentPosition = { x: 0, y: 0 };\n    if (node.parentNode) {\n        const parentNode = nodeInternals.get(node.parentNode);\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n    }\n    const positionAbsolute = currentExtent && currentExtent !== 'parent'\n        ? clampPosition(nextPosition, currentExtent)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentPosition.x,\n            y: positionAbsolute.y - parentPosition.y,\n        },\n        positionAbsolute,\n    };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\n    const extentedDragItems = dragItems.map((n) => {\n        const node = nodeInternals.get(n.id);\n        return {\n            ...node,\n            position: n.position,\n            positionAbsolute: n.positionAbsolute,\n        };\n    });\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n    const handles = nodeElement.querySelectorAll(selector);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    const handlesArray = Array.from(handles);\n    const nodeBounds = nodeElement.getBoundingClientRect();\n    const nodeOffset = {\n        x: nodeBounds.width * nodeOrigin[0],\n        y: nodeBounds.height * nodeOrigin[1],\n    };\n    return handlesArray.map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\nfunction getMouseHandler(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const node = getState().nodeInternals.get(id);\n            if (node) {\n                handler(event, { ...node });\n            }\n        };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals, onError } = store.getState();\n    const node = nodeInternals.get(id);\n    if (!node) {\n        onError?.('012', errorMessages['error012'](id));\n        return;\n    }\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\nfunction useGetPointerPosition() {\n    const store = useStoreApi();\n    // returns the pointer position projected to the RF coordinate system\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\n        const { transform, snapGrid, snapToGrid } = store.getState();\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n        const pointerPos = {\n            x: (x - transform[0]) / transform[2],\n            y: (y - transform[1]) / transform[2],\n        };\n        // we need the snapped position in order to be able to skip unnecessary drag events\n        return {\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n            ...pointerPos,\n        };\n    }, []);\n    return getPointerPosition;\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const dragItems = useRef([]);\n    const lastPos = useRef({ x: null, y: null });\n    const autoPanId = useRef(0);\n    const containerBounds = useRef(null);\n    const mousePosition = useRef({ x: 0, y: 0 });\n    const dragEvent = useRef(null);\n    const autoPanStarted = useRef(false);\n    const getPointerPosition = useGetPointerPosition();\n    useEffect(() => {\n        if (nodeRef?.current) {\n            const selection = select(nodeRef.current);\n            const updateNodes = ({ x, y }) => {\n                const { nodeInternals, onNodeDrag, onSelectionDrag, updateNodePositions, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onError, } = store.getState();\n                lastPos.current = { x, y };\n                let hasChange = false;\n                let nodesBox = { x: 0, y: 0, x2: 0, y2: 0 };\n                if (dragItems.current.length > 1 && nodeExtent) {\n                    const rect = getRectOfNodes(dragItems.current, nodeOrigin);\n                    nodesBox = rectToBox(rect);\n                }\n                dragItems.current = dragItems.current.map((n) => {\n                    const nextPosition = { x: x - n.distance.x, y: y - n.distance.y };\n                    if (snapToGrid) {\n                        nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                        nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                    }\n                    // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n                    // based on its position so that the node stays at it's position relative to the selection.\n                    const adjustedNodeExtent = [\n                        [nodeExtent[0][0], nodeExtent[0][1]],\n                        [nodeExtent[1][0], nodeExtent[1][1]],\n                    ];\n                    if (dragItems.current.length > 1 && nodeExtent && !n.extent) {\n                        adjustedNodeExtent[0][0] = n.positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n                        adjustedNodeExtent[1][0] = n.positionAbsolute.x + (n.width ?? 0) - nodesBox.x2 + nodeExtent[1][0];\n                        adjustedNodeExtent[0][1] = n.positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n                        adjustedNodeExtent[1][1] = n.positionAbsolute.y + (n.height ?? 0) - nodesBox.y2 + nodeExtent[1][1];\n                    }\n                    const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, adjustedNodeExtent, nodeOrigin, onError);\n                    // we want to make sure that we only fire a change event when there is a change\n                    hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n                    n.position = updatedPos.position;\n                    n.positionAbsolute = updatedPos.positionAbsolute;\n                    return n;\n                });\n                if (!hasChange) {\n                    return;\n                }\n                updateNodePositions(dragItems.current, true, true);\n                setDragging(true);\n                const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n                if (onDrag && dragEvent.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onDrag(dragEvent.current, currentNode, nodes);\n                }\n            };\n            const autoPan = () => {\n                if (!containerBounds.current) {\n                    return;\n                }\n                const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n                if (xMovement !== 0 || yMovement !== 0) {\n                    const { transform, panBy } = store.getState();\n                    lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n                    lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n                    if (panBy({ x: xMovement, y: yMovement })) {\n                        updateNodes(lastPos.current);\n                    }\n                }\n                autoPanId.current = requestAnimationFrame(autoPan);\n            };\n            if (disabled) {\n                selection.on('.drag', null);\n            }\n            else {\n                const dragHandler = drag()\n                    .on('start', (event) => {\n                    const { nodeInternals, multiSelectionActive, domNode, nodesDraggable, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\n                    const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n                    if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n                        if (!nodeInternals.get(nodeId)?.selected) {\n                            // we need to reset selected nodes when selectNodesOnDrag=false\n                            unselectNodesAndEdges();\n                        }\n                    }\n                    if (nodeId && isSelectable && selectNodesOnDrag) {\n                        handleNodeClick({\n                            id: nodeId,\n                            store,\n                            nodeRef: nodeRef,\n                        });\n                    }\n                    const pointerPos = getPointerPosition(event);\n                    lastPos.current = pointerPos;\n                    dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n                    if (onStart && dragItems.current) {\n                        const [currentNode, nodes] = getEventHandlerParams({\n                            nodeId,\n                            dragItems: dragItems.current,\n                            nodeInternals,\n                        });\n                        onStart(event.sourceEvent, currentNode, nodes);\n                    }\n                    containerBounds.current = domNode?.getBoundingClientRect() || null;\n                    mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                })\n                    .on('drag', (event) => {\n                    const pointerPos = getPointerPosition(event);\n                    const { autoPanOnNodeDrag } = store.getState();\n                    if (!autoPanStarted.current && autoPanOnNodeDrag) {\n                        autoPanStarted.current = true;\n                        autoPan();\n                    }\n                    // skip events without movement\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\n                        dragItems.current) {\n                        dragEvent.current = event.sourceEvent;\n                        mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                        updateNodes(pointerPos);\n                    }\n                })\n                    .on('end', (event) => {\n                    setDragging(false);\n                    autoPanStarted.current = false;\n                    cancelAnimationFrame(autoPanId.current);\n                    if (dragItems.current) {\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n                        updateNodePositions(dragItems.current, false, false);\n                        if (onStop) {\n                            const [currentNode, nodes] = getEventHandlerParams({\n                                nodeId,\n                                dragItems: dragItems.current,\n                                nodeInternals,\n                            });\n                            onStop(event.sourceEvent, currentNode, nodes);\n                        }\n                    }\n                })\n                    .filter((event) => {\n                    const target = event.target;\n                    const isDraggable = !event.button &&\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n                    return isDraggable;\n                });\n                selection.call(dragHandler);\n                return () => {\n                    selection.on('.drag', null);\n                };\n            }\n        }\n    }, [\n        nodeRef,\n        disabled,\n        noDragClassName,\n        handleSelector,\n        isSelectable,\n        store,\n        nodeId,\n        selectNodesOnDrag,\n        getPointerPosition,\n    ]);\n    return dragging;\n}\n\nfunction useUpdateNodePositions() {\n    const store = useStoreApi();\n    const updatePositions = useCallback((params) => {\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid, onError, nodesDraggable } = store.getState();\n        const selectedNodes = getNodes().filter((n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')));\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\n        // if snap grid is enabled, we use that for the velocity.\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const factor = params.isShiftPressed ? 4 : 1;\n        const positionDiffX = params.x * xVelo * factor;\n        const positionDiffY = params.y * yVelo * factor;\n        const nodeUpdates = selectedNodes.map((n) => {\n            if (n.positionAbsolute) {\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\n                if (snapToGrid) {\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                }\n                const { positionAbsolute, position } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n                n.position = position;\n                n.positionAbsolute = positionAbsolute;\n            }\n            return n;\n        });\n        updateNodePositions(nodeUpdates, true, false);\n    }, []);\n    return updatePositions;\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nvar wrapNode = (NodeComponent) => {\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, }) => {\n        const store = useStoreApi();\n        const nodeRef = useRef(null);\n        const prevSourcePosition = useRef(sourcePosition);\n        const prevTargetPosition = useRef(targetPosition);\n        const prevType = useRef(type);\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n        const updatePositions = useUpdateNodePositions();\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n        const onSelectNodeHandler = (event) => {\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            }\n            if (onClick) {\n                const node = store.getState().nodeInternals.get(id);\n                if (node) {\n                    onClick(event, { ...node });\n                }\n            }\n        };\n        const onKeyDown = (event) => {\n            if (isInputDOMNode(event)) {\n                return;\n            }\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\n                const unselect = event.key === 'Escape';\n                handleNodeClick({\n                    id,\n                    store,\n                    unselect,\n                    nodeRef,\n                });\n            }\n            else if (!disableKeyboardA11y &&\n                isDraggable &&\n                selected &&\n                Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n                store.setState({\n                    ariaLiveMessage: `Moved selected node ${event.key\n                        .replace('Arrow', '')\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\n                });\n                updatePositions({\n                    x: arrowKeyDiffs[event.key].x,\n                    y: arrowKeyDiffs[event.key].y,\n                    isShiftPressed: event.shiftKey,\n                });\n            }\n        };\n        useEffect(() => {\n            if (nodeRef.current && !hidden) {\n                const currNode = nodeRef.current;\n                resizeObserver?.observe(currNode);\n                return () => resizeObserver?.unobserve(currNode);\n            }\n        }, [hidden]);\n        useEffect(() => {\n            // when the user programmatically changes the source or handle position, we re-initialize the node\n            const typeChanged = prevType.current !== type;\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n                if (typeChanged) {\n                    prevType.current = type;\n                }\n                if (sourcePosChanged) {\n                    prevSourcePosition.current = sourcePosition;\n                }\n                if (targetPosChanged) {\n                    prevTargetPosition.current = targetPosition;\n                }\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\n            }\n        }, [id, type, sourcePosition, targetPosition]);\n        const dragging = useDrag({\n            nodeRef,\n            disabled: hidden || !isDraggable,\n            noDragClassName,\n            handleSelector: dragHandle,\n            nodeId: id,\n            isSelectable,\n            selectNodesOnDrag,\n        });\n        if (hidden) {\n            return null;\n        }\n        return (jsx(\"div\", { className: cc([\n                'react-flow__node',\n                `react-flow__node-${type}`,\n                {\n                    // this is overwritable by passing `nopan` as a class name\n                    [noPanClassName]: isDraggable,\n                },\n                className,\n                {\n                    selected,\n                    selectable: isSelectable,\n                    parent: isParent,\n                    dragging,\n                },\n            ]), ref: nodeRef, style: {\n                zIndex,\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\n                visibility: initialized ? 'visible' : 'hidden',\n                ...style,\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel, children: jsx(Provider, { value: id, children: jsx(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }) }) }));\n    };\n    NodeWrapper.displayName = 'NodeWrapper';\n    return memo(NodeWrapper);\n};\n\nconst selector$7 = (s) => {\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\n    return {\n        ...getRectOfNodes(selectedNodes, s.nodeOrigin),\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n        userSelectionActive: s.userSelectionActive,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\n    const store = useStoreApi();\n    const { width, height, x: left, y: top, transformString, userSelectionActive } = useStore(selector$7, shallow);\n    const updatePositions = useUpdateNodePositions();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store\n                .getState()\n                .getNodes()\n                .filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            updatePositions({\n                x: arrowKeyDiffs[event.key].x,\n                y: arrowKeyDiffs[event.key].y,\n                isShiftPressed: event.shiftKey,\n            });\n        }\n    };\n    return (jsx(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        }, children: jsx(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n                top,\n                left,\n            } }) }));\n}\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.nodesSelectionActive;\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\n    const nodesSelectionActive = useStore(selector$6);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (jsx(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, children: jsxs(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode, children: [children, nodesSelectionActive && (jsx(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y }))] }) }));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\n        : s.getNodes(), [onlyRenderVisible]));\n    return nodes;\n}\n\nfunction createNodeTypes(nodeTypes) {\n    const standardTypes = {\n        input: wrapNode((nodeTypes.input || InputNode$1)),\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\n        group: wrapNode((nodeTypes.group || GroupNode)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(nodeTypes)\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\n    if (!width || !height) {\n        return { x, y };\n    }\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n        return { x, y };\n    }\n    return {\n        x: x - width * origin[0],\n        y: y - height * origin[1],\n    };\n};\n\nconst selector$5 = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError,\n});\nconst NodeRenderer = (props) => {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions, onError } = useStore(selector$5, shallow);\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n    const resizeObserverRef = useRef();\n    const resizeObserver = useMemo(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        const observer = new ResizeObserver((entries) => {\n            const updates = entries.map((entry) => ({\n                id: entry.target.getAttribute('data-id'),\n                nodeElement: entry.target,\n                forceUpdate: true,\n            }));\n            updateNodeDimensions(updates);\n        });\n        resizeObserverRef.current = observer;\n        return observer;\n    }, []);\n    useEffect(() => {\n        return () => {\n            resizeObserverRef?.current?.disconnect();\n        };\n    }, []);\n    return (jsx(\"div\", { className: \"react-flow__nodes\", style: containerStyle, children: nodes.map((node) => {\n            let nodeType = node.type || 'default';\n            if (!props.nodeTypes[nodeType]) {\n                onError?.('003', errorMessages['error003'](nodeType));\n                nodeType = 'default';\n            }\n            const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\n            const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n            const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n            const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n            const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n            const clampedPosition = props.nodeExtent\n                ? clampPosition(node.positionAbsolute, props.nodeExtent)\n                : node.positionAbsolute;\n            const posX = clampedPosition?.x ?? 0;\n            const posY = clampedPosition?.y ?? 0;\n            const posOrigin = getPositionWithOrigin({\n                x: posX,\n                y: posY,\n                width: node.width ?? 0,\n                height: node.height ?? 0,\n                origin: props.nodeOrigin,\n            });\n            return (jsx(NodeComponent, { id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel }, node.id));\n        }) }));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (jsx(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nconst alwaysValidConnection = () => true;\nvar wrapEdge = (EdgeComponent) => {\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, isUpdatable, pathOptions, interactionWidth, }) => {\n        const edgeRef = useRef(null);\n        const [updateHover, setUpdateHover] = useState(false);\n        const [updating, setUpdating] = useState(false);\n        const store = useStoreApi();\n        const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\n        const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\n        if (hidden) {\n            return null;\n        }\n        const onEdgeClick = (event) => {\n            const { edges, addSelectedEdges } = store.getState();\n            if (elementsSelectable) {\n                store.setState({ nodesSelectionActive: false });\n                addSelectedEdges([id]);\n            }\n            if (onClick) {\n                const edge = edges.find((e) => e.id === id);\n                onClick(event, edge);\n            }\n        };\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n        const handleEdgeUpdater = (event, isSourceHandle) => {\n            // avoid triggering edge updater if mouse btn is not left\n            if (event.button !== 0) {\n                return;\n            }\n            const { edges, isValidConnection: isValidConnectionStore } = store.getState();\n            const nodeId = isSourceHandle ? target : source;\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n            const handleType = isSourceHandle ? 'target' : 'source';\n            const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n            const isTarget = isSourceHandle;\n            const edge = edges.find((e) => e.id === id);\n            setUpdating(true);\n            onEdgeUpdateStart?.(event, edge, handleType);\n            const _onEdgeUpdateEnd = (evt) => {\n                setUpdating(false);\n                onEdgeUpdateEnd?.(evt, edge, handleType);\n            };\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectEdge,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n                edgeUpdaterType: handleType,\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\n            });\n        };\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n        const inactive = !elementsSelectable && !onClick;\n        const onKeyDown = (event) => {\n            if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    edgeRef.current?.blur();\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n        };\n        return (jsxs(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${type}`,\n                className,\n                { selected, animated, inactive, updating: updateHover },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : 'img', \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef, children: [!updating && (jsx(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })), isUpdatable && (jsxs(Fragment, { children: [(isUpdatable === 'source' || isUpdatable === true) && (jsx(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" })), (isUpdatable === 'target' || isUpdatable === true) && (jsx(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" }))] }))] }));\n    };\n    EdgeWrapper.displayName = 'EdgeWrapper';\n    return memo(EdgeWrapper);\n};\n\nfunction createEdgeTypes(edgeTypes) {\n    const standardTypes = {\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\n        step: wrapEdge((edgeTypes.step || StepEdge)),\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(edgeTypes)\n        .filter((k) => !['default', 'bezier'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n    const x = (handle?.x || 0) + nodeRect.x;\n    const y = (handle?.y || 0) + nodeRect.y;\n    const width = handle?.width || nodeRect.width;\n    const height = handle?.height || nodeRect.height;\n    switch (position) {\n        case Position.Top:\n            return {\n                x: x + width / 2,\n                y,\n            };\n        case Position.Right:\n            return {\n                x: x + width,\n                y: y + height / 2,\n            };\n        case Position.Bottom:\n            return {\n                x: x + width / 2,\n                y: y + height,\n            };\n        case Position.Left:\n            return {\n                x,\n                y: y + height / 2,\n            };\n    }\n}\nfunction getHandle(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    if (bounds.length === 1 || !handleId) {\n        return bounds[0];\n    }\n    else if (handleId) {\n        return bounds.find((d) => d.id === handleId) || null;\n    }\n    return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n    return {\n        sourceX: sourceHandlePos.x,\n        sourceY: sourceHandlePos.y,\n        targetX: targetHandlePos.x,\n        targetY: targetHandlePos.y,\n    };\n};\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\n    const edgeBox = {\n        x: Math.min(sourcePos.x, targetPos.x),\n        y: Math.min(sourcePos.y, targetPos.y),\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\n    };\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewBox = rectToBox({\n        x: (0 - transform[0]) / transform[2],\n        y: (0 - transform[1]) / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    });\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n    const isValid = handleBounds &&\n        node?.width &&\n        node?.height &&\n        typeof node?.positionAbsolute?.x !== 'undefined' &&\n        typeof node?.positionAbsolute?.y !== 'undefined';\n    return [\n        {\n            x: node?.positionAbsolute?.x || 0,\n            y: node?.positionAbsolute?.y || 0,\n            width: node?.width || 0,\n            height: node?.height || 0,\n        },\n        handleBounds,\n        !!isValid,\n    ];\n}\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n    let maxLevel = -1;\n    const levelLookup = edges.reduce((tree, edge) => {\n        const hasZIndex = isNumeric(edge.zIndex);\n        let z = hasZIndex ? edge.zIndex : 0;\n        if (elevateEdgesOnSelect) {\n            const targetNode = nodeInternals.get(edge.target);\n            const sourceNode = nodeInternals.get(edge.source);\n            const edgeOrConnectedNodeSelected = edge.selected || targetNode?.selected || sourceNode?.selected;\n            const selectedZIndex = Math.max(sourceNode?.[internalsSymbol]?.z || 0, targetNode?.[internalsSymbol]?.z || 0, 1000);\n            z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n        }\n        if (tree[z]) {\n            tree[z].push(edge);\n        }\n        else {\n            tree[z] = [edge];\n        }\n        maxLevel = z > maxLevel ? z : maxLevel;\n        return tree;\n    }, {});\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n        const level = +key;\n        return {\n            edges,\n            level,\n            isMaxLevel: level === maxLevel,\n        };\n    });\n    if (edgeTree.length === 0) {\n        return defaultEdgeTree;\n    }\n    return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n    const edges = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges;\n        }\n        return s.edges.filter((e) => {\n            const sourceNode = nodeInternals.get(e.source);\n            const targetNode = nodeInternals.get(e.target);\n            return (sourceNode?.width &&\n                sourceNode?.height &&\n                targetNode?.width &&\n                targetNode?.height &&\n                isEdgeVisible({\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\n                    sourceWidth: sourceNode.width,\n                    sourceHeight: sourceNode.height,\n                    targetWidth: targetNode.width,\n                    targetHeight: targetNode.height,\n                    width: s.width,\n                    height: s.height,\n                    transform: s.transform,\n                }));\n        });\n    }, [onlyRenderVisible, nodeInternals]));\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: color, points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['error009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (jsx(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\", children: jsx(Symbol, { color: color, strokeWidth: strokeWidth }) }));\n};\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\n    const ids = [];\n    return s.edges\n        .reduce((markers, edge) => {\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, rfId);\n                if (!ids.includes(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.push(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \n    // the id includes all marker options, so we just need to look at that part of the marker\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n    return (jsx(\"defs\", { children: markers.map((marker) => (jsx(Marker, { id: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient }, marker.id))) }));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$4 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError,\n});\nconst EdgeRenderer = ({ defaultMarkerColor, onlyRenderVisibleElements, elevateEdgesOnSelect, rfId, edgeTypes, noPanClassName, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, edgeUpdaterRadius, onEdgeDoubleClick, onEdgeUpdateStart, onEdgeUpdateEnd, children, }) => {\n    const { edgesFocusable, edgesUpdatable, elementsSelectable, width, height, connectionMode, nodeInternals, onError } = useStore(selector$4, shallow);\n    const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n    if (!width) {\n        return null;\n    }\n    return (jsxs(Fragment, { children: [edgeTree.map(({ level, edges, isMaxLevel }) => (jsxs(\"svg\", { style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\", children: [isMaxLevel && jsx(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }), jsx(\"g\", { children: edges.map((edge) => {\n                            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n                            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n                            if (!sourceIsValid || !targetIsValid) {\n                                return null;\n                            }\n                            let edgeType = edge.type || 'default';\n                            if (!edgeTypes[edgeType]) {\n                                onError?.('011', errorMessages['error011'](edgeType));\n                                edgeType = 'default';\n                            }\n                            const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n                            // when connection type is loose we can define all handles as sources and connect source -> source\n                            const targetNodeHandles = connectionMode === ConnectionMode.Strict\n                                ? targetHandleBounds.target\n                                : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n                            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n                            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n                            const sourcePosition = sourceHandle?.position || Position.Bottom;\n                            const targetPosition = targetHandle?.position || Position.Top;\n                            const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n                            const isUpdatable = typeof onEdgeUpdate !== 'undefined' &&\n                                (edge.updatable || (edgesUpdatable && typeof edge.updatable === 'undefined'));\n                            if (!sourceHandle || !targetHandle) {\n                                onError?.('008', errorMessages['error008'](sourceHandle, edge));\n                                return null;\n                            }\n                            const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n                            return (jsx(EdgeComponent, { id: edge.id, className: cc([edge.className, noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: onEdgeUpdate, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, edgeUpdaterRadius: edgeUpdaterRadius, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, rfId: rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, isUpdatable: isUpdatable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth }, edge.id));\n                        }) })] }, level))), children] }));\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$3 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$3);\n    return (jsx(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform }, children: children }));\n}\n\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\nconst ConnectionLine = ({ nodeId, handleType, style, type = ConnectionLineType.Bezier, CustomComponent, connectionStatus, }) => {\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode,\n    }), [nodeId]), shallow);\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n    let handleBounds = fromHandleBounds?.[handleType];\n    if (connectionMode === ConnectionMode.Loose) {\n        handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n    }\n    if (!fromNode || !handleBounds) {\n        return null;\n    }\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n    const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n    const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n    const fromPosition = fromHandle?.position;\n    const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n    if (!fromPosition || !toPosition) {\n        return null;\n    }\n    if (CustomComponent) {\n        return (jsx(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: connectionStatus }));\n    }\n    let dAttr = '';\n    const pathParams = {\n        sourceX: fromX,\n        sourceY: fromY,\n        sourcePosition: fromPosition,\n        targetX: toX,\n        targetY: toY,\n        targetPosition: toPosition,\n    };\n    if (type === ConnectionLineType.Bezier) {\n        // we assume the destination position is opposite to the source position\n        [dAttr] = getBezierPath(pathParams);\n    }\n    else if (type === ConnectionLineType.Step) {\n        [dAttr] = getSmoothStepPath({\n            ...pathParams,\n            borderRadius: 0,\n        });\n    }\n    else if (type === ConnectionLineType.SmoothStep) {\n        [dAttr] = getSmoothStepPath(pathParams);\n    }\n    else if (type === ConnectionLineType.SimpleBezier) {\n        [dAttr] = getSimpleBezierPath(pathParams);\n    }\n    else {\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n    }\n    return jsx(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = (s) => ({\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodeId, handleType, nodesConnectable, width, height, connectionStatus } = useStore(selector$2, shallow);\n    const isValid = !!(nodeId && handleType && width && nodesConnectable);\n    if (!isValid) {\n        return null;\n    }\n    return (jsx(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\", children: jsx(\"g\", { className: cc(['react-flow__connection', connectionStatus]), children: jsx(ConnectionLine, { nodeId: nodeId, handleType: handleType, style: style, type: type, CustomComponent: component, connectionStatus: connectionStatus }) }) }));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n    const typesKeysRef = useRef(null);\n    const store = useStoreApi();\n    const typesParsed = useMemo(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\n            if (shallow(typesKeysRef.current, typeKeys)) {\n                store.getState().onError?.('002', errorMessages['error002']());\n            }\n            typesKeysRef.current = typeKeys;\n        }\n        return createTypes(nodeOrEdgeTypes);\n    }, [nodeOrEdgeTypes]);\n    return typesParsed;\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n    useOnInitHandler(onInit);\n    return (jsx(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, children: jsxs(Viewport, { children: [jsx(EdgeRenderer$1, { edgeTypes: edgeTypesWrapped, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId, children: jsx(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle }) }), jsx(\"div\", { className: \"react-flow__edgelabel-renderer\" }), jsx(NodeRenderer$1, { nodeTypes: nodeTypesWrapped, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId })] }) }));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst initialState = {\n    rfId: '1',\n    width: 0,\n    height: 0,\n    transform: [0, 0, 1],\n    nodeInternals: new Map(),\n    edges: [],\n    onNodesChange: null,\n    onEdgesChange: null,\n    hasDefaultNodes: false,\n    hasDefaultEdges: false,\n    d3Zoom: null,\n    d3Selection: null,\n    d3ZoomHandler: undefined,\n    minZoom: 0.5,\n    maxZoom: 2,\n    translateExtent: infiniteExtent,\n    nodeExtent: infiniteExtent,\n    nodesSelectionActive: false,\n    userSelectionActive: false,\n    userSelectionRect: null,\n    connectionNodeId: null,\n    connectionHandleId: null,\n    connectionHandleType: 'source',\n    connectionPosition: { x: 0, y: 0 },\n    connectionStatus: null,\n    connectionMode: ConnectionMode.Strict,\n    domNode: null,\n    paneDragging: false,\n    noPanClassName: 'nopan',\n    nodeOrigin: [0, 0],\n    snapGrid: [15, 15],\n    snapToGrid: false,\n    nodesDraggable: true,\n    nodesConnectable: true,\n    nodesFocusable: true,\n    edgesFocusable: true,\n    edgesUpdatable: true,\n    elementsSelectable: true,\n    elevateNodesOnSelect: true,\n    fitViewOnInit: false,\n    fitViewOnInitDone: false,\n    fitViewOnInitOptions: undefined,\n    multiSelectionActive: false,\n    connectionStartHandle: null,\n    connectionEndHandle: null,\n    connectionClickStartHandle: null,\n    connectOnClick: true,\n    ariaLiveMessage: '',\n    autoPanOnConnect: true,\n    autoPanOnNodeDrag: true,\n    connectionRadius: 20,\n    onError: devWarn,\n    isValidConnection: undefined,\n};\n\nconst createRFStore = () => createWithEqualityFn((set, get) => ({\n    ...initialState,\n    setNodes: (nodes) => {\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\n    },\n    getNodes: () => {\n        return Array.from(get().nodeInternals.values());\n    },\n    setEdges: (edges) => {\n        const { defaultEdgeOptions = {} } = get();\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        const hasDefaultNodes = typeof nodes !== 'undefined';\n        const hasDefaultEdges = typeof edges !== 'undefined';\n        const nodeInternals = hasDefaultNodes\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\n            : new Map();\n        const nextEdges = hasDefaultEdges ? edges : [];\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\n    },\n    updateNodeDimensions: (updates) => {\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n            return;\n        }\n        const style = window.getComputedStyle(viewportNode);\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n        const changes = updates.reduce((res, update) => {\n            const node = nodeInternals.get(update.id);\n            if (node) {\n                const dimensions = getDimensions(update.nodeElement);\n                const doUpdate = !!(dimensions.width &&\n                    dimensions.height &&\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n                if (doUpdate) {\n                    nodeInternals.set(node.id, {\n                        ...node,\n                        [internalsSymbol]: {\n                            ...node[internalsSymbol],\n                            handleBounds: {\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\n                            },\n                        },\n                        ...dimensions,\n                    });\n                    res.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                }\n            }\n            return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\n        if (changes?.length > 0) {\n            onNodesChange?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n        const { triggerNodeChanges } = get();\n        const changes = nodeDragItems.map((node) => {\n            const change = {\n                id: node.id,\n                type: 'position',\n                dragging,\n            };\n            if (positionChanged) {\n                change.positionAbsolute = node.positionAbsolute;\n                change.position = node.position;\n            }\n            return change;\n        });\n        triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const nodes = applyNodeChanges(changes, getNodes());\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n                set({ nodeInternals: nextNodeInternals });\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedNodes;\n        let changedEdges = null;\n        if (multiSelectionActive) {\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n        }\n        else {\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n            changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedEdges;\n        let changedNodes = null;\n        if (multiSelectionActive) {\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n        }\n        else {\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n            changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, getNodes } = get();\n        const nodesToUnselect = nodes ? nodes : getNodes();\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const changedNodes = nodesToUnselect.map((n) => {\n            n.selected = false;\n            return createSelectionChange(n.id, false);\n        });\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    setMinZoom: (minZoom) => {\n        const { d3Zoom, maxZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { d3Zoom, minZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().d3Zoom?.translateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    resetSelectedElements: () => {\n        const { edges, getNodes } = get();\n        const nodes = getNodes();\n        const nodesToUnselect = nodes\n            .filter((e) => e.selected)\n            .map((n) => createSelectionChange(n.id, false));\n        const edgesToUnselect = edges\n            .filter((e) => e.selected)\n            .map((e) => createSelectionChange(e.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes: nodesToUnselect,\n            changedEdges: edgesToUnselect,\n            get,\n            set,\n        });\n    },\n    setNodeExtent: (nodeExtent) => {\n        const { nodeInternals } = get();\n        nodeInternals.forEach((node) => {\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n            nodeExtent,\n            nodeInternals: new Map(nodeInternals),\n        });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, d3Zoom, d3Selection, translateExtent } = get();\n        if (!d3Zoom || !d3Selection || (!delta.x && !delta.y)) {\n            return false;\n        }\n        const nextTransform = zoomIdentity\n            .translate(transform[0] + delta.x, transform[1] + delta.y)\n            .scale(transform[2]);\n        const extent = [\n            [0, 0],\n            [width, height],\n        ];\n        const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n        const transformChanged = transform[0] !== constrainedTransform.x ||\n            transform[1] !== constrainedTransform.y ||\n            transform[2] !== constrainedTransform.k;\n        return transformChanged;\n    },\n    cancelConnection: () => set({\n        connectionNodeId: initialState.connectionNodeId,\n        connectionHandleId: initialState.connectionHandleId,\n        connectionHandleType: initialState.connectionHandleType,\n        connectionStatus: initialState.connectionStatus,\n        connectionStartHandle: initialState.connectionStartHandle,\n        connectionEndHandle: initialState.connectionEndHandle,\n    }),\n    reset: () => set({ ...initialState }),\n}), Object.is);\n\nconst ReactFlowProvider = ({ children }) => {\n    const storeRef = useRef(null);\n    if (!storeRef.current) {\n        storeRef.current = createRFStore();\n    }\n    return jsx(Provider$1, { value: storeRef.current, children: children });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return jsx(Fragment, { children: children });\n    }\n    return jsx(ReactFlowProvider, { children: children });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\nconst defaultNodeTypes = {\n    input: InputNode$1,\n    default: DefaultNode$1,\n    output: OutputNode$1,\n    group: GroupNode,\n};\nconst defaultEdgeTypes = {\n    default: BezierEdge,\n    straight: StraightEdge,\n    step: StepEdge,\n    smoothstep: SmoothStepEdge,\n    simplebezier: SimpleBezierEdge,\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = isMacOs() ? 'Meta' : 'Control', zoomActivationKeyCode = isMacOs() ? 'Meta' : 'Control', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, edgesUpdatable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, autoPanOnConnect = true, autoPanOnNodeDrag = true, connectionRadius = 20, isValidConnection, onError, style, id, ...rest }, ref) => {\n    const rfId = id || '1';\n    return (jsx(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id, children: jsxs(Wrapper, { children: [jsx(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypes, edgeTypes: edgeTypes, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }), jsx(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, edgesUpdatable: edgesUpdatable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection }), jsx(Wrapper$1, { onSelectionChange: onSelectionChange }), children, jsx(Attribution, { proOptions: proOptions, position: attributionPosition }), jsx(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y })] }) }));\n});\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$1);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeDimensions } = store.getState();\n        const updateIds = Array.isArray(id) ? id : [id];\n        const updates = updateIds.reduce((res, updateId) => {\n            const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${updateId}\"]`);\n            if (nodeElement) {\n                res.push({ id: updateId, nodeElement, forceUpdate: true });\n            }\n            return res;\n        }, []);\n        requestAnimationFrame(() => updateNodeDimensions(updates));\n    }, []);\n}\n\nconst nodesSelector = (state) => state.getNodes();\nfunction useNodes() {\n    const nodes = useStore(nodesSelector, shallow);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\nfunction useEdges() {\n    const edges = useStore(edgesSelector, shallow);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n    return (initialItems) => {\n        const [items, setItems] = useState(initialItems);\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\n        return [items, setItems, onItemsChange];\n    };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onSelectionChange: onChange });\n    }, [onChange]);\n}\n\nconst selector = (options) => (s) => {\n    if (s.nodeInternals.size === 0) {\n        return false;\n    }\n    return s\n        .getNodes()\n        .filter((n) => (options.includeHiddenNodes ? true : !n.hidden))\n        .every((n) => n[internalsSymbol]?.handleBounds !== undefined);\n};\nconst defaultOptions = {\n    includeHiddenNodes: false,\n};\nfunction useNodesInitialized(options = defaultOptions) {\n    const initialized = useStore(selector(options));\n    return initialized;\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}