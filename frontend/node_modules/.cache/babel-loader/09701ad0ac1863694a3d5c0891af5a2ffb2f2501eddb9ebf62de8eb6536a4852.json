{"ast":null,"code":"var _jsxFileName = \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001/frontend/src/ui.js\",\n  _s = $RefreshSig$();\n// ui.js\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store';\nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/inputNode';\nimport { LLMNode } from './nodes/llmNode';\nimport { OutputNode } from './nodes/outputNode';\nimport { TextNode } from './nodes/textNode';\nimport { Container, Paper, Typography } from '@mui/material';\nimport 'reactflow/dist/style.css';\nimport './index.css'; // Ensure Tailwind CSS is imported here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gridSize = 20;\nconst proOptions = {\n  hideAttribution: true\n};\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode\n};\nconst selector = state => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect\n});\nexport const PipelineUI = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const {\n    nodes,\n    edges,\n    getNodeID,\n    addNode,\n    onNodesChange,\n    onEdgesChange,\n    onConnect\n  } = useStore(selector, shallow);\n  const getInitNodeData = (nodeID, type) => {\n    let nodeData = {\n      id: nodeID,\n      nodeType: `${type}`\n    };\n    return nodeData;\n  };\n  const onDrop = useCallback(event => {\n    var _event$dataTransfer;\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    if (event !== null && event !== void 0 && (_event$dataTransfer = event.dataTransfer) !== null && _event$dataTransfer !== void 0 && _event$dataTransfer.getData('application/reactflow')) {\n      const appData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\n      const type = appData === null || appData === void 0 ? void 0 : appData.nodeType;\n      if (typeof type === 'undefined' || !type) {\n        return;\n      }\n      const position = reactFlowInstance.project({\n        x: event.clientX - reactFlowBounds.left,\n        y: event.clientY - reactFlowBounds.top\n      });\n      const nodeID = getNodeID(type);\n      const newNode = {\n        id: nodeID,\n        type,\n        position,\n        data: getInitNodeData(nodeID, type)\n      };\n      addNode(newNode);\n    }\n  }, [reactFlowInstance, getNodeID, addNode]);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"flex flex-col items-center justify-center h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Drag and Drop Pipeline UI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: \"w-full h-3/4 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: reactFlowWrapper,\n        className: \"w-full h-full\",\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          onInit: setReactFlowInstance,\n          nodeTypes: nodeTypes,\n          proOptions: proOptions,\n          snapGrid: [gridSize, gridSize],\n          connectionLineType: \"smoothstep\",\n          children: [/*#__PURE__*/_jsxDEV(Background, {\n            color: \"#aaa\",\n            gap: gridSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(PipelineUI, \"8S0fNEPSJYX+186gM+BCUkatIZk=\", false, function () {\n  return [useStore];\n});\n_c = PipelineUI;\nvar _c;\n$RefreshReg$(_c, \"PipelineUI\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","Controls","Background","MiniMap","useStore","shallow","InputNode","LLMNode","OutputNode","TextNode","Container","Paper","Typography","jsxDEV","_jsxDEV","gridSize","proOptions","hideAttribution","nodeTypes","customInput","llm","customOutput","text","selector","state","nodes","edges","getNodeID","addNode","onNodesChange","onEdgesChange","onConnect","PipelineUI","_s","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","getInitNodeData","nodeID","type","nodeData","id","nodeType","onDrop","event","_event$dataTransfer","preventDefault","reactFlowBounds","current","getBoundingClientRect","dataTransfer","getData","appData","JSON","parse","position","project","x","clientX","left","y","clientY","top","newNode","data","onDragOver","dropEffect","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","elevation","ref","onInit","snapGrid","connectionLineType","color","gap","_c","$RefreshReg$"],"sources":["/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/frontend-20240915T063519Z-001/frontend/src/ui.js"],"sourcesContent":["// ui.js\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store';\nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/inputNode';\nimport { LLMNode } from './nodes/llmNode';\nimport { OutputNode } from './nodes/outputNode';\nimport { TextNode } from './nodes/textNode';\nimport { Container, Paper, Typography } from '@mui/material';\n\nimport 'reactflow/dist/style.css';\nimport './index.css'; // Ensure Tailwind CSS is imported here\n\nconst gridSize = 20;\nconst proOptions = { hideAttribution: true };\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode,\n};\n\nconst selector = (state) => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect,\n});\n\nexport const PipelineUI = () => {\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const {\n    nodes,\n    edges,\n    getNodeID,\n    addNode,\n    onNodesChange,\n    onEdgesChange,\n    onConnect\n  } = useStore(selector, shallow);\n\n  const getInitNodeData = (nodeID, type) => {\n    let nodeData = { id: nodeID, nodeType: `${type}` };\n    return nodeData;\n  };\n\n  const onDrop = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n      if (event?.dataTransfer?.getData('application/reactflow')) {\n        const appData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\n        const type = appData?.nodeType;\n\n        if (typeof type === 'undefined' || !type) {\n          return;\n        }\n\n        const position = reactFlowInstance.project({\n          x: event.clientX - reactFlowBounds.left,\n          y: event.clientY - reactFlowBounds.top,\n        });\n\n        const nodeID = getNodeID(type);\n        const newNode = {\n          id: nodeID,\n          type,\n          position,\n          data: getInitNodeData(nodeID, type),\n        };\n\n        addNode(newNode);\n      }\n    },\n    [reactFlowInstance, getNodeID, addNode]\n  );\n\n  const onDragOver = useCallback((event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  return (\n    <Container className=\"flex flex-col items-center justify-center h-screen\">\n      <Typography variant=\"h4\" gutterBottom>\n        Drag and Drop Pipeline UI\n      </Typography>\n      <Paper elevation={3} className=\"w-full h-3/4 p-4\">\n        <div ref={reactFlowWrapper} className=\"w-full h-full\">\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n            onInit={setReactFlowInstance}\n            nodeTypes={nodeTypes}\n            proOptions={proOptions}\n            snapGrid={[gridSize, gridSize]}\n            connectionLineType='smoothstep'\n          >\n            <Background color=\"#aaa\" gap={gridSize} />\n            <Controls />\n            <MiniMap />\n          </ReactFlow>\n        </div>\n      </Paper>\n    </Container>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}