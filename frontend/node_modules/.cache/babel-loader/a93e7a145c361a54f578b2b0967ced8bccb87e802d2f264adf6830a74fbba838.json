{"ast":null,"code":"var _jsxFileName = \"/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/Prashant_Kumar_technical_assessment/frontend/src/submit.js\";\nimport React from 'react';\n\n/**\n * Submits the nodes and edges data to the backend and displays the response.\n * @param {Array} nodes - The list of nodes.\n * @param {Array} edges - The list of edges.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst submitPipeline = async (nodes, edges) => {\n  try {\n    console.log('Submitting nodes:', nodes); // Debugging line\n    console.log('Submitting edges:', edges); // Debugging line\n\n    const response = await fetch('http://localhost:8000/pipelines/parse', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        nodes,\n        edges\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    console.log('Received data:', data); // Debugging line\n\n    alert(`Pipeline Information:\\n- Number of nodes: ${data.num_nodes}\\n- Number of edges: ${data.num_edges}\\n- Is the pipeline a DAG: ${data.is_dag ? 'Yes' : 'No'}`);\n  } catch (error) {\n    console.error('There was a problem with the fetch operation:', error);\n    alert('Failed to submit the pipeline. Please check your backend connection.');\n  }\n};\n\n/**\n * SubmitButton component that triggers the submitPipeline function.\n * @param {Object} props - The props object.\n * @param {Array} props.nodes - The list of nodes.\n * @param {Array} props.edges - The list of edges.\n * @param {Function} props.onGenerateData - Function to generate new random data.\n */\nconst SubmitButton = ({\n  nodes,\n  edges,\n  onGenerateData\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        submitPipeline(nodes, edges);\n        onGenerateData(); // Regenerate data after submission\n      },\n\n      style: {\n        padding: '10px 20px',\n        borderRadius: '8px',\n        backgroundColor: '#6072da',\n        color: '#fff',\n        border: '2px solid #040627',\n        cursor: 'pointer',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        marginTop: '20px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n      },\n      children: \"Submit Pipeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = SubmitButton;\nexport { SubmitButton, submitPipeline };\nvar _c;\n$RefreshReg$(_c, \"SubmitButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","submitPipeline","nodes","edges","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","alert","num_nodes","num_edges","is_dag","error","SubmitButton","onGenerateData","children","onClick","style","padding","borderRadius","backgroundColor","color","border","cursor","fontSize","fontWeight","marginTop","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/user/13125fdb-ae7d-4997-aceb-5ecc6c3abf3d3/Projects/Prashant_Kumar_technical_assessment/frontend/src/submit.js"],"sourcesContent":["import React from 'react';\n\n/**\n * Submits the nodes and edges data to the backend and displays the response.\n * @param {Array} nodes - The list of nodes.\n * @param {Array} edges - The list of edges.\n */\nconst submitPipeline = async (nodes, edges) => {\n  try {\n    console.log('Submitting nodes:', nodes);  // Debugging line\n    console.log('Submitting edges:', edges);  // Debugging line\n\n    const response = await fetch('http://localhost:8000/pipelines/parse', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ nodes, edges }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    const data = await response.json();\n    console.log('Received data:', data);  // Debugging line\n\n    alert(`Pipeline Information:\\n- Number of nodes: ${data.num_nodes}\\n- Number of edges: ${data.num_edges}\\n- Is the pipeline a DAG: ${data.is_dag ? 'Yes' : 'No'}`);\n  } catch (error) {\n    console.error('There was a problem with the fetch operation:', error);\n    alert('Failed to submit the pipeline. Please check your backend connection.');\n  }\n};\n\n/**\n * SubmitButton component that triggers the submitPipeline function.\n * @param {Object} props - The props object.\n * @param {Array} props.nodes - The list of nodes.\n * @param {Array} props.edges - The list of edges.\n * @param {Function} props.onGenerateData - Function to generate new random data.\n */\nconst SubmitButton = ({ nodes, edges, onGenerateData }) => {\n  return (\n    <div>\n      <button\n        onClick={() => {\n          submitPipeline(nodes, edges);\n          onGenerateData();  // Regenerate data after submission\n        }}\n        style={{\n          padding: '10px 20px',\n          borderRadius: '8px',\n          backgroundColor: '#6072da',\n          color: '#fff',\n          border: '2px solid #040627',\n          cursor: 'pointer',\n          fontSize: '16px',\n          fontWeight: 'bold',\n          marginTop: '20px',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        }}\n      >\n        Submit Pipeline\n      </button>\n    </div>\n  );\n};\n\nexport { SubmitButton, submitPipeline };\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,cAAc,GAAG,MAAAA,CAAOC,KAAK,EAAEC,KAAK,KAAK;EAC7C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,KAAK,CAAC,CAAC,CAAE;IAC1CE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC,CAAC,CAAE;;IAE1C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,KAAK;QAAEC;MAAM,CAAC;IACvC,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClCZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEU,IAAI,CAAC,CAAC,CAAE;;IAEtCE,KAAK,CAAE,6CAA4CF,IAAI,CAACG,SAAU,wBAAuBH,IAAI,CAACI,SAAU,8BAA6BJ,IAAI,CAACK,MAAM,GAAG,KAAK,GAAG,IAAK,EAAC,CAAC;EACpK,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdjB,OAAO,CAACiB,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACrEJ,KAAK,CAAC,sEAAsE,CAAC;EAC/E;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMK,YAAY,GAAGA,CAAC;EAAEpB,KAAK;EAAEC,KAAK;EAAEoB;AAAe,CAAC,KAAK;EACzD,oBACEvB,OAAA;IAAAwB,QAAA,eACExB,OAAA;MACEyB,OAAO,EAAEA,CAAA,KAAM;QACbxB,cAAc,CAACC,KAAK,EAAEC,KAAK,CAAC;QAC5BoB,cAAc,CAAC,CAAC,CAAC,CAAE;MACrB,CAAE;;MACFG,KAAK,EAAE;QACLC,OAAO,EAAE,WAAW;QACpBC,YAAY,EAAE,KAAK;QACnBC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,mBAAmB;QAC3BC,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,MAAM;QAClBC,SAAS,EAAE,MAAM;QACjBC,SAAS,EAAE;MACb,CAAE;MAAAZ,QAAA,EACH;IAED;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACC,EAAA,GAzBInB,YAAY;AA2BlB,SAASA,YAAY,EAAErB,cAAc;AAAG,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}